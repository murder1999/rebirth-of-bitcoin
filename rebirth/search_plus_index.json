{"./":{"url":"./","title":"比特币重生计划：重返创世纪","summary":"比特币诞生至今，已经过了十个年头。在此期间，因比特币几年的扩容争议无果，比特币分叉为多个分支。尽管比特币的 Ticker 多次变更，Bitcoin SV，即原版的比特币，旨在恢复原始比特币协议，保持其协议稳定且允许其大规模扩容。Bitcoin SV 将秉承维护中本聪在 2008 年白皮书《比特币：一个点对点电子现金系统》中所阐述的愿景。","keywords":"","body":"Rebirth of Bitcoin: Back to Genesis 比特币诞生至今，已经过了十个年头。在此期间，因比特币几年的 扩容争议 无果，比特币分叉为 Bitcoin Core 和 Bitcoin Cash，随后又分叉为 Bitcoin ABC 和 Bitcoin SV。 尽管比特币的 Ticker 多次变更，Bitcoin SV，即原版的比特币，旨在恢复原始比特币协议，保持其协议稳定且允许其大规模扩容。Bitcoin SV 将秉承维护中本聪在 2008 年白皮书《比特币：一个点对点电子现金系统》中所阐述的愿景。 “比特币的本质是，第 0.1 版一经发布，其核心设计即已固定，并在整个生命周期中保持不变。” - 中本聪（Satoshi Nakamoto) 尽管中本聪很早就确定了比特币经济激励和自由竞争的核心设计的本质，太多的人认为比特币协议不够完美而尝试在上面画蛇添足。尽管事实上，中本聪的设计一直都未能得以完全实现，比特币还有着无限的潜力等待着人们发掘。 本项目为「比特币重生：重返创世纪」计划，旨在阐述比特币原始设计的来龙去脉，展现协议稳定与去除人为限制的意义，让读者能以此书为入门参考，了解比特币 (BSV) 的应用与开发，领会中本聪设计的哲学思想，发掘其中鲜为人知的精妙之处，更好地迎接 2020 年 2 月的「创世纪」升级计划的到来。 前天，在顺利实现 Quasar 升级之后，Bitcoin SV 在主网上打出了 256M 的区块，正如当年中本聪所说的那样： “现有的 Visa 信用卡网络每天在全球范围内处理约 1500 万笔互联网交易。比特币仅用现有的硬件就已经可以达到更大规模，而且成本只是信用卡交易的一小部分。比特币从未真正达到规模上限。” - 中本聪（Satoshi Nakamoto) Bitcoin SV 正在成为中本聪所设计的比特币应有的样子，愿这条路上你也能一起前行。 PS：如果你是在手机上看本网站，记得使用屏幕左上角的目录和搜索功能来查阅相应章节哦：) 邱少贤 @imcoddy 记于 20190730 打赏捐赠 本项目欢迎读者直接在 GitHub 上提交 Pull Request 勘误更新，详情请翻阅编写指南。 如果您认为本项目有用乐意捐赠，可以捐赠至以下地址。捐赠的币将用于奖励本项目的贡献者。 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 邱少闲聊 本书将专注于比特币的基本知识科普，内容会相对比较正经严肃，喜欢欢快活跃的，欢迎关注微信公众号【邱少闲聊Metanet】，听我从别的视角讲述比特币的八卦 :) 版权说明 Rebirth of Bitcoin: Back to Genesis 《比特币重生：重返创世纪》一书以 署名 - 非商业性使用 - 禁止演绎 4.0 国际 (CC BY-NC-ND 4.0) 的许可协议发布，并预计于 2021 年前（即 Bitcoin SV 的 「创世纪」升级后的一年之内）以 署名 - 相同方式共享 4.0 国际 (CC BY-SA 4.0) 方式开放许可授权。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币重生计划：重返创世纪 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"preface.html":{"url":"preface.html","title":"序言","keywords":"","body":"序言 一千个人眼里有一千个哈姆雷特。这句话对于比特币或许也一样适用。没人能想到中本聪当时临时设定的 1M 区块大小上限，后来却成为了限制比特币发展的最大束缚。 早期参与比特币的人不少是计算机极客，这其实很正常，毕竟早期钱包不好用，私钥容易丢失，挖矿需要自行配置，需要用户有足够的计算机知识才能玩转起来。而随着比特币的价格经历了多轮疯涨，吸引了更多人参与进来，也慢慢形成了所谓的数字黄金的共识，以及不卖出、不使用、只死拿的 “HODL” 文化。尽管扩容的相关讨论早已争论许久，但由于害怕分裂、共识难以达成，久久未能达成一致，社区的氛围也从最初的开发者自由讨论发展变成两方逐渐对垒的局面。而随着 ICO 的兴起，2017 整年比特币几乎都处于拥堵状态，最严重时积压了 20 万笔未确认交易，一笔交易需支付上千元的交易费和加速费（矿池优先打包）才能尽快确认，普通交易需要一两天，甚至一周才能确认。 这时的比特币俨然变得十分陌生。随后从中分叉出了 Bitcoin Core(BTC) 和 Bitcoin Cash(BCH)，或许是偶然中的必然。虽然没人预见到，一年之后，为了维持比特币原有的协议不被破坏，比特币再次不幸分裂。 重新学习 2017 年是比特币扩容之争最尖锐的一年，也是我重新思考比特币最多的一年。而引发这些思考的，恰是被币圈戏称为“澳本聪”的 Craig Wright(CSW)。 或许没有多少人看过 CSW 在 2017 年的复出视频大声疾呼Bitcoin isn't broken，也没有多少人会认真看完他在 Medium 上阐释比特币的潜力如何。大部分人只是社交网络上人云亦云的传声筒，却从未认真思考一下比特币是什么，以及这个系统将会如何演进。唯有极少数的人能够透过那重重迷雾，窥见中本聪宏伟计划的冰山一角。 Every problem with Bitcoin can be solved with Bitcoin. 比特币的问题可以通过比特币来解决。 比特币这一发明，最独特而有别于前人的创新之处，是通过经济激励的手段解决了信任问题。而当人们从经济的角度来考虑比特币的问题的时候，例如巨块攻击的成本，零确认的安全性等等，其实很多问题都能迎刃而解。 大道至简 人们错误地认为比特币过于简陋，无法实现各种高级的功能。但他们不明白，Simple is hard，精简恰是最不容易的事情。 当我们重新审视比特币的设计时，会发现中本聪在比特币中加入的脚本系统是件很有意思的事情：如果只是转账的话，中本聪完全可以把可能用到的转账的方式固化成几种类型，完全不需要弄出一个脚本系统来，因为这既麻烦还可能引入新的问题。而从绝大多数指令，也很容易看得出来，比特币从最开始的设计，就不是单纯为了储值、转账这些功能，而是希望实现得更多。 比特币的设计就是这样简单，一方面通过保持底层相对简单，系统不容易出错，从而不需要频繁地变更修改。另一方面通过构建于其上的脚本系统来保持足够的开放性，人们可以在上面扩展开发，打造更丰富的应用，而这不会因为某个开发者的不小心而造成系列崩溃。 但我们忽视比特币的本质太久太久，以致于只极少数人明白它的潜力，而许多错误的观念却广泛流传。 幸运地是，我们在正本清源的路上，而本书希望能让更多人能明白这一点。 致谢 本书的整理得到了许多人的支持，在此一致感谢。 感谢 Mempool.com 的矿工哲亮，促成决定整理此书的灵感 感谢上海刘晔律师，翻译了许多相关文章，提供了法律相关的见解 感谢 Aaron67，记录了一系列比特币的相关技术文章 感谢黄酥酥，提供了不少比特币与社会学的思路 感谢木～龙和 Times ，考证了许多中本聪的相关资料 感谢 Aus.Liu、Asine、TsiMing Ho、王福强、WanSheng 等等 Metanet 的践行者，你们的努力大家看在眼中 感谢 BSV 骷髅会群友们的一贯支持，BSV 的世界因你们而精彩 最后，感谢 Craig Wright(aka Satoshi Nakamoto)，将比特币这个划时代的伟大发明带到这个世界。更重要的是，您的循循善诱所带来的启发和思考是今后一生受用的财富。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 序言 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-philosophy/":{"url":"chapter-philosophy/","title":"比特币之道","summary":"有道无术，术尚可求也，有术无道，止于术。希望各位读者在研究比特币的技术细节之前，能先了解比特币之道。如果我们不搞清楚 “术” 与 “道” 的区别，就容易导致目标、方法、方向都走偏了，而这样的情况的确出现了，但这一切，并不是中本聪希望看到的。","keywords":"","body":"比特币之道 有道无术，术尚可求也，有术无道，止于术。 上面这句话说出了 “术” 与 “道” 的区别：有术无道，顶多也就是个 “技艺人”，无法再升华；而有了 “道”，就等于有了 “智慧”，有 “道” 者，求 “术” 几乎易如反掌。 之所以选择这句话作为本书的开篇，是希望各位读者在研究比特币的技术细节之前，能先了解比特币之道。如果我们不搞清楚 “术” 与 “道” 的区别，就容易导致目标、方法、方向都走偏了，而这样的情况的确出现了：BTC 在暗网上流行作为毒品、军火、偷渡和色情等犯罪的支付工具，ICO 成为非法发行证券以及非法集资、金融诈骗、传销等违法犯罪活动的新方式，以致于大众听到比特币和区块链就敬而远之。 但这一切，并不是中本聪希望看到的。 是以，本章将介绍比特币的相关哲学思考，分享重返创世纪的路线和实现方式，以及中本聪愿景的内涵。希望读者能体会中本聪当初的良苦用心。 如无特别说明，本书中比特币均指的是符合中本聪白皮书所设计的 Bitcoin Satoshi Vision，即包含区块高度 #556767，其 hash 值为 000000000000000001d956714215d96ffc00e0afda4cd0a96c96f8d802b1662b 的比特币，其缩写为 BSV。 比特币的理念 比特币的理念很简单： 去除人为设计的上限，恢复中本聪在 v0.1.0 版里面设计的操作符。 保持协议稳定，坚若磐石。 无限扩容，承载全人类的交易。 在这基础上，比特币 鼓励创新，但是以维持比特币底层网络运作机制不受干扰和破坏为前提的上层创新 鼓励创造，奖励勤劳，奖励工作量，不鼓励囤积，使得年轻人凭借勤奋可获得上升的通道与财富 鼓励诚实，鼓励公开透明，保护和奖励 “好人”，渐进式通过阳光下的竞争减少社会中存在的阴影 鼓励分享，鼓励扩大连结，也奖励网络中的关键节点，保护每个人都能在分享中公平地获得收益 鼓励竞争，通过阳光下充分而非半充分的竞争不断促成更低的成本，更高的效率，更大的自由度 鼓励合规，因为在现实中大规模推广的前提是合规，合规从而让更多商业机会能在其上蓬勃发展 通过安全而稳定的链上持续扩容、通过比特币网络自身具备的独特优势，比特币的愿景是最终成为全球『唯一的』公开账本，并成为下一代互联网的基石，使 50 亿人使用上比特币网络。 比特币二十箴言 以此为纲，比特币有着以下二十箴言： 矿工是节点，它们是处于竞争的商业实体。 尽快达成去除区块容量上限的目标。这样，也只有这样，才能锁定基础协议并停止任何独断的改变。 SPV 是安全的，它能满足用户的全部需求。 二层网络构建在比特币脚本之上。 交易可塑性并不是缺陷。 所有系统都基于风险。没有任何形式的绝对安全，矿工必须像消费者一样权衡成本。 比特币是纯粹的资本主义。 分布式和去中心化意味着至少有三个或更多的矿工，他们没有形成团体控制着 50% 以上的网络算力。 比特币是完全由经济激励运作的。 比特币系统的运行被设计成允许矿工为利益展开竞争。 无需尝试禁锢比特币，它能正常运作，它不需要完美，它依靠竞争而驱动进步。 开发者应面向企业建设各类应用。 关注隐私与保密，这与匿名并不等同（匿名不是现金的性质）。 法律是法律，代码至多只是证据的一种表现形式。 专利是鼓励开发的一种手段。 企业帮助保护权利，并允许我们从政府和独裁者中获得自由。 扩容之下，最后只会有一种币存活。 没有所谓的 “无需许可” 的通证或证券发行。 ICO 是一场骗局，它必被全面禁止。 数字化知识产权、通证化股票、证券、债券等等，并不是 ICO。 如果上面的箴言与你之前所接触到的比特币相关信息大相径庭，别担心，这其实很正常。请暂时将上面的观点记下来，我们将在后面的章节里对这些理念逐一进行解释。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币之道 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-philosophy/honesty.html":{"url":"chapter-philosophy/honesty.html","title":"诚信为本","keywords":"","body":"诚信为本 比特币是关于诚实的发明，或者说是比特币是一个诚实系统。比特币这个系统，最重要的组成成分恰恰不是密码学，而是经济学以及背后的人文思想。比特币是关于经济激励和货币理论的学术成果。 发现真实、记录真实 真实，在道德上叫诚实，在法律上叫诚信，是人类的恒久追求。真实之难寻求，让无数哲人折腰，释迦牟尼干脆直接说，“凡所有相，皆是虚妄”，即人类之所见皆非真实，皆是幻相；叔本华则写下《意志与表象的世界》; 康德穷其一生写下三大批判哲学《纯粹理性批判》、《实践理性批判》、《道德力批判》，其结论是人类理性无法认识世界，也就是无法认识真实。现代科学的顶峰量子力学更是认为，物只有在被观察时，物才存在，否则就是薛定谔的猫，既生且死。 虽然真实如此难以接近，人类仍孜孜不倦地发明各种 发现真实、记录真实 的新技术、新手段。几乎每一个新手段，便是一个新文明。首先是语言，其次是文字，再次是印刷与复制。 语言的局限自不必说，首先是语言难以精确描述事物，即使描述了，譬如口述史，以讹传讹者不计其数；所以许多圣贤，到了最后，不发一言。 后来有了文字，文字虽能记录语言，但离真实又隔了一层，譬如信史，多是后人记录前人的，中国的二十四史，皆是抑前扬后。即便是司马迁写至汉武帝的当代史，或者重要历史人物的随笔、日记，或者是野史，哪怕当日书当日，亦是事后记录。所以圣人多以身教，死后不留一字，因为他们知道，一着文字，便离真相。所以王阳明石破天惊提出；知行合一才是知，没有行的知，即是没有知。明代黄遵宪要求：我手写我口。爱因斯坦破除了牛顿的绝对时空观，指出一切皆是相对的，时间非均匀流逝，空间非固定不变，时空互为依存，空间越快，时间越慢，空间越慢，时间越快。 再后来有了印刷术和当代的电子复制与传播术。文明又大大进了一步。至少文字记录的真实可以传播得更广，一则知识可以飞入寻常百姓家，所谓真实不再垄断于统治者；二则不同来源的真实可以相互校正、相互勘验。对照《红楼梦》的庚辰本与甲戌本，可以多方探测曹雪芹之真意；甲在互联网上传播的谣言可经由乙反驳并辟谣。然而问题在于，信源一多，真实亦远。譬如曹雪芹已死，到底庚辰本与甲戌本哪个更接近真实？又例如，为应对税务检查，公司提供了一大堆不同的账本，到底哪个为真？针对同一事实，甲乙双方各自提供了截然相反的原始证据，法官孰信孰驳？整个司法体系及律师的主要工作，便是证据的辩驳、真实的发现。 所以，人类需要一种技术，当下行为，当下记录，当下记录不可再篡改，如此，当下的记录便是永久的记录。人们传诵的是同一个本子，公司记录的是同一个账本，法庭质证的是同一份证据。可以想象，如能实现当下即永恒，有多少红学家要失业，有多少假账要消除，有多少欺诈要遁形，整个社会要节约多少成本，整个交易要快捷多少。 比特币应运而生。 比特币通过两种方式实现当下即永恒，保障真实和诚实。 一、不可篡改的实时数据记录； 二、诚实的货币，即比特币。 不可篡改的记录 所谓实时数据的不可篡改记录，是指人们直接在比特币区块链上实施人类行为和商业活动，比如签订合同、传递合同、交付权利凭证、支付价款等等，均在链上直接完成，故实时形成链上数据，又因链上数据经由全球矿工在 PoW（工作量证明）机制下予以验证，故不可篡改。即使修改，也是形成链上的二次数据，留下不可篡改的修改痕迹。因作业在链上进行的同时其记录亦分布于全球各电脑，故在全球范围内，曹雪芹的《红楼梦》只有一个版本，公司的业务往来只有一个账本，呈现于法庭的证据只有一份......且因链上数据可实时调取、查阅，故即使 100 年前的人类行为、交易数据亦可以光的速度瞬间获得，100 年前的祖先行为犹栩栩如生，从另类层面实现了当下即永恒。 诚实的货币 所谓诚实的货币，是为保障实时数据的不可篡改而发明的。因为如要实现实时数据的不可篡改，需要给按 PoW 机制负责记账并消耗成本的矿工予以报酬，且该等报酬的支付最好与工作量的转移即账本的完成同时进行，在计算机术语上就是原子交换。比如我作为矿工在链上录入了一份合同或一本小说，最好在录下合同或小说其实就是广播于链上（注意，广播合同或小说的隐私范围不同，可由密钥控制）的同时，客户支付报酬。一手交钱一手交货的模式是最节省成本的，故由账本内生金钱最恰当，比特币便是这样的内生于账本的金钱。在比特币链的脚本上，钱（比特币）的支付与交易对价（如订立一份合同的交易）的交付位于同一个字段，一旦矿工打包，钱的支付与交易对价的交付，瞬间同时完成，即原子级别的交换。 从这里也可以看出，比特币作为钱的价值，取决于其提供账本空间服务的能力，账本空间服务能力越强，比特币的价值越大。比特币作为金钱商品，还有另外一个重要特性，即中本聪在设计时其总量是限定的，2100 万个。也就是如果比特币作为账本空间的价值得到认可，也就是其作为交易媒介 — 钱的价值得到认可，则可以变成一种诚实的、不增发的钱。这意味着什么？人类文明史上还没有过。 比特币能否开创自语言、文字、印刷术之后的新文明，取决于其在技术上能否实现全球即时数据的不可篡改记录，也就是其链上空间能否容纳全球一切可被交易的数据。至于比特币能否成为货币，倒在其次，账本空间成了，岂有货币不成之理？ 新的文明 近半年，我们有幸在 BSV 上看到了这样的前景。因为 BSV 正在恢复比特币发明时的原始愿景，即恢复关于实现真实和诚实的目的，一、实时数据的不可篡改记录，故扩容、扩容再扩容，上链、上链再上链；二、可容纳全球商业的钱，此钱保护隐私而不匿名，此钱容入全球文明体系，而不挑战之。 与现有互联网、印刷术相比，比特币真能接近真实么？比特币场景下的真实是什么模样？我以 BSV 上的开发大牛 @_unwritter 的一个洞彻了比特币脚本的项目 Planaria 为例，描述一下我能想象的场景。 我发送一笔交易比如一份合同给乙方，数据即时上链且永远不可篡改了。乙方与丙亦有交易，丙与丁..... 以此类推，全球所有人通过比特币形成了原子交换关系。我发出交易后，我的状态是不确定的，是薛定谔的猫，我的状态取决于是否被乙观察到，乙的状态取决于丙，丙取决于丁..... 核心在于，与传统交易相比，由于是原子交换，比特币下的状态转换是极为迅速的，比特币成了一台全球化的计算机，我们每个人的状态取决于被 UTXO 记录着、观察着、相互深刻影响着。由于各方的数据都不可篡改，我们被迫变得真实、变得诚实。 新的文明产生了。 当然这种新文明仍是主要基于语言文字的，至于语言文字能否反映人类真实，又得回到佛陀教导，“凡所有相，皆是虚妄”。不过，比特币是一种跨语言的交易工具，其对语言真实的哲学冲击，乃至对建立于语言文字基础上的意识形态、各文明形态的冲击是不可估量的。 欢迎来到这个新的比特币的文明社会。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 诚信为本 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-philosophy/roadmap.html":{"url":"chapter-philosophy/roadmap.html","title":"路线图","keywords":"","body":"Bitcoin SV 路线图 Bitcoin SV 创建全球区块链的路线图以四大基本支柱为基础：安全性、稳定性、可扩容性、安全即时交易（亦称为零确认）。 “现有的 Visa 信用卡网络每天在全球范围内处理约 1500 万笔互联网交易。比特币仅用现有的硬件就已经可以达到更大规模，而且成本只是信用卡交易的一小部分。比特币从未真正达到规模上限。” - 中本聪（Satoshi Nakamoto) 安全性 比特币将成为全球货币。为了实现这一未来规划，我们需要做好准备，以确保比特币具有与全球货币体系对等的安全水平。为此，Bitcoin SV 项目致力于为采矿节点软件提供严格的质量保证。 通过在整个测试管道中执行一系列具有完全可追溯性的严格测试阶段，来实现质量保证，向用户确保所有变更在获得接受之前必须通过正规且严格的验证过程。在质量保证方面，Bitcoin SV 始终追求同航空航天、医药和国家安全等高精尖行业相同水准的高质量保证水平。 首先，团队将采用最优变更管理流程，并借鉴其他安全敏感行业的外部质量保证（QA）专业知识，对质量保证流程进行监控和审核。 其次，该项目将聘请行业领先的区块链安全审计公司提供安全保障服务。 再者，类似于谷歌和微软等公司的做法，该项目还将开展一个利润丰厚的漏洞查找奖励计划，以激励和动员全球安全研究人员查找并负责任地报告安全漏洞。目前，团队已聘请了安全领域的专家级服务提供商，协助开发行业最佳实践 “负责披露计划”。 稳定性 企业，特别是大型企业，在选择技术运行平台前会对平台的稳定性提出要求。对比特币协议进行反复多次不必要和未经证实的变更，可能会对区块链的经济激励结构和安全性产生不利影响。大型企业在决定使用比特币建立应用程序和项目之前，需要提前数年制定计划，并投入大量资源，比特币协议的不断变更会为他们带来重大不确定性。 Bitcoin SV 的愿景是提供稳定性保障，通过有限的和公认的系列变更，以期将比特币协议恢复至其最初设计，并使能够在稳定的基础协议之上进行创新。 其中的一部分工作是恢复中本聪操作码，使世界各地的企业和开发团队能够在比特币区块链上创建诸多可能的解决方案，例如智能合约、支付标记化、原子互换等等。 可扩容性 为了使比特币成为一个真正的全球货币平台，有必要证明该平台已有能力处理所需规模的交易量。Bitcoin SV 路线图主要致力于通过提供更大的默认或矿工可配置区块规模，以及性能提升来扩充容量。在项目所使用的九个测试环境中，SV Gigablock Testnet（SV-GBTN）专门用于确定所提议变更的瓶颈和性能测量。SV-GBTN 在持续的性能测试周期内运行，测试结果将用于公共消费，以便矿工和其他行业参与者能够做出明智的扩容决策。 通过实现大规模扩容，Bitcoin SV 将为比特币区块链的发展铺平道路，显著提高交易量和矿工的交易费用。这对于保持矿工的盈利能力非常重要，因为区块奖励将在 2020 年再次减半（每个区块奖励从 12.5 个减少到 6.25 个），而且以后几年还将再次减半。 实现大规模扩容对于说服企业在区块链应用程序中使用比特币也具有非常重要的意义，因为这一应用将需要大规模区块和巨大的吞吐量。 安全即时交易（亦称零确认） 即时交易对于解锁比特币支付实体商家市场至关重要。安全性的提升可以更好地保护未来的即时交易，Bitcoin SV 路线图也将安全即时交易视为发展的头等要务。 如果我们能向世界证明两件事；一，不管用户交给我们什么类型的交易，比特币都可以处理。 二，零确认交易（也称作即时交易）既安全又可靠，那么我们就具有了其他区块链项目无法匹敌的竞争优势。事实上，我们确实已拥有一项其他支付方式无法匹敌的竞争优势。当世界理解到以上两点时，说明他们已经准备好在全球范围内使用比特币了。 未来我们将证明比特币已经可以应对全球商业的发展，大规模企业可以安全地投资我们的平台。 比特币是目前唯一一个已经拥有可行的扩容计划并付诸实施的区块链项目。比特币(BSV)正是比特币一直以来的发展方向，即成为全球快速及时的电子现金解决方案。 目前我们将交易量限制在我们称之为“安全”的处理范围内，我们也是在向全世界传达一个讯息——我们对自己的网络没有信心。 而我们要表达的是，矿工是整个网络的支柱，我们还没有信心相信矿工可以完全有能力来响应交易需求。 我们还没有信心相信，中本聪共识（ Nakamoto Consensus ）能解决不同上限的问题。 我们的工作不是限制矿工，而是支持他们并使他们成为全球现金系统的关键基础。 我们必须借此机会展示比特币能实现的事情，并且我们必须让矿工迎接挑战，并激励他们掌控比特币发展过程中最关键的部分。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 路线图 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-philosophy/onchain-scaling.html":{"url":"chapter-philosophy/onchain-scaling.html","title":"链上扩容","keywords":"","body":"链上扩容 在比特币和加密货币方面，不论是新手，还是经验丰富的老手，投资者们始终都在讨论的话题是比特币的运行机制。开发人员决定使用哪个平台；风投资本家决定哪个平台将来最有价值；比特币矿工在最赚钱的区块链上记录工作量证明（Proof-of-Work）；用户定位具有最佳的成本、速度和安全性的平台。 随着比特币上的交易数据越来越多，关于扩容的讨论也日益增多，随后出现了两个方向的方案。一方是 Core 开发者坚持锁定上限，发展二层网络的方案，也就是通过所谓的闪电网络（Lightning Network）建立支付渠道；另一方则坚持直接提高区块上限，通过链上扩容为地球上数十亿潜在用户提供可信赖、价格低廉且易于使用的点对点现金系统。 比特币创始人中本聪（Satoshi Nakamoto）、拥有多年经验的开发者加文 · 安德烈森（Gavin Andresen）以及麦克 · 赫恩（Mike Hearn）都对比特币扩容方案提出了非常明确的建议。其中根据摩尔定律，链上扩容这一形式成就了今天的比特币。但这并非是我与其他许多人相信大区块和比特币现金（BCH）的根本原因。根本原因在于经济的本质。大区块是比特币扩容的唯一方法，任何其他扩容方案最后都会导致比特币区块链技术的终结。 通过本系列文章，我将介绍为何要通过大区块来保存比特币的区块链技术和愿景，尽力解释比特币运行的基本但必要的经济结构。任何反对大区块的行为都与经济学相悖。 比特币的激励结构 比特币是一个不断更新的数据库，受到共识机制的保护，需要所谓的矿工或节点执行大量计算，通过解决哈希难题拿到工作量证明（Proof-of-Work）。其中，处理能力最强的矿工最有可能解决难题并在区块链上添加区块，每个区块包含由用户签名并由节点中继的交易。由于工作量证明共识机制需要大量的精力投入，也就是成本投入，矿工享有两种货币激励措施，即通过工作量证明（Proof-of-Work）以电子货币的形式激励，保证网络运行： 1) 为添加区块的节点增加新币供给（目前每个区块奖励 12.5 枚比特币） 2) 用户选择的所有交易手续费总额（区块足够大的情况下，每笔手续费大约在一便士不到） 此外，更重要的是，每个节点还暗含着一个激励结构。由每个节点决定并（按计算能力）投票随后挖哪个区块，这不仅仅取决于谁先解决哈希难题，而是首先要确保交易有效，如果两笔相互冲突交易，则必须为排序靠前且有电子签名的一笔。 这对节点的 “行为” 有着很大的影响，因为在任何时候，所有节点都需注意到所有中继的交易，从而避免虚假或双重支付交易，这符合共同利益; 如果一个节点有意或无意地通过了欺诈性交易，其他节点便不会在这样一个欺诈性区块上挖掘。因为所有节点都需致力于区块链网络正常且诚实地运行，否则未来的收入岌岌可危。 如此就形成了一个高度互联的网络，每个节点都中继并处理所有接收到的有效交易，实现 Pareto 最优解。这一网络被称为一个小世界或一张近乎完整的图。简单说来，可以想象一下它以下列方式运行： 值得注意的是，这一过程只需几毫秒。时间对于节点来说至关重要，是一个主要成本因素; 如果一个节点未能完全更新 ， 便有着成为孤块的风险，其他节点可能决定不在这一节点开采的区块上挖矿，从而使其比特币奖励变得毫无价值。 比特币区块链的安全性恰恰源于这样一种网络效应：由于受到财务上的激励，最强大的节点开采速度高于网络中的其他任何节点，因此也不会选择违反游戏规则，只会记录有效交易。 有趣之处在于：比特币扩容 每 10 分钟生成一个区块，每 4 年 一个周期奖励减半。我们离下一次奖励减半，也就是 2020 年左右，越来越近了。由于新币奖励减少，矿工将越来越依赖于交易手续费总额的奖励。到最后，矿工的收益将全部来自手续费。 影响矿工是否愿意继续花费大量精力维护网络的方式有以下三种： 用户是否愿意为交易支付持续上涨的交易手续费。 不断为矿工发行新币，增加新币总量供给（鉴于比特币协议中约定的总量限制，这点不太可行）。 增加每个区块的交易量，从而增加手续费总额。 对于所有人，包括购买力较弱的人来说，为维持比特币的非通货膨胀性质，比特币必须进行大量链上扩容。也就是说，区块链本身必须扩展。试想一下，如果链上每秒能发生数百万笔交易，矿工得到的货币激励就会随之而涨——反之也加强了网络的安全性。 但如果不采用大区块的方式扩容，而是像比特币核心（BTC）那样人为设定区块的上限容量，通过链下解决方案来实现扩容，如闪电网络（Lightning Network），并不能带来类似于链上扩展的交易量，只会带来链上费用的不断增加或通货膨胀。闪电网络在链下扩容（假设可行）方面运用的越多，交易手续费会越高，或者通胀会越厉害，如此才能够满足节点运行所需的费用。 即使有些人决定自费提供节点，也更倾向于使用运算力强的节点在能触达上亿用户的区块链上挖矿，而非在一个区块大小有限的网络中开采——这将给网络带来巨大风险。 未来展望 在分析了比特币激励结构的基本性质之后，我们显然有两个选择，一边是越来越昂贵的网络、通胀的比特币以及不再安全的网络，另一边是通过链上扩容，实现快速、安全且低成本的网络——过去 10 年里，我们正是爱上了这样简朴的网络。不难想象，比特币核心（BTC）计划使用闪电网络作为唯一的扩容形式，将完全摆脱比特币区块链技术——因为比特币作为结算层只会成为交易障碍。但在所有这些场景中，哪一个听起来更像是《比特币：点对点电子现金系统》中描述的真正的比特币？ new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 链上扩容 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-philosophy/back-to-genesis.html":{"url":"chapter-philosophy/back-to-genesis.html","title":"重返创世纪","keywords":"","body":"重返创世纪 “比特币的本质是，第 0.1 版一经发布，其核心设计即已固定，并在整个生命周期中保持不变。” - 中本聪（Satoshi Nakamoto) 比特币 SV 项目以恢复比特币原始协议起步。项目开发的事实依据是：中本聪使用脚本作为扩展来实现各项息息相关的功能，并且超越了现金的功能。中本聪操作码的重新启用为实现智能合约、交易标记化和比特币上运用的其他高级技术功能提供了所需的实现方法。原始协议具有推动比特币蓬勃发展所需的关键特质，因此，应得到广泛推行，并且无需经常变更。 恢复中本聪的原始协议后，协议需要保持稳定性。除了可能需要执行的任何关键安全问题修复之外，该协议应保持锁定状态。这种稳定性将为世界各地的企业带来信心，让他们放心地在稳定的比特币（BSV）基础上创建应用程序并开展项目。例如，互联网平台的协议基础自平台搭建以来很少做出变更，以便企业可以在可靠稳固的平台上规划其长期项目。比特币区块链也将为企业提供与互联网平台同等的协议稳定性。 在本节中，我们希望对未来的路线图给出一个高层次的概述，包括提出两个协议升级日期。 它广泛地分为扩展和协议恢复两大类。 协议升级 重新回到中本聪设计的比特币需要经历两次升级。 第一次升级，代号为 “Quasar” ，是为 2019 年 7 月 24 日提出的，主要关注于扩展。 在协议级别，这次升级计划的唯一变化是取消默认块大小硬上限。 我们之前已经表示有意将上限提高到 512M，但是在与比特币协会 (比特币 SV 项目的所有者) 和代表绝大多数散列速率的矿工协商后，我们决定比特币 SV 软件将在 7 月的升级里面默认设置为 2G。 最初大多数矿工哈希率将手动设置他们的硬上限到 512M。背后的原因很简单：比特币 SV 网络出人意料地提前达到了 128M 的上限，矿工们不想在提高上限不久再次更新。如果默认值是 2G，那么按照一致意见，矿工可以提高限制而不需要进一步的软件更改。 第二次也是更重要的升级计划将于 2020 年 2 月 4 日进行，计划包括一系列修复协议的修改，几乎将完全恢复到原来的协议，因此我们决定将其命名为 “创世纪”。 我们提议升级的日期为比特币创世块诞生后的 11 年，1 个月零 1 天的时候，以纪念这次升级代表重返创世纪和恢复中本聪的愿景，这是 Bitcoin SV 项目的名称和主要目的。 创世纪升级将解决扩容问题。 我们相信，到 2019 年底，Bitcoin SV 节点软件将实现所有必要的安全机制，让我们完全去除区块大小上限，让矿工来处理它，而不需要来自开发人员的干预。只要这些变更得以完成，我们预计在接下来一年之内，将在创世纪升级中实现无限扩容。 届时，我们将能看到中本聪的设计得以展现其无限的潜力。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 重返创世纪 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-philosophy/vision-of-satoshi.html":{"url":"chapter-philosophy/vision-of-satoshi.html","title":"中本聪愿景","keywords":"","body":"中本聪愿景 美国最高法院大法官 Louise Brandeis 写道: “公开被评价为治愈社会与工业疾病的良药。据称阳光是最好的防腐剂；灯光是最有效的警察。” 比特币是最有效率的系统，它将帮助我们消除不诚实和欺诈。我创造比特币不是为了制造另一种黑市毒品货币。电子黄金（E-gold）和自由欧元 (Liberty Euro，自由储备银行提供的一种数字货币) 才是这种错误导向，它们曾经运行良好；它们比任何区块链都做得更好。很少有人能理解的是，任何由个人或团队运行的系统都有可能成为被攻击的目标。天网恢恢，疏而不漏，时机成熟时，那些违反法律和带来破坏的人终将接受法律的制裁。 比特币给加密货币带来了一些新东西，但不是去中心化，那只是发展过程的一部分。实际上，自由储备银行有 30,000 个左右的法币通道，比现存的以区块链为基础的加密货币空间更加去中心化。比特币最重要的是留下了一个不可篡改的证据线索记录，即区块链。比特币的设计是，如果你试图删除证据线索，最后将遭遇 Zcash 那样的问题，即无法确定流通中的货币数量。更重要的是，洗钱及反洗钱 (AML) 法的存在将使得所有上行和下行通道都被纳入监控。因此，只要涉嫌犯罪，数字货币的追踪可以变得非常简单。 比特币是一个纯粹的经济系统；它可以用来打击犯罪，但不会绕过或破坏普通个人的隐私。如果交易导致比特币受到污染，执法官员可以在交易所和其他上行通道询问不同货币的持有者。区块链重要的设计在于扩容，像 Tor 那样的网络因为增加了太多的层级，复杂而低效，从而拖累了系统。 那些在比特币的设计之外探索的人尝试创造与比特币相伴的替代品，比如闪电网络。此种系统纯粹是为了丢失和销毁记录而设计的。资金的匿名形式将成为被法律取缔的最直接原因。如果一个系统违反了反洗钱规则，则政府可以对运行节点的主体采取行动。像闪电网络之类的系统，其节点并不能任意加入和离开网络。这与比特币完全不同，闪电节点需要全天候与网络保持连接，这些节点也成为了执法人员的天然靶子。 不可否认性 如果有些人试图告诉你，他们找到了一种方法，可以创建一个无法取缔的系统。他们将这种白日梦称作 不可否认性，但现实是，这是一个乌托邦式的梦想，不可能实现。无论如何，你都可以否认一个签名。它可能是在胁迫之下签名，也可能是有人偷了你的私钥 -- 总之有很多方法可以让你有效地否认某件事。重要的是，你不能从技术上否定它们；它们是法律运作的一部分，而且关键的是，有能力证明你并没有签署某项东西是一种人权。而法庭通过不利证据倾向另一方：比如说，如果你声称没有做某事，但事实证明你做了，你需要承担相应的责任。 在加密货币社区内发生的许多事情都是对法律和西方文化的微妙攻击。 比特币使用了一系列的化名密钥。它可以创建各种派生密钥，以证明密钥和所有派生密钥的所有权，但密钥并不能证明身份。没有办法用密码学方法来确切地证明身份。更重要的是，也不应出现这种情况。个人可以向证书授权机构注册，以证明和声明对某个密钥的控制或所有权。这个过程提供了证据，但并不是证明。 在未来，在比特币的世界里面，个人将创建与其身份关联的确定性分层密钥。即便如此，它也只是证据，而不是证明。如果持有一个私钥就可作成为确定的证明，而不只是一个证据的话，那么我们是在推行一种比强迫地球上每个人都携带身份证更严厉的制度。在比特币，一个组织可以创建身份和化名身份，允许在不链接的情况下使用个人服务。这样，身份将被防火墙隔离，每一系列记录都与其他组织隔离开来。 证明的性质是：个人有权选择如何为特定案件提供所需证据。如果他们需要在法庭上证明某事，给法庭提供足够证据即可证明某事的确定性。如果一方当事人寻求证明货物的所有权，他们可以在无需关联更多必需信息的前提下达到此证明目的。这就是隐私的本质。当警察和司法机关调查洗钱行为时，他们可以调查个人并追踪资金的来源。人们没有看到混币器的问题是：财产来源法律是客观存在的。如果现在，你被发现拥有数十万美元，但不能解释来源，它可以被没收。比特币无法阻止资产被没收。如果你有别的想法，应当看看已经发生的许多案例。数以百计的罪犯已被没收了比特币。 去中心化 不是去中心化的节点使比特币变得强大，而是去中心化的权力使比特币变得强大。在比特币中，只有协议稳如磐石时，才能达到这个结果。如果一个矿工想要修改协议，需要所有用户更新节点软件。简单支付验证 (SPV) 允许用户确保矿工不偏离。如果一个矿工发生了偏离，比如，添加了一个新操作码，SPV 节点将判定添加无效。因此，即使矿工通过哈希算力实现了远远超过 50% 的网络控制，除非矿工说服网络用户迁移到新协议，否则也不能控制网络。 现实是，像“核心币” (BTC) 或者以太坊 (ETH) 背后的一小群人确实控制着协议，并可以迫使用户升级。这些系统就像比特币的伴行幽灵（doppelgängers），但不是比特币。实际上，他们正在颠覆开源代码结构和投票系统的使用，以隐藏领导层的行为。他们虚以委蛇，混淆法律责任，以分布式权力为幌子。真相是，比特币只有在系统无法改变时，才能去除权力，才是分布式的。有能力改变系统，有能力添加新的操作码，有能力以任何方式改变协议......这是存在于比特币或任何区块链中的权力结构。 那些管理着各种替代货币包括虚假比特币 (BTC) 的人，总是试图转移这个事实，即他们控制着各自的系统。他们试图说明，是矿工控制着协议，但是却不能说明，实际上，是他们使用了华丽的辞藻来改变协议，比如把改变协议称为 “毒丸（poison-pill)”，这种改变设计成一种软分叉，让以前的版本无法兼容。在这里，对网络的更改可以不经投票或通知而得以实现（这里的软分叉是指以下情况：旧节点接受新区块，新节点不接受旧区块，且新节点算力大于50% - 译者注）。 控制协议的一个小组做出的决策影响到系统的所有用户。当正常工作时，系统的用户社区看不到任意更改协议可能导致的问题，以领导权代替所有权，但与此同时，它也将所有不好的决策或错误转嫁给分布式系统。 比特币如想成功，协议必须是稳定的。软件的新版本可以在不改变底层协议的情况下开发和创建。在过去的 20 年里，TCP/IP 在协议层面上几乎没有改变，然而，它已经发生了显著的变化，并且通过更有效的软件实现获得了巨大的收益。为了让比特币发挥作用，协议需要固定下来，并且稳如磐石。一个稳如磐石的协议向开发者和企业发出信号，他们可以进行长期投资。 诡辩式的修辞会告诉你，比特币的设计初衷是制造一种抗审查的货币，然而提出这种论点的人却有权力让交易无效。同样的人有权力改变协议，让特定的软件实现变得无效，并将人们赶出这个行业。有了一个稳定的协议，正如我在近十年前指出的一个稳如磐石（set in stone）的协议，则没有人能够决定谁可以或不可以在比特币基础上进行建设。 所有主要的社交平台 ---Twitter，Facebook，甚至 Google--- 都已经被所谓社会正义战士渗透，他们试图摧毁精英管理，让世界变得平庸。他们称之为多元化。 但真相是种族主义，憎恶同性恋，性别歧视，和其他任何令人反感的主义。 Twitter 的增长道路已经结束，用户基数正在缓慢下降。原因是你不能同时服务于两个主人。组织尽其所能做到最好，服务最好，否则就可能输给市场和资本主义。正如社会主义之所以失败是因为它不能衡量人们在社会中的价值，许多组织现在发现，它们将无法在平庸的渗透下生存。 元网（Metanet）改变商业 YouTube 和 Twitter 这样的平台已经被大量平庸者渗透，他们试图用社会正义斗士和有关社会主义的传统方法来证明自己的立场，并且用恐惧和审查的威胁来操纵立场。如果同样的手段不起作用，他们就会用喷子淹没社区，迫使放弃。当你屏蔽这些人时，他们会大喊不公，说受到了审查。 事实是，他们进入了你的财产，你的私人空间，然后，当你赶走他们或试图赶走他们时，他们会大声召唤他们的平庸同盟。他们不建设；不创造；他们破坏别人的工作，并试图阻止你创造。他们这样做是因为你所做的一切让他们看起来更低级。每一次你创造一些新东西，就会展示他们不能创造多少东西。所以他们要进入你的空间、你的财产、侵犯你，驱赶你的朋友和盟友。 与之类似的是，一个不速之客出现在晚宴上，开始抱怨一切，大声说你做的一切都是错的，然后厉声尖叫，说他受到了压迫和审查，因为你在自己家里不会听他说话。 但是，我们可以夺走他们的权力。有了元网（Metanet），个人和团体能够创造一个交流的场所，在那里可以安全地排斥滥用权利的人。这样做不是审查，而是言论自由。你没有权利侵犯别人的隐私，也没有权利要求别人做你的听众。我们可以排除此类人，并允许其他人参与讨论、交谈和沟通。这种方式下，喷子们接管不了社区。重要的是，它允许创造一个合法和开放的空间，而且可以同时制止谎言和谣言的散布。人们将对自己的言行负责。 言论自由不包括匿名侮辱，不包括诽谤。你有权发表意见，但无权在没有证据下胡编乱造。现在，制造假新闻和散布谎言的能力之所以存在，是因为人们在匿名世界里找不到恶意攻击的责任承担人。未来，可追踪的微支付将能访问到每个责任人。人们可以按照自己意愿创建社区。如果一个社区选用化名，并且不核实社区成员的身份，他们可以这样做。但同样，如果一组人只希望排除掉曾经攻击过某成员的用户，或者排除掉持有与其他成员异见者，那么，也可以创建这样一个组。 政府 比特币是远离无政府主义的。它不阻止政府，只是让政府更负责任。追踪的能力和可追踪的钱、对腐败和非法外贸的限制及报告改变了政府的本质。比特币能够在政府部门分配资金时及时核算支出和报告结果，从根本上改变了代议制政府的性质。在未来，可以限制享受福利公民的购买对象。可以限制针对房租和食物的税收，并确保人们给孩子们提供教育，如果他们不这样做，那么他们的福利待遇将受限制。 比特币并不能阻止政府；它让社会的生产者可以监督钱的去向。如果人们不申请工作，他们的福利支票可能会自动失效。商业可以接受用福利支票购买健康食品，但同时也可以拒绝用这种支票购买奢侈品，如酒、甜点及棒棒糖。它把控制置于此等情况。 政府发行的债券和融资方案可以被监测和追踪。在一个代议制社会，可以允许系统的参与者选择如何花费他们提供的钱。在未来，智能合约可以允许来自社会各个方面的有条件支付。智能合约和灯塔协议将取代现有的许多无用项目，人们常常认为这些项目无法真正资助他人。公地悲剧将被控制，并转为所有，这些地区的成员可以从好好维护这个系统中获益，并能追究滥用该系统的人的责任。 一些其他计划... 在数字网络世界中，通过控制叙事权和侵犯个人财产，那些没有权利参与交流的人可以关闭讨论。因此，少数声音设定了一个社会其余人不希望看到的议程。他们可以列举他们的担忧，他们可以呼吁他们的问题。我们听到了欺诈的呼声，然而通常是他们寻求推动一个便于欺诈的系统。在未来，比特币将为所有组织和政府提供一套单一账本 -- 这在地球世界中从未发生过。 我们处在变革的边缘。我们处在一个监控技术越来越强大、越来越全面的世界。要么我们选择隐私，要么我们失败而接受其他选择及后果。无政府主义不是选项。 在无政府主义下，所有人都没有想要的隐私；在无政府主义系统下没有法律，所有人也没有权利要求隐私。在这里，强者，强权和强权意志主宰一切。 就像圆形监狱系统一样，我们的一切都被一个中央机构审查，没有什么是隐私的。比特币改变了其中的平衡，改变这个系统的力量来自于改变腐败和欺诈的力量。我们永远无法消除腐败与欺诈，但是我们可以消除对它们的激励，使腐败和欺诈的成本变得高昂，从而减少它们。 当人们看到短期利益时，便寻求炮制谎言、推销谎言。他们希望推广非法暗网，并通过允许洗钱来赚钱。他们推高、贩卖那些从稀薄空气中轻松制造的骗局，但除了稀薄空气，一文不值。随着我们建造比特币和元网（Metanet），将看到一个新世界在进化。 一个真实的世界，一个隐私的世界。 这是我试图带入存在的世界，一个建立于经过时间检验的价值观基础之上的世界。一个基于 优秀品格(merit) 的包容世界。 当人们谈论比特币的设计是去中心化时，问问他们是什么意思。让他们解释和定义一下他们所使用的术语。如果他们说这是关于权力的去中心化，那么唯一的产生方式便是任何区块链的协议是稳定的。问问他们协议如何演进，谁是看门人，谁有否决权。没有深入研究这个问题，没有定义所用的术语，我们便陷入了一个蛋蛋人（Humpty Dumpty，英俚语，指又矮又胖的人 - 译者注）世界，在那里人们寻找用流利还是含混的方式设定词语的意义。比特币稳如磐石（Bitcoin is set in stone），这是让它成长、让商业接受的唯一途径，而且重要的是，这是围绕比特币、使之成为一个基于精英开发的系统的唯一路径。 如果有人谈论想要一个平等的世界，问问他们 平等 是什么意思。是否意味着法律面前人人平等？ 或者，是否意味着结果平等？如果他们追求的是结果平等，问问他们为什么一个人应该为其他懒惰的人更加努力工作。问问为什么那些牺牲的人，那些花了几十年在大学里学习、能够提供生产性产出和增长的人，应该为那些坐在家里或者甚至那些研究研究新自由主义艺术然后期待饭来伸手的人支付。比特币是一种精英体制。那些喋喋不休、宁愿辩论和抱怨也不愿冒险和行动的人不会这么认为，不过他们也只有能力喋喋不休。 通过比特币，我看到了一个各系统相互竞争的世界。我看到个人、地方、州和政府都在全球范围内竞争。不像我们现有的系统，GDP 提供了一个错误的衡量标准，把犯罪和破坏等同于食品和健康服务的生产，我们将有一个衡量期望结果的系统。比特币将淘汰那些将创造人为资产等同于创造可交易货物的系统。2008 年，在冰岛这样的国家，银行利用欺诈手段无中生有地创造了资本。Alice 把她的猫标价为 10 亿美元，然后卖给 Bob，而 Bob 则把他的估价为 10 亿美元的狗卖出去，然后他们相互借贷。如此，创造了价值 40 亿美元的人为资本。同样的情况今天仍在上演，且更糟糕，这也是 Tether、 ICO 和名为数字货币交易所实为投机商行等等事物存在的基础。所有这一切都终将结束。 这就是我的愿景。这就是中本聪的愿景。 我们的愿景是改变世界如何进行所有交易的方式 – 使用区块链分布式和分散式的分类帐以不变的方式按时间顺序记录交易。为了建立这个新世界，我们的数学家，科学家和工程师正在加强我们先进组合内所包含的工具，方案和应用程式。这些创新将加速区块链在金融和法律服务，娱乐和媒体等行业的采用。这是我们当下已在实现的愿景。 我们即将改变一切。 Craig S Wright, aka Satoshi Nakamoto. new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 中本聪愿景 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-how-bitcoin-works/":{"url":"chapter-how-bitcoin-works/","title":"比特币基本概念","keywords":"","body":"比特币基本概念 许多人觉得 “比特币” 难以理解，与这个概念本身的多义性有关，它笼统地涵盖了从钱、钱包、银行到印钞厂等一整套事物。“比特币”可以指一种货币的计量单位，也可以指一套网络协议或相应的网络系统等，甚至还曾经指过相关网络的客户端软件。为了避免混淆，本书约定，在需要特指区分的时候用小写的 bitcoin 指代计量单位，大写的 Bitcoin 指代相关的网络协议。 比特币是一种利用点对点技术实现的电子现金系统，与各国央行来统一管理发行的法定货币不同，它的发行并不需要央行这样的权威机构，比特币允许一笔交易从一个组织直接结算给另外一个组织，省去了权威机构结算的环节，提高了交易和结算的效率，节省了交易的成本，尤其是跨境交易的成本。 一个点对点的在线交易系统如何保证交易的隐私性、正确性、不可篡改性？又是如何防止双重支付和防止作弊和攻击的呢？在深入了解比特币之前，应该先理解下面的一些基本概念。 非对称加密 所谓非对称加密，其实很简单，就是加密和解密需要两把钥匙：一把公钥和一把私钥。 公钥是公开的，任何人都可以获取。私钥是保密的，只有拥有者才能使用。他人使用你的公钥加密信息，然后发送给你，你用私钥解密，取出信息。反过来，你也可以用私钥加密信息，别人用你的公钥解开，从而证明这个信息确实是你发出的，且未被篡改，非对称加密保证了支付的可靠性。 由于支付的时候必须通过私钥取出，所以你是谁并不重要，重要的是谁拥有私钥。只有拥有了私钥，就能把这私钥上的比特币支付出去。 钱包与地址 对于比特币来说，钱不是支付给个人的，而是支付给某一把私钥。比特币交易的第一件事，就是你必须拥有自己的公钥和私钥。比特币钱包就是管理你自己的私钥与公钥的。 你向别人收钱时，只要告诉对方你的钱包地址即可，对方向这个地址付款。由于你是这个地址的拥有者，所以你会收到这笔钱。 由于你是否拥有某个钱包地址，是由私钥证明的（具体的证明方法稍后介绍），所以一定要保护好私钥。这是极其重要的，如果你的私钥被偷了，你的比特币也就等于没了，因为他人可以冒用你的身份了，把钱包里面的钱都转走。 同样的，你向他人支付比特币，千万不能写错他人的钱包地址，否则你的比特币就支付到了另一个不同的人了。 交易转账 一笔交易就是一个地址的比特币，转移到另一个地址。由于比特币的交易记录全部都是公开的，哪个地址拥有多少比特币，都是可以查到的。因此，支付方是否拥有足够的比特币，完成这笔交易，这是可以轻易验证的。 问题出在怎么防止其他人，冒用你的名义申报交易。举例来说，有人申报了一笔交易：地址 A 向地址 B 支付 10 个比特币。我怎么知道这个申报是真的，申报人就是地址 A 的主人？ 比特币协议规定，申报交易的时候，除了交易金额，转出比特币的一方还必须提供以下数据。 上一笔交易的 Hash（你从哪里得到这些比特币） 本次交易双方的地址 支付方的公钥 支付方的私钥生成的数字签名 验证这笔交易是否属实，需要三步。 找到上一笔交易，确认支付方的比特币来源。 算出支付方公钥的指纹，确认与支付方的地址一致，从而保证公钥属实。 使用公钥去解开数字签名，保证私钥属实。 经过上面三步，就可以认定这笔交易是真实的。 交易确认 用户所发送的交易会发送到比特币网络并被矿工接收传递。矿工负责验证这些交易是否合法，并把合法的交易打包记录下来，组成一个区块，然后计算这个区块的哈希。 计算哈希的过程叫做挖矿，这需要大量的计算才能获得一个符合条件的哈希值。矿工找到符合条件的哈希值后会向其它矿工广播这个区块，其它矿工接收到确认无误后，会在该区块上重新开始新一轮的挖矿操作，此时交易即获得了一次确认。随着新区块的不断产生，已有区块被改写的可能性迅速下降。 出块奖励 交易的确认离不开矿工。为什么有人愿意做矿工呢？答案很简单，矿工可以获得出块奖励和该区块中的手续费。 比特币协议规定，挖到新区块的矿工将获得出块奖励，刚开始是 50 个币，然后每 210000 个区块后 (约每四年) 奖励减半，目前（2019 年）是 12.5 个币。这也是比特币的供给机制，流通中新产生的比特币都是这样诞生的。 所谓交易手续费，就是矿工可以从每笔交易抽成，具体的金额由支付方自愿决定。你完全可以一毛不拔，一分钱也不给矿工，但是那样的话，你的交易可能会没有矿工愿意传递处理，从而迟迟无法得到打包确认。 减半机制使得比特币的流通量以可预测的方式出现。随着出块奖励的减少，手续费的占比将越来越大。到 2140 年，比特币的数量也将停止增加，矿工将得不到任何出块奖励。届时，矿工的收益就完全依靠交易手续费了。 双重支付 正如字面意思所说，双重支付指的是一笔钱花两次。由于交易信息很容易复制并且重新广播到网络上，所以如果没有一个很好的确认机制，消费者会有可能把同一笔钱花两次。 比特币网络通过经济方式解决双重支付的问题。交易的确认，需要投入计算资源来确认，比特币引入了工作量证明，矿工投入计算力来打包交易，若需修改某个区块上的交易，需重新计算自区块以来所有区块。比特币矿工维护着一个类似于传统现金交易系统的全局账本，这个账本以时间顺序保存了从 2009 年系统开始运转至今的所有交易和这些交易的时间戳。每一笔交易都有迹可循，已有的历史交易如果冲突，是很容易被发现的。 整个比特币系统中的每一个节点都获知每一笔交易的发生，且它们是有时间顺序的，有一个公认的交易序列。那么，只有当大部分节点都认同这笔交易是首次出现时，这笔交易才能发生。唯一可能造成这个系统崩溃的是，有一个人拥有超过整个系统 51% 的计算能力，那么他就能试图双花，并使用算力优势重写之前已被他们确认的交易记录，这就是所谓的“51% 攻击”，但随着比特币网络的算力的增长，这样做的成本也将迅速提高，在经济上得不偿失。 如果上述的内容对你来说有一些陌生的话，没关系，你可以先看看何岩同学写的《重新创造比特币》系列，会对比特币的设计有更清晰的认识。 而本书将继续前行，重新审视当年中本聪的设计。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币基本概念 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-how-bitcoin-works/privacy-model.html":{"url":"chapter-how-bitcoin-works/privacy-model.html","title":"比特币的隐私模型","keywords":"","body":"比特币隐私模型 比特币拥有一个非常简单，但相当强大的规模化隐私模型。通过 UTXO 和找零机制，可以让人们能够在交易记录有迹可寻的情况下，尽力保护好自己的隐私。其中最重要的一点是：不要重复使用地址。 白皮书第 10 节以非常简单的方式描述了隐私模型的细节。但是，大多数人似乎并不理解它。 图片的左边，是系统的隐私部分。右边，是开放的，可以看到的。这是大多数人没有理解比特币的地方。Core 团队首先提出了比特币类似于银行业的概念，并开始移除使比特币成为点对点隐私系统的大部分元素。 传统模式 在传统的隐私模型中，用户需要与第三方 (如银行) 一起完成 AML/ KYC 流程。第三方处在所有交易的中间，拥有账户资金内外流动的全部信息。不向公众提供任何信息，但任何漏洞都是灾难性的 --- 需要一个系统长期维护安全。 其结果, 这一个设计脆弱的系统。 银行离免疫非法的信息泄露还有很长的路要走。更重要的是，PII(个人身份信息, Personally Identifiable Information)允许更广泛的信任违反。该模型中的信息泄露不仅泄露了相关直接各方的活动，而且允许攻击者 (犯罪分子) 利用这些信息从事诸如身份型型盗窃犯罪等。 比特币通过创造一个真正的点对点环境，解决了这个问题。 P2P 不是节点，也不是挖矿。P2P 是个人对个人。你这个点就是交易中的另一方。理想情况下，使用 IP-2-IP 就是这样，甚至允许从 客户到商家 的直接交换。矿工仅在双方协商完成，接受方 将交易广播给区块链时才参与进来。 发送交易的人根本不需要在线。它们不需要节点，甚至不需要 IP 地址。使用 NFC，他们可以登录，下载区块头，并在以后更新他们的地址变化(或者甚至可以在一个完全独立的系统上拥有这个密钥)。 在传统模型中，可信任的第三方知道你所做的一切。银行或信贷机构保存着所有取款、取款地点和交易细节的记录 --- 包括你与谁打交道以及如何打交道。他们不希望这种情况发生改变，因为这些数据实际上是有价值的信息。 在这个模型中，银行 (或者其他 TTP) 会记录你的每一个行动，每一笔交易，并且可以建模你的所有消费行为。在 Visa 和万事达看来，这些信息可以让他们知道需要把消费者推向何方，从而欠下更多债务。它允许 TTPs 持有足够的信息来控制市场，操纵消费者。 这些 数据是价值，也是信息。作为信息，他们可以直接做广告，并高价出售。这就是陈旧的、不安全的、可操纵的、前隐私模式的结果。比特币 core, 还有其他如闪电、Plasma 等复制了这个模式。现在，你的信息是这家银行拥有的最有价值的东西， 这就是他们反对比特币的原因。他们不想失去它。这就是为什么我们看到比特币被劫持，为什么他们试图告诉你它不安全，不是隐私的，以及你听到的所有其他谎言的原因。这些人希望保留你的数据，因为这些数据有价值。 传统的银行模式通过限制相关方和可信第三方对信息的访问来保护隐私。这也是今天的 Bitpay、 Coinbase 和大多数比特币公司系统。 这不是比特币要设计的。 比特币的新模式 新的隐私模式非常简单。交易都是公开的，因为它们不与你的身份相连，也与任何特定的商家无关。重要的是，商家也希望保持隐私。竞争对手分析公司的能力导致商家建立多个地址，就像用户一样。 因此，如果一个商家不想公布他们的销售量和每笔销售额，他们需要确保他们不重复使用地址，而且这些地址不会以公众或竞争对手可以知晓的方式相互联系起来。 核心概念是，我们不重复使用密钥 币的分割 关于孩子购物和找零总有一些麻烦。像比特币中的许多事物一样，人们总把事情搞得比应有的复杂得多。为了拥有一大堆可以随意快速花掉的币，我们可以把这些币分割，在需要再把它们组合起来。有时，购物者可能需要在短时间内走很多地方。如果能够分割比特币，他们这样做便很安全。 提前分割币，所花矿工费不到一分钱。 像 Core 之流团体之所以反对比特币白皮书第 9 节的结构，是因为他们反对比特币扩容。随着交易的增加，系统变得更大，也更隐私。比特币有如下事实，即允许创建、分割和重新组合大量 in-out 交易，从而使得系统可以在没有大量未验证交易链的情况下使用，并允许 SPV 良好运行。 比如，我们有 2 个 BSV 币, 当我们逛一家旅行商店时，可以分裂它。预计通常在 5-20 分钟内，这些币可以分解到一个区块里。从一个 UTXO 币，现在我们在一个区块里有了多个可以花费的币。这样, 如果我们担心交易中的任何隐私问题，就已经创造了一种更深层次的不透明。商家无法确定我们是在 Tx 1 级支付, 还是在 Tx 0 级支付。 在单个区块中，我们现在有许多分割的交易。这些币中的每一枚都与 Tx 的 0 级币相关联，但只有一条通道。 一个商人不能讲在某个时刻已把这些币分割给另一个商人了，也不能说正在分割你的币。 如果你稍微随机地分割这些币，可以变得更隐私。此时，你可以使用多个 input 和 output，如果这些分割没有再次连接，也就没有简单的方法将各种花费联接起来。 使用此方法时，任何时候花掉的币都在 UTXO 集里，作为一个区块的已验证交易。 在这里没有必要立即花掉零钱。 当我们看到比特币被设计成一个商业系统，而不是一堆简单的树莓派机器时，我们方能理解它有多么强大，又多么简单。 商户地址 比特币被引入的一个主要缺陷是重复使用地址。人们在静态页面上公布地址。比特币的真实设计是，用户和商家只能使用一次密钥。 这样就能充当安全和隐私的防火墙，并阻止交易连接到一个地址的共同所有者。没有任何实际理由保留密钥对。一旦密钥已签署和使用，就可以删除和抛弃。通常发送一、两个 satoshi 金额的微小 \"垃圾交易\"，是不删除旧密钥的直接后果。 如果不保存密钥又希望从一个旧地址中获得钱，是没有动机向这些旧地址发送少量比特币的。这等同于向一个从未见过的随机公私密钥对发送比特币，对任何人都没有价值。 一个为每次、每笔交易创建新地址的商人可以提高他们的隐私。如果使用一个单一的公共钱包和地址结构，那么企业收集情报就很简单。而变换地址时，商家不会留下任何可供分析的东西，对他们自己和客户都更加隐私。 如果我去沃尔玛或者乐购超市购物并收到零钱，这些币现在是分割的。来自沃尔玛找零的一组交易的价值是无法分析的。单单沃尔玛每天就有超过 1500 万笔交易。 也就是在运营时，大约每秒超过 400 次交易。 有趣的是，没有一台现存的超级计算机能够通过分析比特币区块链来匹配未知来源的比特币，但同时，该系统在最短的搜索时间内又是可追踪的(例如税务审计)。 让比特币运行良好的关键不是增加复杂性，而是像最初设计的那样使用它。 随机分割增加更多的隐私。 比特币的一切都是基于经济激励。如果愿意，我们可以通过模拟使用，采用一种方式在钱包和分裂币之间发送，使我们的钱包更安全和更隐私。现在，没有钱包可以做到这一点，用户需要完全靠手动才能完成整个过程。这在代码中很容易实现，但是还没有部署，因为困扰比特币的概念仍然偏向于滥用。 在下面的例子中，我们以两个设备上的币(等级 2 对等级 3) 结束，产生许多币。如果币保持分离，我们保持颜色组分离，我们现在可以看到如何使分析来源变得越来越困难。 随着我们保持这种分割，分析出用户连接习惯的概率呈指数级减少。 隐私与匿名 比特币的隐私与匿名,一度是比特币发展中的焦点问题。尤其是丝绸之路等非法网站被打击之后，如何增加交易中的匿名性更成了部分开发者的目标，比如隐藏交易者地址与身份的闪电网络，比如隐藏交易者钱币来源与去向的混币技术等等，甚至出现了许多以匿名为直接目标的数字货币，如门罗币与Z-cash等。随着欧盟、美国及世界诸国相继将数字货币纳入金钱处理监管，纳入反洗钱法监管，隐私与匿名的争议将越来越激烈。那么法律上如何看待隐私与匿名？ 为了正确理解隐私与匿名，我们首先思考一下隐私与匿名所要保护的对象是什么？对，个人信息，无论是自然人的还是法人的不愿公开的私人信息。进一步，哪些私人信息可纳入隐私或匿名范畴？这个 非常复杂了，不同国家、不同民族，甚至不同人群，都有各自独特的对个人不愿公开信息的理解，比如有人认为电话号码不宜公布，而有人则直接在网上公布自己的电话号码，住所也一样，即使比较隐私的疾病信息，是否归入隐私，不同人也有不同理解，所以何为隐私或匿名需要保护的内容，千人千不同，那么法律上有最低的保护水准或保护内容么？仔细想想，除了不愿公开的主观意愿，客观内容真不易确定。但是，为了分析比特币的隐私与匿名，我们可以采用一种光谱分析法。 对于个人信息的披露，我们可以分成两个极端，位于光谱两端，一个是绝对不公开，即完全匿名，即一切个人信息均不作任何公开；一个极端是绝对公开，即完全透明，即一切个人信息在主观或客观上不做任何保护，任何第三人均可轻易得到或被给予他的包括身份、财产等隐私在内的全部个人信息。凭常识可以判断，对于绝大多数人，不可能做到或愿意完全匿名或完全透明，而是处在两个极端光谱之间，有些人、在有些场景可能愿意披露的个人信息多一些，更靠近完全透明一侧；有些人、在有些场景可能不愿披露的个人信息更多一些，更靠近完全匿名一侧。 总有一些人或者政府希望获得或窥伺他人更多的个人信息，也总有人尽量保护自己的个人信息不被他人侦测或获取。故整个人类社会，隐私的获取与保护是处在一个动态平衡之中的，平衡点就在上述两个极端光谱之间移动。当平衡点大致稳定而不经常移动时，我们可以说这个社会的秩序是稳定的，如果平衡点经常在移动，可以说这个社会是处于剧烈动荡之中，比如战争状态、动乱状态或紧急状态，此时个人信息常被不自愿披露。 所以，比特币作为一种前所未有的发明，作为一种以全球通用货币为目标的发明，作为与未来整个人类、每个人、每个政府可能息息相关的发明，其必须在隐私保护方面找到一个最佳平衡点，以使社会秩序大致稳定，而不发生重大偏移。 完全匿名的比特币显然不可取，以完全匿名为目标的数字货币显然也不可取。这里的完全匿名与上面提到的光谱一侧的完全匿名在货币场景下是同一个含义，意即这种货币的转移和存储完全对其他所有人、所有机构屏蔽身份信息，也就是这个人完全在黑暗中交易，甚至连交易对手也不知情。就人类生活与法律经验，完全匿名的数字货币处在处在光谱的极端一侧，不可能为绝大多数人选择，不可能成为通用货币，至少法律就第一个不允许。比如已经生效的美国金融犯罪执法网络的条例以及欧盟反洗钱指令均要求数字货币的传递与托管机构必须符合反洗钱法，意味着它们必须执行KYC和大金额的报告制度.仅凭法律这一条,完全匿名的数字货币已难以生存,更遑论人类几千年来基于诚实的生活经验。 但同样，比特币也不能处在完全透明的光谱一侧，否则无人敢进行比特币交易，因为一旦交易，个人身份便被锁定，毫无隐私可言。所以，比特币必须在完全透明与完全匿名之间找到一种保护隐私的方法，以满足不同地区、不同人群的隐私保护需求。比特币的发明人非常天才，他找到了人类货币的可追踪性这一本质特征，将光谱的平衡点建立在比特币的可追踪性这一特征之上。 比特币的可追踪性包括两个重要特征，缺一不可。一、任何比特币交易包括与之相关的发票、合同等，均记录于链上，实现货币和交易的可追踪性。二、任何比特币交易包括与之相关的发票、合同等信息数据均以特定算法以私钥加密，除非特定人，其他任何人均无法访问，从而实现隐私性。更进一步，为了防止大数据追踪，采用一次交易一次地址的算法，隐私得到更强保护；又为了适应不同主权国家、不同地区的要求，采用区块的双哈希算法，据此可以过滤特定交易，实现了隐私与现实法律的平衡。 故，比特币在最底层的协议层面，实现了隐私与匿名之间的最基础平衡，可以确保社会秩序不致大幅波动。但正如前文所说，隐私在本质上是个人保护意愿及能力与他人或政府窥伺意愿及能力之间的一种动态平衡，当比特币在技术层面实现了最基础的平衡之后，至于现实中的真实平衡点。则有赖于在应用层面各方之间的博弈平衡，比如仅KYC一条，不同国家、不同地区甚至不同交易机构就可能有不同规定，有的可能只要身份证认证，有的则需要视频认证，有的则可能需要生物学认证等等，这些属于不同人群、不同国家在比特币最基础平衡基础上形成的各个现实法律下的新平衡。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币的隐私模型 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-wallet/":{"url":"chapter-wallet/","title":"比特币钱包的使用","keywords":"","body":"比特币钱包 本章将介绍比特币钱包的使用方法。其中包括 BIP39 助记词，HD 钱包，Paymail 协议，以及几款常用钱包的介绍。 什么是比特币钱包 在收发比特币时会使用专门的桌面软件或手机 App，这类应用程序统称为比特币 “钱包”。钱包软件涵盖的功能大致有： 管理用户的私钥，可以导入已有私钥，也可以创建新的私钥 现在的钱包大多支持 BIP39 提案，即通过一串助记词(通常是12个英文单词)来生成无数个私钥 能从区块链中查找出所有属于该用户的 UTXO，即被这些私钥对应的公钥哈希锁定的所有 UTXO 在支付时能合理挑选或组合 UTXO 以满足交易所需金额并计算手续费 能用私钥签名并向网络广播交易 了解钱包的工作原理十分必要，这能让你更高效的使用软件，更安全的 “存储”（其实是保护私钥）和收发比特币。 不泄漏私钥原则 比特币网络是一个去中心化的网络，上面的信息都是公开透明的。这意味着： 区块链记录了比特币从诞生至今的所有交易 交易是 UTXO 集状态变化的反映，每一笔交易会消耗之前创建的 UTXO，同时创建新的 UTXO。从而形成一条交易的链条 UTXO 直接存储在区块链上，它由锁定脚本锁定 比特币系统通过交易链条串联起来的 UTXO 来表达某个地址上的所有交易活动（交易历史），系统中没有 “账户” 和 “账户余额” 的概念 当我说 “我有 1 个比特币” 时，其实是在表达 “被我的公钥哈希锁定的所有 UTXO 的面值之和，是 1 比特币”（不考虑 P2PKH 以外的交易类型） 私钥意味着一切，掌握私钥就拥有并可以支付其对应公钥哈希上锁定的比特币 所以， 比特币是直接记录在区块链上的，并不真正 “存放” 在钱包软件里 真正 控制你比特币的是私钥 ，钱包只是帮你管理一批私钥，这些私钥控制的所有 UTXO 的面值之和，就是你的 “账户余额” 妥善保管好私钥(或助记词)，任何获得私钥的人都能签名并\b操纵其对应的比特币 不重用地址原则 我们常说，比特币交易是 公开的 ，区块链记录了所有的交易，全网公开可查 匿名的 ，没有人知道谁控制了哪些地址，除非这个人主动承认并提供证明 不可篡改的 ，因为挖矿共识的存在，交易一旦被写入区块，随着区块链的不断延长（区块确认越来越多）重新计算这些区块变得没有可能 出于隐私保护的目的，一个比特币地址只应被使用一次，这样能避免别有用心之人根据已知信息追踪到你其他的交易活动（社会工程学）。 出于安全的考虑，也应该这么做，当你不小心泄露了某个地址的私钥时，不至于损失所有的比特币。 一般的， 每次收款都应使用不同的地址 每个地址上的币数不宜过多，例如不超过 100 个 支付时如果需要找零，应找零到新地址 接下来，本章将介绍几款常用的 BSV 钱包。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币钱包的使用 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-wallet/ddpurse.html":{"url":"chapter-wallet/ddpurse.html","title":"打点钱包","keywords":"","body":"打点钱包的使用 打点钱包是什么 打点钱包(DotWallet.com)是一款安全便捷的网页版数字货币轻钱包，立足于多重签名和链上交易等技术，让您安全放心的使用数字货币；打点钱包通过创新的趣味红包和转账功能，可以轻松发送和接收数字货币，减少中间过程，减轻出错风险；打点钱包忠于比特币的核心价值，注重用户财富的隐私性和安全性，承诺不会访问您的账户，并且私钥由您自持，因此，请妥善保管好您的私钥。目前，打点钱包可支持 BTC 和 BSV。 使用指南 打点钱包是一款安全便捷的 web 版数字货币轻钱包，帮助你轻松、安全地管理账户和资产，可支持 BTC 和 BSV，主要功能包括：收款、转账、存储、资产估值等。 1. 【收款】和【转账】：在此可以进行收发币活动。打点钱包支持收发 BTC 和 BSV 并支持 0 确认到账。 2. 【账户设置】中包括 BSV 助记词备份；密码设置；多语言设置等 3. 【账户总资产折合】即对账户总资产进行估值，将账户所有币种全都折合成 BSV/BTC，并按照当前币价换算成 CNY，实时了解您的资产现状； 4. 【资产总览】：点击中间余额显示位置，可跳转到“资产总览”，可快速查看资产详情。 5.【最新交易】：首页始终显示最新的三条交易记录；【查看全部】中可以查看您所有的收发币记录及状态，点开任意一条交易记录就可以查看相关明细； 助记词备份 钱包备份，可以说是使用数字资产安全中最最重要的一个环节。 据不完全统计，数字资产丢失的最常见情况，并不是被盗，而是用户自己没有很好的备份钱包，或是忘记了钱包助记词或私钥。 ➢ 首先，在首页的“账户设置”，点击“助记词备份”； ➢ 这时候会出现 12 个单词，提示您备份助记词，PS：这是最重要的环节！ ➢ 按顺序，在纸上完整的抄下这些字母之后，点击“抄好了”; ➢ 最后，会提示您再次确认钱包助记词，按顺序将刚刚的助记词填入即可。 转账和收款 收款 在主界面点击收款，即可进入收款界面（默认 BSV 收款，如需收 BTC，需点击【切换币种】），可复制你的钱包地址，也可直接生成二维码进行收款。用户可以请求使用新地址，同时，旧地址也可以使用的，在【历史收款地址】里可以查到。 注：请转入收款地址相对应的币种，否则将会导致您的资产无法找回！ 转账 打点钱包支持 “地址转账”，“微信转账”“发红包” 多种方式转账。 ➢ 地址转账：目的地址可通过复制粘贴方式填写，输入对金额和目的地址后，确认没问题，点击确认即可。 ➢ 微信转账（BTC 暂无法使用该功能）： 点击 “微信转账” 进入 “微信转账” 页面，输入 “转出数量” 再点击转账按钮后出现转账详情确认，最后将转账信息分享到微信好友即可。 ➢ 发红包（BTC 暂无法使用该功能）： 点击 “发送红包” 进入 “发送红包” 页面，您可以在页面中选择 “普通红包” 或者 “拼手气红包”。输入“转出数量”、“红包个数” 再点击转账按钮后出现转账详情确认，最后将红包分享到微信好友即可。 您可以给任意微信好友转账或发红包，也可以给任意微信群发普通红包或者拼手气红包。 拆红包 点开即可拆红包，红包金额即可进入你的钱包里，收取他人转账同理。 查看交易记录 方式一：钱包内查看 打开钱包，在首页会直观的显示最近的三条交易记录，点击任意一条交易记录就可以查看明细。当然也可以点击 “查看全部” 查看你所有的交易记录。 方式二：微信公众号查看 打开微信，关注 “打点钱包” 公众号，微信授权登录或绑定了微信的账号，账户资金变动会在公众号实时提醒。 以上就是打点钱包的使用和基本操作 还有疑问可以加客服微信了解：ddpurse new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 打点钱包 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-wallet/moneybutton.html":{"url":"chapter-wallet/moneybutton.html","title":"MoneyButton","keywords":"","body":"MoneyButton 钱包的使用 MoneyButton，是一款极简单的支付系统（Simple Payment System），只需轻轻一滑，支付随即完成；支持 Paymail：比特币的可扩展身份协议，用户相互转账，只需使用邮件地址，而不是复杂的比特币地址，转账就像发送邮件一样简单方便，邮件地址也便于记忆、管理，Paymail 与现有身份系统兼容。 目前，开发人员很容易将其构建到应用程序中，用户也很容易用它付款。交易费用为零，支付不能被冻结、撤销、冻结。因此，要想更好的体验 BSV 应用，首先需要拥有一个 MoneyButton 账号。 注册 官网：https://www.moneybutton.com 注册： 抄好助记词 备份助记词，不要拍照，不要网络存储，一定要用笔抄写保存好助记词，如果忘记密码，可以通过助记词恢复钱包里的 BSV。 存放 BSV 在准备存钱之前，请打开注册时的邮箱先进行验证。 方法 1：注册后第一次使用时遇到的存放 BSV 界面 方法 2：在钱包的主界面存放 BSV 发送 BSV 查看收发 BSV 历史记录 查看自己的 ID 号 创建 Paymail 的好处 用户相互转账，只需使用 Paymail, 而不是复杂的比特币地址，便于记忆、管理；用户可以创建、购买和销售 Paymail；与现有身份系统兼容、启用身份的每个应用程序，众多优势...... 创建 Paymail 注册 MoneyButton 后，你会拥有一个免费、默认的数字序号的 Paymail. 设置销售 Paymail 设置新的 Paymail 为默认值 修改销售价格 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 MoneyButton |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么 "},"chapter-wallet/simply-cash.html":{"url":"chapter-wallet/simply-cash.html","title":"Simply Cash","keywords":"","body":"Simply Cash 钱包的使用 Simply Cash 是一款专注在 BSV 上的一款钱包，它给人总体感觉是简洁大方，功能丰富，是一款小而美的钱包。下面从功能方面，逐一介绍其功能特点。 下载地址： https://simply.cash/ HD 的常规收发 先从功能上看，作为一个单币种的钱包，它具备常规的 HD 收发功能。创建钱包之后，进入就是一个简洁明了的收款页面，展示了余额，简单直接。 通过右上角的时钟图标，可以查看该钱包内的所有的交易记录。 多钱包支持 Simply Cash 支持多个钱包，点击顶部的钱包名称，即可呼出钱包切换界面，可以选择创建或者恢复一个钱包。 创建和恢复其实是一样的，都是创建，Simply Cash 支持各种导入方式，需要给钱包取个名字，输入助记词 或者 扩展私钥（xprv）或者扩展公钥（xpub）。如果选的是助记词或者 xprv，则会创建一个正常的钱包，如果填入的是 xpub，那么创建的将会是一个只能观察，不能签名的钱包。 此外，虽然钱包创建时默认是 BIP44 的路径，但它也支持自定义地址派生 PATH，这样导入钱包时，即使别的钱包派生的路径不一样（比如币种编号不一样），那么也能处理，避免了导入失败、余额不显示等情况。 多个钱包之间可以方便切换，也不需要那么多 PIN 码，不用担心忘记密码，使用上比较便捷。如果担心安全问题，可以通过 “保护” 功能，开启密码或者指纹保护。 派生地址管理 导入钱包后，Simply Cash 将会按照指定规则派生地址，一般是从 0 下标开始派生，如果 20 个地址内没有交易记录，那么就停止派生，最多支持 1000 个地址派生。你会发现在 更多 - 地址 里面有许多的地址，有收款、找换、未花费，展示的是地址的派生路径、地址，以及余额（如果有的话）。 点击进去可以看地址的详细情况，或者去浏览器里面查看这个地址。 Sweep 功能 Sweep 也叫清理功能，所谓清理，就是把一整个钱包或者某个地址下面的所有余额都转走。Simply Cash 支持从别的钱包一键清理到该钱包，只需要填入地址的 WIF 即可。当然，从地址管理页面也可以进入 WIF 界面，然后点击 Sweep，就会将这个地址的所有 UTXO（也即余额）转移到钱包的另外一个地址里面，这样就可以凑零为整了。 冷钱包 + 观察模式 钱包也可以当成一个冷钱包来使用，所谓冷钱包，就是雪藏起来的钱包，与外界不接触或几乎不接触。先把 App 下载安装好，然后切断网络，创建好钱包，查看 xpub，用另外一个联网的手机扫描这个 xpub 二维码，就可以创建一个观察钱包，与不联网的冷钱包配对使用。观察钱包只能查看余额和地址，但是不能签名，而冷钱包能签名，但是不能联网。 发送交易时，在观察钱包中填好地址和金额，构造好未签名的交易，交易将会以二维码的方式呈现。 这个时候，使用冷钱包扫描二维码，则可以解析出该笔交易，钱包将会自动识别，提示使用私钥进行签署，签署完成，将会生成已签名的交易，并以二维码的方式呈现，方便观察钱包扫描。使用观察钱包扫码，交易就自动发出去了。 总的来说，Simply Cash 还是蛮有特色的，虽然很小很简单，但是也具备了较丰富的功能，能够满足区块链领域专业用户的需求，获得用户的喜爱。专业用户他们往往持有较多的币，并且有区块链相关知识。更加在乎的是钱包的专业程度，速度快不快、功能顺不顺手、能不能满足多钱包、冷钱包等高级需求等。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 Simply Cash |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-transaction/":{"url":"chapter-transaction/","title":"比特币交易","keywords":"","body":"比特币交易 比特币旨在用作点对点现金。当白皮书和节点软件发布时，系统创建了两种汇款方式。 比特币有两种汇款方式。 如果收件人在线，你可以输入他们的 IP 地址，它将直接连接并获得一个新的公钥并发送带有注释的交易。 如果收件人不在线，那么可以发送到他们的比特币地址，即他们给你的公钥的哈希。 他们在下次上线时获得包含该交易的区块。这种方法的缺点是没有办法发送注释信息，而且如果多次使用同一地址的话，可能会丢失一些隐私性。但如果两个用户都不能同时在线或收件人无法接收连接，它是一个有用的替代方案。--中本聪 本章介绍比特币的交易的构成，私钥、公钥和地址的对应关系，说明比特币交易签名和发送的过程，并简要介绍几种交易签名操作的使用场景。 比特币交易指的是什么 比特币中的交易是比特币系统中最重要的部分。系统中的其他部分，都是为了确保交易可以 被生成 通过比特币网络的验证，在网络中传播 最终被添加到记录全球比特币交易数据的总账簿（比特币区块链）中 比特币的交易，使用 复式记账法（复式簿记，double-entry bookkeeping）的形式，输入和输出比特币总量的差值，是隐含在这笔交易中的手续费。 对交易的双方： 付款方，需要提供证明和授权信息，证明自己拥有和授权支付这些比特币，是这笔交易的 输入 收款方，需要提供 “收款地址”，“接收” 比特币，是这笔交易的 输出 回忆一下 非对称加密的细节，使用公钥 pk ，去验证消息 msg 的签名 sig ，如果验签成功， verify(pk, msg, sig) == true 我们可以说，持有这个公钥对应私钥的那个人， 认可 消息的内容。 可以把公钥，当作一种 身份标识 ，认可某个消息，就用私钥对消息签名。 可以把提供正确的消息签名，当作身份认证和授权的手段，因为只有持有了这个公钥对应的私钥，才能提供正确的签名。 这正是比特币交易的基本原理： 使用非对称加密的公钥，或者公钥的哈希（数据指纹），作为比特币的 “收款地址”（身份标识） 支付时，除非用对应私钥签名，证明拥有和授权支付这些比特币，否则无法支付 公钥和私钥一一对应只能单向计算，支付时，只有拥有对应的私钥，才能生成正确的证明和授权信息，无法伪造，不可抵赖。 交易链条 Alice 用现金从 Joe 那里换了点比特币，之后去 Bob 的咖啡店支付比特币购买咖啡。 比特币的每笔交易，都用一个哈希值来索引和标识。 交易 7957a35fe64f80d234d76d83a2a8f1a0d8149a41d81de548f0a65a8a999f6f18 中： Joe 支付了 0.1 个币给 Alice 这笔交易没有手续费 Alice 在随后的交易 0627052b6f28912f2703066a912ea577f2ce4da4caa5a5fbd8a57286c345c2f2 中： 用之前的交易输出，作为输入 输出 0.015 个币给 Bob 购买咖啡 输出 0.0845 个币的找零（Change） 手续费为 0.0005 个币 从图中你能看到： 一笔交易的输入，是之前某笔交易的输出 交易输出 是构成比特币交易的基本元素 比特币的单位 像人民币可以用元、角、分表示一样，比特币最小可以被分割成八位小数的 聪 （satoshi）。 1 BSV = 100,000,000 satoshi 除了聪之外，常用的还有 mBSV 和 μBSV。 1 BSV = 1,000 mBSV 1 BSV = 1,000,000 μBSV UTXO 比特币网络会 跟踪 所有可找到的和可使用的交易输出，称为 未花费的交易输出 （UTXO，Unspent Transaction Outputs）。 “未花费” 的意思是，这个交易输出，可以在之后的交易的中（作为输入）被花费。 所有 UTXO 的集合，被称为 UTXO 集（UTXO set）。 交易会消耗 UTXO（输入），同时创建新的 UTXO（输出），交易反映了 UTXO 集的变化。 UTXO 是 面值为 “聪” 的、离散不连续的、不可分割的价值单元 。 面值可以是 1 聪（satoshi）的任意整数倍 一旦被创建出来便不可分割，只能在之后的某笔交易中被 整体消耗 掉 你可以组合若干小额 UTXO，来满足支付需求，就像你凑零钱去买可乐一样。 如果你有两个 UTXO，一个面值为 1 比特币，一个面值为 2 比特币，需要支付 2.5 比特币（没有手续费）： 这两个 UTXO 作为交易输入，都被整体消耗掉 产生两个新的 UTXO，一个面值为 2.5 比特币（支付），一个面值为 0.5 比特币（找零） 如果一个 UTXO 的面值比一笔交易的所需量大，你使用一个面值为 4 比特币的 UTXO 去买可乐（没有手续费）： 这一个 4 比特币的 UTXO 作为交易输入，被整体消耗掉 产生两个新的 UTXO，一个面值为 2.5 比特币（支付），一个面值为 1.5 比特币（找零） 一个 UTXO 是一个不可分割的价值单元，就像你不能把一张人民币撕开后继续使用一样。 你可以通过组合 UTXO，来创建任意金额的比特币交易。 Coinbase 交易 一笔交易会消耗之前创建的 UTXO，并创建新的 UTXO 以备之后的交易消耗。 当交易链条一直向前回溯，是先有输入，还是先有输出呢？严格来说，是先产生输出。 这是一种被称为 Coinbase 交易（创币交易或币基交易）的特殊交易。Coinbase 交易没有输入，可以 “无中生有” 的产生输出，即发行新的比特币。 更多关于 Coinbase 交易的内容，会在介绍比特币区块和挖矿的文章中详述。 总结 交易的本质是一种 数据结构 ，记录了交易参与者 价值转移 的相关信息 UTXO 是构成交易的基本元素，一笔交易的输入，是之前某笔交易的输出 UTXO 一旦被创建出来，便是一个不可分割的价值单元，只能在之后的交易中被整体消耗 交易反映了 UTXO 集的变化 交易可以包含一个或多个输入，产生一个或多个输出 Coinbase 交易会发行新的比特币，是一种没有输入只有输出的特殊交易 交易是构成比特币区块的基本单位，区块按产生时间顺序依次相连，构成了区块链。 比特币的每笔交易都是在区块链上的一个公开记录。 比特币区块链是一本全球复式记账总账簿，这个总账簿是 公开的 ， 私密的 ， 不可篡改的 。通过区块链浏览器，可以检索从比特币诞生至今所有的交易数据。 另外，强烈建议你去看看普林斯顿大学的公开课 Bitcoin and Cryptocurrency Technologies。第一讲作为背景知识介绍，由浅入深涵盖了下列内容： Cryptographic hash functions 1:51 Hash pointers and data structures 20:28 Digital signatures 29:25 Public keys as identities 39:04 A simple cryptocurrency 44:39 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币交易 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-transaction/transaction-structure.html":{"url":"chapter-transaction/transaction-structure.html","title":"比特币交易的结构","keywords":"","body":"比特币交易的结构 比特币的交易，由一个或多个输出和一个或多个输入（Coinbase 交易是一种特殊情况）构成。 交易的每个输出上，都会附上一个加密难题，定义将来在花费这笔 UTXO 时需要满足的条件。 交易的每个输入上，都要提供一个解锁脚本，解决或满足之前附在这笔 UTXO 上的加密难题或条件，解锁 UTXO 用于支付。 如果你从前面的文章一路看过来，理解了比特币交易的细节，你应该能设计出下面的数据结构。 对交易的每个输出 TxOut，需要有 这个 UTXO 的币值 锁定脚本 对交易的每个输入 TxIn，需要有 这笔 UTXO 来自之前哪笔交易的第几个输出（需要表达 交易链条 ） 解锁脚本 对交易，需要有 这笔交易的哈希（数据指纹），用于标识和索引这笔交易 TxIn 数组，表示这笔交易的所有输入 TxOut 数组，表示这笔交易的所有输出 这样的设计能满足需求，同时又足够精简。这篇文章，介绍比特币交易的数据结构。 输出 代码 /** * An output of a transaction. It contains the public key that the next input * must be able to sign with to claim it. */ class CTxOut { public: Amount nValue; // UTXO 的币值，8 字节整数，单位是聪 CScript scriptPubKey; // 锁定脚本 ...... }; Amount 的类声明在 这里。 struct Amount { private: int64_t amount; ...... }; CScript 的类声明在 这里。 输入 代码 /** * An input of a transaction. It contains the location of the previous * transaction's output that it claims and a signature that matches the output's * public key. */ class CTxIn { public: COutPoint prevout; // UTXO 的来源，包含一个交易哈希和一个索引号，用来表示哪笔交易的第几个输出 CScript scriptSig; // 解锁脚本 uint32_t nSequence; ...... }; COutPoint 的类声明在 这里。 /** * An outpoint - a combination of a transaction hash and an index n into its * vout. */ class COutPoint { private: TxId txid; // 交易哈希 uint32_t n; // 输出的序号 ...... }; 输入有一个 4 字节的 nSequence 字段，以后的文章中再说。 交易 代码 /** * The basic transaction that is broadcasted on the network and contained in * blocks. A transaction can contain multiple inputs and outputs. */ class CTransaction { public: const int32_t nVersion; // 交易结构的版本标识，4 字节 const std::vector vin; // 输入数组 const std::vector vout; // 输出数组 const uint32_t nLockTime; ...... private: const uint256 hash; // 交易的哈希 ...... }; 交易有一个 4 字节的 nLockTime 字段，以后的文章中再说。 序列化和反序列化 程序中，一般用特定的 数据结构 ，来表示和存储具体的数据，就像上面描述的那样。 这样的数据，方便人们识别和理解，方便程序操作，但不方便在网络上传输。 在传输前需要将数据结构转换成方便网络传输的 字节流 形式，这个过程称为 序列化 。 从字节流 “恢复” 数据成数据结构的形式，这个过程称为 反序列化 。 举个例子方便理解。我们可以定义下面的数据结构，来表示二十四小时制的时间。 Type Time { uint32_t hour; uint32_t minute; uint32_t second; }; 时、分、秒分别用 4 字节整数表示，20:35:10 可以表示为 Time t; t.hour = 20; // 00 00 00 14 t.minute = 35; // 00 00 00 23 t.second = 10; // 00 00 00 0a 注释后面是数据的十六进制表示。在传输数据时，发送 00 00 00 14 00 00 00 23 00 00 00 0a 并规定： 你会收到 12 字节的数据 第一个 4 字节数据是 “时” 第二个 4 字节数据是 “分” 第三个 4 字节数据是 “秒” 对方在收到数据后，就能根据规则，将字节流还原成数据结构的形式。 注意到，数据结构不仅包含数据的值，还描述 “这是什么数据”。 当你看到 t.hour = 20，你知道这个数据表示时间中的 “小时”，值为 20。 但当你看到 00 00 00 14，你只知道这个数据的值为 20，但不知道这是 20 时，还是 20 分，还是 20 秒。所以，需要定义序列化的规则。 另一个不容易注意到的点是，需要多字节表达的数据项（用 4 字节来表达 “小时” 字段）的值，如何在在字节流中排列。 上面的例子中，你收到第一个 4 字节的顺序为 00 00 00 14 你默认了，先收到的字节为这个数据的 高位字节 ，后收到的为 低位字节 ，所以你得到 00 00 00 14。 换个角度说，如果对方认为先收到的字节为这个数据的低位字节，那他会把这个数据解析成 14 00 00 00，引起错误。 所以，字节流传输时，还需要定义字节的排列模式，这是另一个很有意思的话题，称为 字节序 （Endianness），下面是一些资料和讨论。 理解字节序 Little Endian, The order of bytes that a computer like to read in. What would you change about the Bitcoin protocol? 比特币系统中， 除了解锁脚本和锁定脚本 ，其他部分均使用 小端模式 编码，认为 先收到的字节为数据的低位字节 。 如果我们以小端模式来传输刚才的数据，字节流应该是 14 00 00 00 23 00 00 00 0a 00 00 00 序列化输出 输出序列化后，格式如下。 长度（字节） 描述 8 以聪为单位的币值 1~9 VarInt 后面紧跟的锁定脚本，有多少字节 变长 锁定脚本的内容 对于下面这个序列化后的交易输出， 60e31600000000001976a914ab68025513c3dbd2f7b92a94e0581f5d50f654e788ac 可以反序列化为 60e3160000000000 是币值，小端模式，值为 00 00 00 00 00 16 e3 60，1500000 聪，0.015 比特币 19，后面紧跟的 25 字节是锁定脚本 76a914ab68025513c3dbd2f7b92a94e0581f5d50f654e788ac，锁定脚本的内容 序列化输入 输入序列化后，格式如下。 长度（字节） 描述 32 引用的交易哈希，UTXO 来自哪笔交易 4 引用的输出序号，UTXO 是那笔交易的第几个输出，从 0 开始计数 1~9 VarInt 后面紧跟的解锁脚本，有多少字节 变长 解锁脚本的内容 4 nSequence 对于下面这个序列化后的交易输入（我加了换行方便识别）， 186f9f998a5aa6f048e51dd8419a14d8a0f1a8a2836dd734d2804fe65fa35779 00000000 8b 483045022100884d142d86652a3f47ba4746ec719bbfbd040a570b1deccbb6498c75c4ae24cb02204b9f039ff08df09cbe9f6addac960298cad530a863ea8f53982c09db8f6e381301410484ecc0d46f1918b30928fa0e4ed99f16a0fb4fde0735e7ade8416ab9fe423cc5412336376789d172787ec3457eee41c04f4938de5cc17b4a10fa336a8d752adf ffffffff 可以反序列化为 这个输入使用的 UTXO，是交易 7957a35fe64f80d234d76d83a2a8f1a0d8149a41d81de548f0a65a8a999f6f18 的第 0 个输出 8b，后面紧跟的 139 字节，是解锁脚本， 48304502...8d752adf，解锁脚本的内容 ffffffff 是 nSequence 的值 序列化交易 交易由输入和输出构成。交易序列化后，格式如下。 长度（字节） 描述 4 交易结构的版本 1~9 VarInt 交易包含几个输入，非零正整数 变长 输入数组 1~9 VarInt 交易包含几个输出，非零正整数 变长 输出数组 4 nLockTime 你注意到没有，交易序列化后， 没有 交易哈希的部分。 只需要对序列化后的交易数据做哈希运算，就可以得到交易的哈希值，这种冗余的信息，并不需要传输。 通过下面的过程，计算交易的哈希。 对序列化后的交易数据做 SHA256 运算，得到 S1 对 S1 做 SHA256 运算，得到 S2 按字节翻转 S2，得到交易的哈希 Alice 去 Bob 的咖啡店支付 0.015 比特币购买咖啡，生成了交易 0627052b6f28912f2703066a912ea577f2ce4da4caa5a5fbd8a57286c345c2f2。 下面是这笔交易序列化后的样子（我替你加了换行），你能从中找到各个字段的信息吗？ 01000000 01 186f9f998a5aa6f048e51dd8419a14d8a0f1a8a2836dd734d2804fe65fa35779 00000000 8b 483045022100884d142d86652a3f47ba4746ec719bbfbd040a570b1deccbb6498c75c4ae24cb02204b9f039ff08df09cbe9f6addac960298cad530a863ea8f53982c09db8f6e381301410484ecc0d46f1918b30928fa0e4ed99f16a0fb4fde0735e7ade8416ab9fe423cc5412336376789d172787ec3457eee41c04f4938de5cc17b4a10fa336a8d752adf ffffffff 02 60e3160000000000 19 76a914ab68025513c3dbd2f7b92a94e0581f5d50f654e788ac d0ef800000000000 19 76a9147f9b1a7fb68d60c536c2fd8aeaa53a8f3cc025a888ac 00000000 点下面的链接，体验一下计算交易哈希的过程。 对序列化后的交易数据做 SHA256，得到 S1 的值dda380359b9d149fbc48d95aebbbe59117d91fb19e00d13f8992b38ada9654be 第 S1 做 SHA256，得到 S2 的值f2c245c38672a5d8fba5a5caa44dcef277a52e916a0603272f91286f2b052706 按字节翻转 S2，得到交易的哈希 0627052b6f28912f2703066a912ea577f2ce4da4caa5a5fbd8a57286c345c2f2 另一个需要注意的点是，Coinbase 交易虽然不需要输入，但结构上输入数组仍然存在（长度为 1），输入结构中的各字段也都会被置成特殊值，用来标识。 引用的交易哈希全为 0 引用的输出序号全为 f 解锁脚本的长度为 2 ~ 100 字节 解锁脚本的内容，随意 nSequence 的值为 ffffffff 交易 d0ec21e1d73d06be76c2b5b1e5ec486085bda8264229046c11b95f66f2eded83 是一笔 Coinbase 交易，序列化后内容如下。 01000000 01 One more thing 你有没有发现，序列化规则中，描述脚本长度、数组个数的字段，其长度也是变化的。 60e3160000000000 19 76a914ab68025513c3dbd2f7b92a94e0581f5d50f654e788ac 这是刚才的例子，前 8 字节 60e3160000000000 表示币值是确定的，因为规则定义了币值用 8 个字节表达。 但 “锁定脚本的大小” 字段，其长度是不确定的，可以用 1 ~ 9 个字节来表达。 参考 精通比特币（第二版）译文 原文 Transaction Protocol documentation #Variable length integer VarInt - A format for indicating the size of upcoming data TxBinaryMap, Bitcoin Wiki Coinbase Transaction, A transaction used to claim a block reward. new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币交易的结构 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么 "},"chapter-transaction/crypto-in-bitcoin.html":{"url":"chapter-transaction/crypto-in-bitcoin.html","title":"加密算法","keywords":"","body":"加密算法 哈希函数和 SHA256 哈希函数（Hash），也称为散列函数或散列算法，是一种从任何一种数据中创建小的数字 “指纹” 的方法。散列函数把消息或数据压缩成摘要，使得数据量变小，将数据的格式固定下来。该函数将数据打乱混合，重新创建一个叫做散列值（hashes）的指纹。散列值通常用一个短的随机字母和数字组成的字符串来代表。好的散列函数在输入域中很少出现散列冲突。 原始数据 --- 输入 --> 哈希函数 --- 输出 --> 数据指纹 一般的， 哈希函数是一种数据转换函数，将输入（原数据）映射成输出（索引） 设计良好的哈希函数，对不同的输入，会得到不同的输出 哈希函数能压缩输入数据，生成固定长度的输出 计算过程不可逆，是输入到输出的单向函数 哈希函数的概念非常宽泛，是一类算法的统称，常见的哈希函数有 MD5、SHA 等。 SHA（Secure Hash Algorithm，安全散列算法）是一个密码散列函数家族，由美国国家安全局（NSA）设计，并由美国国家标准与技术研究院（NIST）发布，是美国的政府标准。SHA 家族包括 SHA-0、SHA-1、SHA-2 和 SHA-3 四个函数系列。SHA256 是 SHA-2 系列的函数。 对于 SHA256， 无论输入多长，都输出 64 个字符，共 32 字节（byte），256 位（bit） 输出只包含数字 0 ~ 9 和字母 A ~ F， 大小写不敏感 非对称加密和签名认证 现代密码学中，加密算法包括两部分。 算法，一组规定如何进行加解密的规则，描述加解密的具体操作步骤。为了方便使用及保证算法可靠性，算法都是公开的 密钥，用于算法的 秘密参数 在对称加密中，无论加密还是解密，都使用同一个密钥。因此， 对密钥的保护十分重要，泄露则意味着通信密文不再安全 通信双方在交换密钥时，特别是在公开的、不可信的链路（互联网）上交换密钥时，要确保密钥从未泄露（Diffie-Hellman 密钥交换算法） 受 Diffie-Hellman 密钥交换算法的启发，人们意识到加密和解密可以使用不同的密钥，只要这对密钥有某种对应关系即可。 这种新的加密模式被称为 非对称加密 ， 有两把密钥，一把是公开的公钥，还有一把是不公开的私钥 公钥和私钥一一对应，有一把公钥就必然有一把与之对应的、独一无二的私钥，反之亦成立 同时生成公钥和私钥应该相对容易，但从公钥推算私钥应是极其困难或是不可能的 所有的密钥对（公钥和私钥）都是不同的 用私钥可以解开公钥加密的消息，反之亦成立 加密和解密 韩梅梅事先生成好了一对密钥，并只公开了自己的公钥。 李雷想加密发送给韩梅梅的消息，需要 用韩梅梅的公钥，加密要发给韩梅梅的信息，将密文发送给韩梅梅 韩梅梅收到密文后，用自己的私钥解密 这段密文只有用对应的私钥（韩梅梅的私钥）才可以解密。只要韩梅梅的私钥没有泄露，这段密文就只有韩梅梅能解开，即使其他人获得密文，也无法解密。 常用的非对称加密算法有 RSA、ElGamal、ECC 等。 摘要和签名 举个栗子。李雷写了一张纸条，让同桌传给韩梅梅，纸条内容为 韩梅梅，我是李雷，我喜欢你。 对通信的双方， 要保证纸条在传递过程中未经改动（内容的完整性）。当内容被篡改时，接收方可以发现 接收方能确定纸条来自发送方，而不是他人冒充（授权和身份认证） 用更简单些的文字来描述整个过程，通信的双方都知道， 发送方认可消息的内容 接收方能确定消息来源 消息在整个通信过程中未经改动 为了实现上述需求，李雷需要 将纸条内容 哈希（Hash），得到 摘要 （Digest） 用自己的私钥 “加密” 摘要，得到 签名 （Signature） 让同桌传递纸条和签名 韩梅梅收到纸条和签名后， 用李雷的公钥，对签名 “解密”，得到摘要 [1] 将纸条内容哈希，得到摘要 [2] 比较摘要 [1] 和 摘要 [2] 的内容是否一致 如果内容相同，则说明纸条确实由李雷所写，且内容未经改动。这是因为， 李雷的私钥只有他自己拥有，用私钥（李雷的私钥）“加密” 的内容（签名）只有用对应的公钥（李雷的公钥）才能解开（身份认证） 哈希函数的特性保证，如果纸条内容在传递过程中改变，则得到的摘要 [2] 一定与摘要 [1] 不同（完整性） 总结 对于双钥系统，加密解密时， 公钥用于加密，私钥用于解密 身份认证时， 私钥用于签名，公钥用于验证 参考 在线计算工具 维基百科，散列函数 维基百科，SHA 家族 RSA 算法原理（一），阮一峰 RSA 算法原理（二），阮一峰 数字签名是什么？，阮一峰 密码学笔记，阮一峰 程序员之网络安全系列 [学习笔记] 哈希函数和 SHA256 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 加密算法 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么 "},"chapter-transaction/private-key.html":{"url":"chapter-transaction/private-key.html","title":"比特币私钥","keywords":"","body":"比特币私钥 私钥 比特币的私钥（k）是一个 随机数 ，可以是 $1$ 和 $(n - 1)$ 之间的任何数字，其中 $n$ 是常数 $1.158 \\times 10^{77}$，略小于 $2^{256}$。 生成一个私钥，本质上就是选择一个数。只要选取的方法不可预测或不可重复，它就是密码学安全的。 我们可以用不同的表示法，来表示同一个私钥。 格式 值 十六进制原始数据（Raw） f97c89aaacf0cd2e47ddbacc97dae1f88bec49106ac37716c451dcdd008a4b62 WIF 不压缩格式（WIF uncompressed） 5KiANv9EHEU4o9oLzZ6A7z4xJJ3uvfK2RLEubBtTz1fSwAbpJ2U WIF 压缩格式（WIF compressed） L5agPjZKceSTkhqZF2dmFptT5LFrbr6ZGPvP7u4A6dvhTrr71WZ9 WIF 是 Wallet Import Format 的缩写，有压缩和不压缩两种格式，都是 Raw 格式的私钥经过 Base58Check 编码之后的结果。 在比特币系统中，大多数需要向用户展示的数据都使用 Base58Check 编码。它可以压缩数据，提高可读性，避免歧义，并且包含错误校验，能有效防止数据在转录过程中产生错误。 Base58Check 编码 Base64 编码使用了 26 个小写字母、26 个大写字母、10 个数字以及 2 个符号（+ 和 /），用于在电子邮件这样的基于文本的媒介中传输二进制数据。 Base58 是 Base64 编码格式的子集，舍弃了一些容易错读和在特定字体中容易混淆的字符，不使用 Base64 中的 0（数字 0）、O（大写字母 o）、l（小写字母 L）、I（大写字母 i）以及 + 和 /，是比特币系统中使用的一种独特的编码方式。 Base58Check 在编码过程中加入了校验和，在最后使用 Base58，是一种 可逆编码 。对于要编码的数据 payload： 在 payload 前添加版本前缀 Version ，得到 S1 对 S1 做两次 SHA256 哈希运算得到 S2，取 S2 的前 4 字节作为校验和 Checksum 在 S1 后附上 Checksum，得到 S3 对 S3 做 Base58 编码，得到结果 对于不同类型的数据，在做 Base58Check 编码时会添加不同的版本前缀，以产生易于辨识的不同结果。 类型 版本前缀的值（十六进制） Base58Check 之后的前缀 P2PKH 地址 00 1 P2SH 地址 05 3 测试网络（testnet）地址 6F m 或 n WIF 格式的私钥 80 5，K 或 L 根据 BIP-38 标准 加密的私钥 0142 6P 根据 BIP-32 标准定义的 扩展公钥 0488B21E xpub WIF 为了方便用户导入私钥，定义了 WIF ，分为不压缩和压缩两种类型。 WIF 是 Base58Check 编码之后的结果，根据上面的表格，WIF 在编码时使用的版本前缀为 0x80。 对 Raw 格式的私钥 f97c89aaacf0cd2e47ddbacc97dae1f88bec49106ac37716c451dcdd008a4b62，计算其 WIF 不压缩 格式： // 私钥本身就是 payload f97c89aaacf0cd2e47ddbacc97dae1f88bec49106ac37716c451dcdd008a4b62 // 下面是 Base58Check 定义的过程 // 给 payload 添加版本前缀 0x80，得到 S1 80 f97c89aaacf0cd2e47ddbacc97dae1f88bec49106ac37716c451dcdd008a4b62 // 对 S1 做两次 SHA256，得到 S2 701ccdd192515bf36a241b9fca879d7915a458cfb36ebcf2c8db1d796dc63b4a // 取 S2 的前 4 字节，得到 Checksum 701ccdd1 // S3 = S1 + Checksum 80 f97c89aaacf0cd2e47ddbacc97dae1f88bec49106ac37716c451dcdd008a4b62 701ccdd1 // WIF_uncompressed = Base58 (S3)，结果以 5 开头 5KiANv9EHEU4o9oLzZ6A7z4xJJ3uvfK2RLEubBtTz1fSwAbpJ2U 稍加改变，在私钥后添加一个压缩标志位，计算结果就是 WIF 压缩 格式。 // 在私钥后添加 压缩标志后缀 0x01，得到 payload f97c89aaacf0cd2e47ddbacc97dae1f88bec49106ac37716c451dcdd008a4b62 01 // 下面是 Base58Check 定义的过程 // 给 payload 添加版本前缀 0x80，得到 S1 80 f97c89aaacf0cd2e47ddbacc97dae1f88bec49106ac37716c451dcdd008a4b62 01 // 对 S1 做两次 SHA256，得到 S2 14372b9cd0d344b679ac30ab70000c245c3c7888907449bccd0caf830a84c2ed // 取 S2 的前 4 字节，得到 Checksum 14372b9c // S3 = S1 + Checksum 80 f97c89aaacf0cd2e47ddbacc97dae1f88bec49106ac37716c451dcdd008a4b62 01 14372b9c // WIF_uncompressed = Base58 (S3)，结果以 K 或 L 开头 L5agPjZKceSTkhqZF2dmFptT5LFrbr6ZGPvP7u4A6dvhTrr71WZ9 WIF 压缩和不压缩两种格式都使用同样的版本前缀，唯一的区别就是，是否在私钥后添加压缩标志后缀。 你可以使用下面这些工具，体验转换的过程。 不压缩 WIF 与 Raw 格式私钥的转换工具 十六进制 Hash 工具 十六进制 Base58 编码工具 椭圆曲线密码学（ECC，Elliptic Curve Cryptography） 要理解比特币公钥的计算细节，需要先了解一些 ECC 的背景知识。 ECC 是一种 非对称加密算法，基于椭圆曲线上的离散对数数学问题。 $y^2 = x^3 - x + 1$ 定义了一条椭圆曲线，函数图像如下。 比特币使用的椭圆曲线，为 $$y^2 = x^3 + 7 \\pmod p$$ 这条椭圆曲线由 Secp256k1 标准定义，其中 mod 是取模运算（取余数），$1 = 5 \\pmod 2$ p 是定值 $2^{256} - 2^{32} - 2^9 - 2^8 - 2^7 - 2^6 - 2^4 - 1$，这是一个非常大的素数 因为方程两端取模运算的存在，所以这条曲线的函数图像并不是连续的，而是二维空间上一系列散开的点。 如果 $p = 17$，它的函数图像如下。 你可以把 Secp256k1 的函数图像，想象成一个 极大的网格上一系列更为复杂的散点 。 椭圆曲线上的两点 p1 和 p2，定义 $p = p1 + p2$ 为椭圆曲线上 点的加法运算 。 过点 p1 和 p2 做直线与椭圆曲线相交点 q 以 X 轴对称翻转点 q，得到点 p 如果 p1 和 p2 为同一个点，则过 p1 和 p2 的连线，变成了过该点的椭圆曲线的切线。使用 这个工具，可以有更多可视化的直观体验。 乘法的定义可以从加法扩展，其中 k 为整数。 $$k \\times p = \\underbrace{p + p + ... + p}_{k}$$ 下图展示了从椭圆曲线上的点 G，计算 2G、4G、8G 的操作。 注意，为了有直观的理解，图片中的椭圆曲线都是连续的。比特币使用的 Secp256k1 曲线，其图像并不连续，但它们的数学原理是相同的。* 公钥 比特币的公钥（K），是 Secp256k1 定义的椭圆曲线上的一个点 。 $$K = k \\times G$$ 其中，k 为私钥（一个整数），G 为椭圆曲线上的一个固定点，这个点由 Secp256k1 标准定义，它的坐标（十六进制表示）为 G.x = 79BE667E F9DCBBAC 55A06295 CE870B07 029BFCDB 2DCE28D9 59F2815B 16F81798 G.y = 483ADA77 26A3C465 5DA4FBFC 0E1108A8 FD17B448 A6855419 9C47D08F FB10D4B8 比特币的私钥（k）和公钥（K）之间的关系是固定的，数学原理保证 计算过程单向不可逆，能轻而易举的从私钥计算出其对应的公钥，反过来则无法实现 。 刚才的例子中，私钥 f97c89aaacf0cd2e47ddbacc97dae1f88bec49106ac37716c451dcdd008a4b62，其对应的公钥为 x = e46dcd7991e5a4bd642739249b0158312e1aee56a60fd1bf622172ffe65bd789 y = 97693d32c540ac253de7a3dc73f7e4ba7b38d2dc1ecc8e07920b496fb107d6b2 公钥也有两种表示法，压缩格式和不压缩格式。 在公钥坐标前添加前缀 0x04，可以直接得到不压缩格式的公钥。 04 e46dcd7991e5a4bd642739249b0158312e1aee56a60fd1bf622172ffe65bd789 97693d32c540ac253de7a3dc73f7e4ba7b38d2dc1ecc8e07920b496fb107d6b2 为了表示不压缩格式的公钥，需要 65 字节，1 字节前缀，32 字节 X 坐标，32 字节 Y 坐标。 根据 Secp256k1 曲线的特点，如果知道公钥 X 坐标的值和 Y 坐标的奇偶，就可以直接推算出其 Y 坐标的值。定义压缩格式的公钥： 如果 Y 坐标的值为偶数，在 X 坐标前添加前缀 0x02 如果 Y 坐标的值为奇数，在 X 坐标前添加前缀 0x03 ![](https://raw.githubusercontent.com/bitcoinbook/bitcoinbook/develop/images/mbc2_0407.png) 得到压缩格式的公钥为 02 e46dcd7991e5a4bd642739249b0158312e1aee56a60fd1bf622172ffe65bd789 为了表示压缩格式的公钥，需要 33 字节，1 字节前缀，32 字节 X 坐标。 你可以参考下面的代码，自己试一试。 package main import ( \"encoding/hex\" \"fmt\" \"github.com/decred/dcrd/dcrec/secp256k1\" ) func main() { privateKeyBytes, _ := hex.DecodeString(\"f97c89aaacf0cd2e47ddbacc97dae1f88bec49106ac37716c451dcdd008a4b62\") _, publicKey := secp256k1.PrivKeyFromBytes(privateKeyBytes) fmt.Println(\"pk.x = \" + hex.EncodeToString(publicKey.X.Bytes())) fmt.Println(\"pk.y = \" + hex.EncodeToString(publicKey.Y.Bytes())) fmt.Println(\"uncompressed public key = \" + hex.EncodeToString(publicKey.SerializeUncompressed())) fmt.Println(\"compressed public key = \" + hex.EncodeToString(publicKey.SerializeCompressed())) } // 输出 // pk.x = e46dcd7991e5a4bd642739249b0158312e1aee56a60fd1bf622172ffe65bd789 // pk.y = 97693d32c540ac253de7a3dc73f7e4ba7b38d2dc1ecc8e07920b496fb107d6b2 // uncompressed public key = 04e46dcd7991e5a4bd642739249b0158312e1aee56a60fd1bf622172ffe65bd78997693d32c540ac253de7a3dc73f7e4ba7b38d2dc1ecc8e07920b496fb107d6b2 // compressed public key = 02e46dcd7991e5a4bd642739249b0158312e1aee56a60fd1bf622172ffe65bd789 总结 比特币的私钥，本质是一个数 选取私钥的过程如果不可预测或不可重复（是随机的），则私钥是密码学安全的 私钥可以用 WIF 压缩或 WIF 不压缩格式表示，WIF 压缩格式的私钥前缀是 K 或 L，WIF 不压缩格式的私钥前缀是 5 WIF 格式使用了 Base58Check 编码，这是一个 可逆编码 ，它包含版本前缀、数据块和校验和三部分，容易识别，方便转录 ECC 是一种基于椭圆曲线数学问题的非对称加密算法，比特币使用 Secp256k1 标准定义的一条特殊的椭圆曲线，它的函数图像是一堆复杂的散点 比特币的公钥，本质是 Secp256k1 曲线上的一个点，由其对应的私钥计算得出 椭圆曲线的数学特性保证，从比特币私钥计算其对应公钥是一个单向运算，无法通过公钥计算出其对应的私钥 公钥可以用压缩和不压缩两种格式表示，压缩格式的公钥前缀是 0x02 或 0x03，不压缩格式的公钥前缀是 0x04 没有 “压缩的私钥” 和 “压缩的公钥”，“压缩” 只是针对其表示方法，而不是针对私钥和公钥本身 你可能注意到，公钥用压缩格式表示时，有效降低了存储空间，但 WIF 压缩和不压缩格式，其结果从长度上看并没有明显的区别。 为什么要这么做？接下来的文章中说。 参考 椭圆曲线密码学 椭圆曲线加密算法 ECC 椭圆曲线加密算法：介绍 SEC 2: Recommended Elliptic Curve Domain Parameters How to convert Private Key WIF Compressed start with a 'L' to Private Key WIF starts with a '5' package secp256k1 精通比特币（第二版）译文 原文 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币私钥 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么 "},"chapter-transaction/public-key.html":{"url":"chapter-transaction/public-key.html","title":"比特币公钥","keywords":"","body":"比特币公钥 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币公钥 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-transaction/address.html":{"url":"chapter-transaction/address.html","title":"比特币地址","keywords":"","body":"比特币地址 在接收比特币时，通常会使用一串跟银行卡号类似的 “神奇代码”，作为收款 “地址”，形如 1BJhat1AMGYbT9HYJxVekoCaPaqB9ZyTyF。例如，当 Alice 向 Bob 支付比特币的时候，如果她： 使用 P2PK 交易，需要知道 Bob 的公钥 ，锁定脚本为 [Bob 的公钥] OP_CHECKSIG 使用 P2PKH 交易，需要知道 Bob 的公钥 或 Bob 的公钥哈希 ，锁定脚本为 OP_DUP OP_HASH160 [Bob 的公钥哈希] OP_EQUALVERIFY OP_CHECKSIG 使用 P2SH 交易，需要知道 Bob 的脚本哈希 ，锁定脚本为 OP_HASH160 [Bob 的脚本哈希] OP_EQUAL 本节将介绍地址是怎么计算的。 P2PKH(Pay-to-Pubkey-Hash) 一句话解释，P2PKH 地址是 Base58Check 编码的公钥哈希。 我们用 App 支付比特币到某个地址，App 会先将地址反解成公钥哈希，然后构造一笔 P2PKH 交易，完成支付。 因为 Base58Check 编码是 可逆 的，所以可以这么做。 用 https://www.bitaddress.org/ 生成一对私钥和地址，整体演算一遍。 私钥 L2M6qFzrdDEv7eRT7p94Zf4QShLdWjicFpkiCro12CrRbCDb8ke3 以 L 开头，这是 WIF 压缩格式的私钥。 用这个 工具，Base58Check 反解之后为（我加了空格） 80 98fd2a819a382f8e142e38242f6caf2a2f6f58e7fe6ca5f23c5b0818b15b4ba6 01 236803e8 私钥为 98fd2a819a382f8e142e38242f6caf2a2f6f58e7fe6ca5f23c5b0818b15b4ba6。 计算出对应的公钥点为 x = da52d817a5ae3555f36a94528322eb47016f1334b798f5b4fa614a892dabb3ea y = f314bf38816673c55c1708cf1e36b55c936db97618d6460c4d223be83bec7788 公钥为 02da52d817a5ae3555f36a94528322eb47016f1334b798f5b4fa614a892dabb3ea（P2PK 交易需要这个值）。 用这个 工具，计算公钥 HASH160 后的 结果，得到公钥哈希（P2PKH 交易需要这个值）为 710a35053db4296dc5f3476d10ae93924bc55c9a 对 公钥哈希 做 Base58Check 编码，按规定添加 0x00 版本前缀。 类型 版本前缀的值（十六进制） Base58Check 之后的前缀 P2PKH 地址 00 1 P2SH 地址 05 3 得到地址 1BJhat1AMGYbT9HYJxVekoCaPaqB9ZyTyF 编码过程如下。 # payload 710a35053db4296dc5f3476d10ae93924bc55c9a # S1 = version + payload 00 710a35053db4296dc5f3476d10ae93924bc55c9a # S2 = SHA256(SHA256(S1)) 5f91f9a69fc02d537c93e41b127b2f5081fd25f82683c1eebe3c54aae1f83130 # S2 的前 4 字节是 Checksum 5f91f9a6 # S3 = S1 + Checksum 00 710a35053db4296dc5f3476d10ae93924bc55c9a 5f91f9a6 # 地址 = Base58 (S3) 1BJhat1AMGYbT9HYJxVekoCaPaqB9ZyTyF 需要注意的是，从 P2PKH 地址只能反解出公钥哈希的值，而无法知道公钥本身，因为 哈希是不可逆 的，无法从公钥哈希计算公钥。 由于在 Base58Check 编码时加入了特定前缀 0x00，所以这类地址都以 1 开头，方便识别。 地址中包含了校验和，能有效防止转录过程中的错误，这也是为什么不直接使用公钥哈希的原因。 当你在 App 里发送比特币到某个 1 开头的地址时，App 知道这是一个 P2PKH 地址，先校验地址是不是合法，再反解出编码前的公钥哈希，创建 P2PKH 交易，完成支付。 普通用户可以直接使用地址来收发比特币，而不用了解幕后细节，因为它们被地址隐藏了。 P2PK(Pay-to-Public-Key) P2PK 锁定版脚本形式如下： OP_CHECKSIG 用于解锁的脚本是一个简单签名： 经由交易验证软件确认的组合脚本为： OP_CHECKSIG 根据上方的规则去运行就可以发现，此规则比 P2PKH 要简单的多，只有一步验证，少了上方的地址验证。其实，P2PKH 被创建主要目的一方面为使比特币地址更简短，使之更方便使用，核心内容还是 P2PK 的。 P2SH(Pay-to-Script-Hash) 同样的，对于 P2SH 交易中用到的脚本哈希，也可以这么干。 但编码时，会使用 0x05 的版本前缀，所以 P2SH 地址都以 3 开头，形如 347N1Thc213QqfYCz3PZkjoJpNv5b14kBd。 交易 40eee3ae1760e3a8532263678cdf64569e6ad06abc133af64f735e52562bccc8， { \"txid\":\"40eee3ae1760e3a8532263678cdf64569e6ad06abc133af64f735e52562bccc8\", \"hash\":\"40eee3ae1760e3a8532263678cdf64569e6ad06abc133af64f735e52562bccc8\", \"version\":1, \"size\":189, \"vsize\":189, \"weight\":756, \"locktime\":0, \"vin\":[ { \"txid\":\"42a3fdd7d7baea12221f259f38549930b47cec288b55e4a8facc3c899f4775da\", \"vout\":0, \"scriptSig\":{ \"asm\":\"3044022048d1468895910edafe53d4ec4209192cc3a8f0f21e7b9811f83b5e419bfb57e002203fef249b56682dbbb1528d4338969abb14583858488a3a766f609185efe68bca[ALL] 031a455dab5e1f614e574a2f4f12f22990717e93899695fb0d81e4ac2dcfd25d00\", \"hex\":\"473044022048d1468895910edafe53d4ec4209192cc3a8f0f21e7b9811f83b5e419bfb57e002203fef249b56682dbbb1528d4338969abb14583858488a3a766f609185efe68bca0121031a455dab5e1f614e574a2f4f12f22990717e93899695fb0d81e4ac2dcfd25d00\" }, \"sequence\":4294967295 } ], \"vout\":[ { \"value\":0.0099, \"n\":0, \"scriptPubKey\":{ \"asm\":\"OP_HASH160 e9c3dd0c07aac76179ebc76a6c78d4d67c6c160a OP_EQUAL\", \"hex\":\"a914e9c3dd0c07aac76179ebc76a6c78d4d67c6c160a87\", \"reqSigs\":1, \"type\":\"scripthash\", \"addresses\":[ \"3P14159f73E4gFr7JterCCQh9QjiTjiZrG\" ] } } ] } 输出支付到了脚本哈希 e9c3dd0c07aac76179ebc76a6c78d4d67c6c160a，让我们计算一下对应的地址。 # payload e9c3dd0c07aac76179ebc76a6c78d4d67c6c160a # S1 = version + payload 05 e9c3dd0c07aac76179ebc76a6c78d4d67c6c160a # S2 = SHA256(SHA256(S1)) # https://bit.ly/2RoiDBu 7f297f3156a14d114af23b33c339817a1241afcb52a154d19683c67c538b7278 # S2 的前 4 字节是 Checksum 7f297f31 # S3 = S1 + Checksum 05 e9c3dd0c07aac76179ebc76a6c78d4d67c6c160a 7f297f31 # 地址 = Base58 (S3) # https://incoherency.co.uk/base58/ 3P14159f73E4gFr7JterCCQh9QjiTjiZrG 同样的，从 P2SH 地址只能反解出脚本哈希的值，而无法知道赎回脚本的具体内容。 当你在 App 里发送比特币到某个 3 开头的地址时，App 知道这是一个 P2SH 地址，先校验地址是不是合法，再反解出编码前的脚本哈希，创建 P2SH 交易，完成支付。 总结 地址是公钥哈希或脚本哈希的 Base58Check 编码，这个编码是可逆的。 P2PKH 地址都以 1 开头，P2SH 地址都以 3 开头。 结合之前的文章，你知道： 在比特币系统里其实没有 “地址” 的概念，交易输出会被锁定脚本锁定，与公钥哈希或脚本哈希关联 地址是公钥哈希或脚本哈希的可逆编码，定义 “地址” 是为了方便用户使用，封装幕后细节，简化操作 从私钥可以计算公钥，从公钥可以计算地址，但反过来都不成立 私钥十分重要，拥有私钥就拥有了其对应公钥上锁定的比特币 参考 精通比特币（第二版）译文 原文 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币地址 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么 "},"chapter-transaction/utxo.html":{"url":"chapter-transaction/utxo.html","title":"未花费交易输出","keywords":"","body":"未花费交易输出 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 未花费交易输出 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-transaction/signature.html":{"url":"chapter-transaction/signature.html","title":"比特币签名","keywords":"","body":"比特币签名 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币签名 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-transaction/p2pkh.html":{"url":"chapter-transaction/p2pkh.html","title":"P2PKH","keywords":"","body":"P2PK 和 P2PKH 付款到公钥 构造交易时，如果 锁定脚本中关联的是收款人的公钥 ，我们称这笔交易，是一笔 付款到公钥 （P2PK，Pay to Public Key）的交易。 对交易 6880c2ae2f417bf6451029b716959ed255f127eeba3d7b40cf0ff3c44c5980c2， 01000000 01 输出上的锁定脚本为 21030e7061b9fb18571cf2441b2a7ee2419933ddaa423bc178672cd11e87911616d1ac 根据 操作码说明书，翻译一下， 21 得到锁定脚本的内容为 030e7061b9fb18571cf2441b2a7ee2419933ddaa423bc178672cd11e87911616d1 OP_CHECKSIG 是不是有点眼熟？脚本第一项以 0x03 开头的 33 字节的数据，正是用压缩格式表示的公钥。 看 这篇文章 了解 OP_CHECKSIG 操作码的工作方式。 这个 UTXO 在交易 aa2cb91301d684c443f81db2a623baed5ea657ea33c5fc4d8f995033292ebbd6 中被消费，下面是这笔交易的数据。 01000000 01 c280594cc4f30fcf407b3dbaee27f155d29e9516b7291045f67b412faec28068 00000000 49 48304502210096bf18f3fce1f3ac800f98c12e655240cbdb7127e046a3c1bd72e16d3e16c3fd022030e897e2eea143eca4e87b28ba104625eb316f1a487a72c5aecc93b824c8c74f01 ffffffff 01 7b24020000000000 19 76a9143b08b0003ef9b4f37f8d18a54f9db8ec67f8cbf088ac00000000 用同样的方法，找到这个 UTXO 的解锁脚本，也就是对应私钥的数字签名为 304502210096bf18f3fce1f3ac800f98c12e655240cbdb7127e046a3c1bd72e16d3e16c3fd022030e897e2eea143eca4e87b28ba104625eb316f1a487a72c5aecc93b824c8c74f01 验证交易时，只需将解锁脚本和锁定脚本连起来，执行即可。 [签名] [公钥] OP_CHECKSIG 为了说清楚交易的内幕细节，我们一直都在手工解码交易的原始数据，虽然有些麻烦，但这能帮助我们更好的理解比特币协议的工作方式。 可以直接使用区块链浏览器，来查询任意一笔交易的内容，解码原始交易数据，关联交易链条。 注意，在各种应用程序中看到的很多信息字段，实际上并不存在于比特币系统中 *。 用 Blockchair 查询刚才的交易 6880c2ae2f417bf6451029b716959ed255f127eeba3d7b40cf0ff3c44c5980c2，能看到交易的详细信息。 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/CpmDms2.png) 交易的原始数据（Raw transaction）为 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/eHjnpVd.png) 解码后的交易（Decoded transaction）为 { \"txid\":\"6880c2ae2f417bf6451029b716959ed255f127eeba3d7b40cf0ff3c44c5980c2\", \"hash\":\"6880c2ae2f417bf6451029b716959ed255f127eeba3d7b40cf0ff3c44c5980c2\", \"version\":1, \"size\":202, \"vsize\":202, \"weight\":808, \"locktime\":0, \"vin\":[ { \"txid\":\"a491517c28d7eee4e175f47d3235b105576d35e7117642a997cd51c2526cb00c\", \"vout\":6, \"scriptSig\":{ \"asm\":\"3045022100d2fb1e6e099f3572ed7f89659e2366f9b5fcb44552bd83e31b2ebb95c4f4a50f022034904e5cea8affb2cc886d480a9a0dbed9dd42ead138f8cbb7a2c5fc82ce1cb0[ALL] 0335b7e991f239f9097d9f7e5b0d115b6a4983d4d38066016a12b65c5cf8b33eba\", \"hex\":\"483045022100d2fb1e6e099f3572ed7f89659e2366f9b5fcb44552bd83e31b2ebb95c4f4a50f022034904e5cea8affb2cc886d480a9a0dbed9dd42ead138f8cbb7a2c5fc82ce1cb001210335b7e991f239f9097d9f7e5b0d115b6a4983d4d38066016a12b65c5cf8b33eba\" }, \"sequence\":1 } ], \"vout\":[ { \"value\":0.00179716, \"n\":0, \"scriptPubKey\":{ \"asm\":\"030e7061b9fb18571cf2441b2a7ee2419933ddaa423bc178672cd11e87911616d1 OP_CHECKSIG\", \"hex\":\"21030e7061b9fb18571cf2441b2a7ee2419933ddaa423bc178672cd11e87911616d1ac\", \"reqSigs\":1, \"type\":\"pubkey\", \"addresses\":[ \"1CjRf1RMrTwyGoBHDbqzXERhVFkPyowt8i\" ] } } ] } 付款到公钥哈希 构造交易时，如果 锁定脚本中关联的是收款人公钥的哈希 ，我们称这笔交易，是一笔 付款到公钥哈希 （P2PKH，Pay to Public Key Hash）的交易。 哈希运算是单向运算，隐藏原来的数据，得到其 数据指纹 。 公钥可以被当成身份标识，所以公钥的哈希，也可以作为一种身份标识。 比特币在计算公钥的哈希时，使用 HASH160 方法。 先对公钥做 SHA256 运算，得到 S1 再对 S1 做 RIPEMD160 运算，得到结果 Alice 从 Joe 那里，用现金换取了一些比特币，交易是 7957a35fe64f80d234d76d83a2a8f1a0d8149a41d81de548f0a65a8a999f6f18。 { \"txid\":\"7957a35fe64f80d234d76d83a2a8f1a0d8149a41d81de548f0a65a8a999f6f18\", \"hash\":\"7957a35fe64f80d234d76d83a2a8f1a0d8149a41d81de548f0a65a8a999f6f18\", \"version\":1, \"size\":225, \"vsize\":225, \"weight\":900, \"locktime\":0, \"vin\":[ { \"txid\":\"713eef22615ffb7c2f8f813e79a0d1e170d05a99218e291c33daca258f284d52\", \"vout\":0, \"scriptSig\":{ \"asm\":\"3046022100a59e516883459706ac2e6ed6a97ef9788942d3c96a0108f2699fa48d9a5725d1022100f9bb4434943e87901c0c96b5f3af4e7ba7b83e12c69b1edbfe6965f933fcd17d[ALL] 04e5a0b4de6c09bd9d3f730ce56ff42657da3a7ec4798c0ace2459fb007236bc3249f70170509ed663da0300023a5de700998bfec49d4da4c66288a58374626c8d\", \"hex\":\"493046022100a59e516883459706ac2e6ed6a97ef9788942d3c96a0108f2699fa48d9a5725d1022100f9bb4434943e87901c0c96b5f3af4e7ba7b83e12c69b1edbfe6965f933fcd17d014104e5a0b4de6c09bd9d3f730ce56ff42657da3a7ec4798c0ace2459fb007236bc3249f70170509ed663da0300023a5de700998bfec49d4da4c66288a58374626c8d\" }, \"sequence\":4294967295 } ], \"vout\":[ { \"value\":0.1, \"n\":0, \"scriptPubKey\":{ \"asm\":\"OP_DUP OP_HASH160 7f9b1a7fb68d60c536c2fd8aeaa53a8f3cc025a8 OP_EQUALVERIFY OP_CHECKSIG\", \"hex\":\"76a9147f9b1a7fb68d60c536c2fd8aeaa53a8f3cc025a888ac\", \"reqSigs\":1, \"type\":\"pubkeyhash\", \"addresses\":[ \"1Cdid9KFAaatwczBwBttQcwXYCpvK8h7FK\" ] } } ] } 这笔交易创建的 UTXO 上的锁定脚本为 OP_DUP OP_HASH160 7f9b1a7fb68d60c536c2fd8aeaa53a8f3cc025a8 OP_EQUALVERIFY OP_CHECKSIG 之后，Alice 去 Bob 的咖啡店购买咖啡，交易是 0627052b6f28912f2703066a912ea577f2ce4da4caa5a5fbd8a57286c345c2f2。 { \"txid\":\"0627052b6f28912f2703066a912ea577f2ce4da4caa5a5fbd8a57286c345c2f2\", \"hash\":\"0627052b6f28912f2703066a912ea577f2ce4da4caa5a5fbd8a57286c345c2f2\", \"version\":1, \"size\":258, \"vsize\":258, \"weight\":1032, \"locktime\":0, \"vin\":[ { \"txid\":\"7957a35fe64f80d234d76d83a2a8f1a0d8149a41d81de548f0a65a8a999f6f18\", \"vout\":0, \"scriptSig\":{ \"asm\":\"3045022100884d142d86652a3f47ba4746ec719bbfbd040a570b1deccbb6498c75c4ae24cb02204b9f039ff08df09cbe9f6addac960298cad530a863ea8f53982c09db8f6e3813[ALL] 0484ecc0d46f1918b30928fa0e4ed99f16a0fb4fde0735e7ade8416ab9fe423cc5412336376789d172787ec3457eee41c04f4938de5cc17b4a10fa336a8d752adf\", \"hex\":\"483045022100884d142d86652a3f47ba4746ec719bbfbd040a570b1deccbb6498c75c4ae24cb02204b9f039ff08df09cbe9f6addac960298cad530a863ea8f53982c09db8f6e381301410484ecc0d46f1918b30928fa0e4ed99f16a0fb4fde0735e7ade8416ab9fe423cc5412336376789d172787ec3457eee41c04f4938de5cc17b4a10fa336a8d752adf\" }, \"sequence\":4294967295 } ], \"vout\":[ { \"value\":0.015, \"n\":0, \"scriptPubKey\":{ \"asm\":\"OP_DUP OP_HASH160 ab68025513c3dbd2f7b92a94e0581f5d50f654e7 OP_EQUALVERIFY OP_CHECKSIG\", \"hex\":\"76a914ab68025513c3dbd2f7b92a94e0581f5d50f654e788ac\", \"reqSigs\":1, \"type\":\"pubkeyhash\", \"addresses\":[ \"1GdK9UzpHBzqzX2A9JFP3Di4weBwqgmoQA\" ] } }, { \"value\":0.0845, \"n\":1, \"scriptPubKey\":{ \"asm\":\"OP_DUP OP_HASH160 7f9b1a7fb68d60c536c2fd8aeaa53a8f3cc025a8 OP_EQUALVERIFY OP_CHECKSIG\", \"hex\":\"76a9147f9b1a7fb68d60c536c2fd8aeaa53a8f3cc025a888ac\", \"reqSigs\":1, \"type\":\"pubkeyhash\", \"addresses\":[ \"1Cdid9KFAaatwczBwBttQcwXYCpvK8h7FK\" ] } } ] } 消费这个 UTXO 的解锁脚本为 3045022100884d142d86652a3f47ba4746ec719bbfbd040a570b1deccbb6498c75c4ae24cb02204b9f039ff08df09cbe9f6addac960298cad530a863ea8f53982c09db8f6e3813[ALL] 0484ecc0d46f1918b30928fa0e4ed99f16a0fb4fde0735e7ade8416ab9fe423cc5412336376789d172787ec3457eee41c04f4938de5cc17b4a10fa336a8d752adf 是不是有点眼熟？解锁脚本第二项以 0x04 开头的 65 字节的数据，正是用不压缩格式表示的公钥。 P2PKH 的解锁脚本中除了包含数字签名，还包含公钥。 验证交易的脚本为 [签名] [公钥] OP_DUP OP_HASH160 [公钥的哈希] OP_EQUALVERIFY OP_CHECKSIG 下图模拟了这类脚本的执行过程，不再赘述，操作码的定义请自行查阅 说明书。 ![](https://raw.githubusercontent.com/bitcoinbook/bitcoinbook/develop/images/mbc2_0605.png) ![](https://raw.githubusercontent.com/bitcoinbook/bitcoinbook/develop/images/mbc2_0606.png) 注意到，签名的最后一个字节 0x01，被解码成了标记 [ALL]，它标识了签名的具体类型（SIGHASH，Signature Hash Types）。 你发现没有，P2PKH 跟 P2PK，没有本质区别。 验证一个数字签名是否有效，需要三个参数： 消息 公钥 数字签名 交易中签名的消息，是交易本身，更准确的说，是交易中特定数据子集的哈希（通过 SIGHASH 标记区分）。 P2PK 将公钥放在锁定脚本中，所以解锁脚本只需要提供数字签名。 P2PKH 交易的锁定脚本中，用公钥的哈希隐藏了公钥本身，所以在解锁脚本中，除了要提供数字签名，还要提供公钥。验证时，除了要验证数字签名，还要验证 解锁脚本中的公钥 是不是跟 锁定脚本中的公钥哈希 相匹配。 你可以用这个 工具，计算公钥 0484ecc0d46f1918b30928fa0e4ed99f16a0fb4fde0735e7ade8416ab9fe423cc5412336376789d172787ec3457eee41c04f4938de5cc17b4a10fa336a8d752adf HASH160 的 结果，看看是不是 7f9b1a7fb68d60c536c2fd8aeaa53a8f3cc025a8 One more thing 网络中的绝大多数交易，都是 P2PKH。 P2PK 也是合法的交易类型，比 P2PKH 更简单，但出于安全方面的考虑，已不再被推荐使用。 Pay to public key scripts are a simplified form of the p2pkh but aren't commonly used in new transactions anymore because p2pkh scripts are more secure (the public key is not revealed until the output is spent). 下面是关于 P2PK 和 P2PKH 的更多资料。 IP-to-IP payments [pull] Remove send to IP address and IP transactions support Why does the default miner implementation use pay-to-pubkey? Why does some coinbase scripts not check public key hash? Does P2PKH substitute P2PK in any circumstances? Why? Why is P2PKH used instead of the simpler P2PK? 参考 精通比特币（第二版）译文 原文 learn me a bitcoin, P2PK Bitcoin P2PKH Transaction Breakdown bitcore library API #Script new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 P2PKH |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么 "},"chapter-transaction/p2sh.html":{"url":"chapter-transaction/p2sh.html","title":"P2SH","keywords":"","body":"P2SH 了解复杂的交易类型，能帮助你更好的理解，什么是 “可编程加密货币”。 付款到多重签名 如果你看过 OP_CHECKMULTISIG 操作码的说明，你会发现：交易允许我们将 UTXO 锁定到 $N$ 个公钥上，并设置花费条件，需要至少提供 $M$ 个签名，才能解锁资金。 这种方案，称为 M-N 多重签名 ，其中 $N$ 是密钥的总数，$M$ 是验证所需的最少签名数。 M [公钥 1] [公钥 2] ... [公钥 N] N OP_CHECKMULTISIG 如果锁定脚本是这样的形式，我们称这是一笔 付款到多重签名 （P2MS，Pay to Multi Signature）的交易，也常用 multisig 表示。 解锁 UTXO 时，需要提供的解锁脚本，形如 [签名 1] [签名 2] ... [签名 M] 这个新特性由 BIP-11 提案引入。 BIP 是 比特币改进建议 （Bitcoin Improvement Proposal）的缩写。 BIP 是什么，跟比特币是什么关系？ 比特币的神奇仪式：比特币改进协议（BIP）是如何产生的？ 一个 BIP 提案有九种状态。 Proposed（提出） Draft（草案） Active（激活） Final（落地） Replaced（被替代） Withdrawn（撤回） Deferred（推迟） BIP number allocated（BIP 编号被分配） Rejected（拒绝） 正常的，操作码 OP_CHECKMULTISIG 在执行时，应该 先弹出一个数，为 $N$，知道有多少公钥 接着弹出 $N$ 个公钥的值 再弹出一个数，为 $M$，知道有多少签名 接着弹出 $M$ 个签名的值 得到了所有的 $(N + M + 2)$ 个数据，计算脚本是否有效 但 OP_CHECKMULTISIG 执行时有个 bug，在弹出 $M$ 个签名之后（这时栈已经空了），会再做一次出栈操作。这将导致栈错误，脚本执行失败，交易被标记为无效。 为了避免这种情况，默认会在解锁脚本的开头加一个额外的项，可以是任何值，通常是 0x00。 这个额外的值，在 OP_CHECKMULTISIG 执行过程中并没有被使用，所以它不影响整体逻辑的正确性，它的存在只是为了避免栈错误。 所以正确的解锁脚本为 0 [签名 1] [签名 2] ... [签名 M] 这个小彩蛋，被永久的留在了系统中。 交易 6107e9397f6f3bc881e542923fed370f8d623daa3858078827c97fa26449a127 是一笔 multisig，有 3 个输出。 第二个输出，被锁定成 1-1 多签，在交易 9395df4d739596ae9871b2d2a6017beb0982c4c79e634d5752976e10f4b63847 中消费，是这笔交易的倒数第五个输入，提供的解锁脚本为 解码一下。 0 容易想到 multisig 的使用场景，常见的， 1-N 多签，用于多人共享资金，组内的任何人都可以直接支付 N-N 多签，用于多人的共同存款，必须所有人同意才可以支付 2-3 多签，用于公司财务，必须超半数以上的人同意才可以支付 一般的，把由 BIP-11 定义的多重签名方案，称为 old-style multisig。 这种多签方案非常直观，容易理解，但不方便使用。 对于 P2PKH，只需要知道收款人的公钥哈希，或 “公钥哈希的某种可逆编码”，利用 “钱包” 软件就可以直接生成交易，因为锁定脚本的形式是确定的。 OP_DUP OP_HASH160 [公钥的哈希] OP_EQUALVERIFY OP_CHECKSIG 对于 old-style multisig，必须要知道收款人多签的全部细节，才能确定锁定脚本。 $M$，至少需要几个签名解锁，1 字节 $N$，一共有多少公钥，1 字节 每个公钥的具体内容，至少 $33N$ 字节 如果一个公司使用多签收款，他必须提前把脚本内容发送给所有客户。同时还要求他的客户，能使用特制的 “钱包” 软件，生成包含复杂脚本的交易，完成支付。并且，这个锁定脚本的内容非常长。 大多数比特币交易都包含交易费，这是对 “维护比特币网络安全的人” 的一种激励和补偿。 你现在需要知道， 应付交易费的多少，只与交易数据序列化后的大小有关，而与这笔交易转移价值的多少无关 。 所以 old-style multisig 还需要交易付款方，支付更多的交易费。 付款到脚本哈希 复杂的支付脚本功能强大，但在使用时有诸多不便，因为付款方需要了解锁定脚本（由收款方定义）的全部细节。 为了避免这种问题，BIP-16 提案引入了全新的交易类型，允许我们将 UTXO 锁定到一个脚本的哈希（数据指纹）上。 如果 锁定脚本中关联的是某个脚本的哈希 ， OP_HASH160 [脚本的哈希] OP_EQUAL 我们称这笔交易，是一笔 付款到脚本哈希 （P2SH，Pay to Script Hash）的交易。 P2SH 的含义是，向 与该哈希匹配的脚本 支付，这个脚本被称为 赎回脚本 （Redeem Script），其内容将在之后，在消费这个 UTXO 时呈现。 When a transaction attempting to spend the UTXO is presented later, it must contain the script that matches the hash, in addition to the unlocking script. In simple terms, P2SH means \"pay to a script matching this hash, a script that will be presented later when this output is spent.\" 支付时需要提供的解锁脚本，形如 [参数 1] [参数 2] ... [参数 X] [赎回脚本的内容] 验证分两部分，先计算赎回脚本的哈希，看它是否跟锁定脚本中的脚本哈希一致。 [赎回脚本的内容] OP_HASH160 [脚本的哈希] OP_EQUAL 如果一致，再执行解锁脚本。 [参数 1] [参数 2] ... [参数 X] [赎回脚本的内容] 有点不太好理解。 交易 d957651a876addc3a4e836c0f55d3e288230c9622f7062a9c1d963480768726e 是一笔 P2SH，有 2 个输出。 第一个输出，被锁定到一个脚本哈希上，值为 8bd55244e4f86fb631e908f8cd9d9084e6744ad1。 这个 UTXO 在交易 536749e6a0cb146287ec1ceffe50a65c3760d794aacb40367239cb3f332c6ba5 中消费，是这笔交易的第一个输入，提供的解锁脚本为 解码一下。 0 3045022100cd2eff6b93874c822c5496a2fd660f3f0a09e8dc40e504b14a5fbd38bcfff4db02205df3ad1e6a28e762b471012ee0b1e067cb39bbe4a3494c1144b157ccef25bc71[ALL] 3045022100ea4631ed3e9ae30f4faaa17b396398b30959bd119558349e4aa40ecb75856c0e0220684be10d059339533d225cd21e75079dc771e10ebe8f0358db3ec18763e34f22[ALL] 522102429adbb84a4a0f14b31c14f4927418207bcef7f70eb97b1caed49160733bff6921026ce3c7280d473b7a9eab8fe76219687deb646c1619ad18902d19dc3148e7f8ae2103e051dd3573daa05964487c93fe5a5b37b76fe94729c8c2b372845f5d85e0722c53ae 是如下的形式。 0 [签名 1] [签名 2] [赎回脚本的内容] 赎回脚本为 522102429adbb84a4a0f14b31c14f4927418207bcef7f70eb97b1caed49160733bff6921026ce3c7280d473b7a9eab8fe76219687deb646c1619ad18902d19dc3148e7f8ae2103e051dd3573daa05964487c93fe5a5b37b76fe94729c8c2b372845f5d85e0722c53ae 你可以用这个 工具，计算赎回脚本 HASH160 的 值，看看是不是 8bd55244e4f86fb631e908f8cd9d9084e6744ad1。 对照 操作码说明书，翻译赎回脚本的内容。 52 是不是有点眼熟？这个赎回脚本，正是 2 [公钥 1] [公钥 2] [公钥 3] 3 OP_CHECKMULTISIG 解码后的解锁脚本为 0 [签名 1] [签名 2] 2 [公钥 1] [公钥 2] [公钥 3] 3 OP_CHECKMULTISIG ||| 你能看到， A P2SH transaction locks the output to this hash instead of the longer redeem script P2SH 将输出锁定到脚本哈希，而不是锁定到特别长的具体脚本。 Instead of \"pay to this 5-key multisignature script,\" the P2SH equivalent transaction is \"pay to a script with this hash.\" 用 P2SH 实现多签，只需要告诉付款方赎回脚本的哈希，取代 “向 N 个多重签名的具体脚本支付”，等同于 “向有该哈希值的脚本支付”。 P2SH 让付款到复杂脚本变得跟 P2PKH 一样简单。 向付款方提供脚本哈希，就像 P2PKH 需要公钥哈希一样 赎回脚本的内容，从锁定脚本转移到了解锁脚本中，更多的交易费也从发送方转移到收款方 目前网络中的大部分 P2SH 交易都是多签交易， 但 P2SH 拥有更广泛的可能性 ，你可以在 P2SH 的赎回脚本中充分发挥想象力。 One more thing P2PK、P2PKH、old-style multisig 和 P2SH 都是网络支持的标准交易类型。 需要注意的是，考虑到安全因素，比特币网络默认只传播（relay）这些标准交易。 Note that there is a small number of standard script forms that are relayed from node to node; non-standard scripts are accepted if they are in a block, but nodes will not relay them. 在尝试交易脚本的无限可能前，你应该先读一读 源码 中的 policy 部分。 参考 精通比特币（第二版）译文 原文 Bitcoin - multisig Scripts The state of Bitcoin multisig Multi Sig Use Cases Pay to script hash Bitcoin multisig the hard way: Understanding raw P2SH multisig transactions p2sh.info – Latest stats on Bitcoin transaction types P2SH outputs statistics P2SH repartition by type bitcore library API #Script Script new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 P2SH |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么 "},"chapter-transaction/p2ip.html":{"url":"chapter-transaction/p2ip.html","title":"P2IP","keywords":"","body":"P2IP P2IP 简介 中本聪在早期的比特币客户端里提供了一个很有意思的功能：将比特币直接发送到一个 IP 地址上。 There are two ways to send money. If the recipient is online, you can enter their IP address and it will connect, get a new public key and send the transaction with comments. If the recipient is not online, it is possible to send to their Bitcoin address, which is a hash of their public key that they give you. They'll receive the transaction the next time they connect and get the block it's in. This method has the disadvantage that no comment information is sent, and a bit of privacy may be lost if the address is used multiple times, but it is a useful alternative if both users can't be online at the same time or the recipient can't receive incoming connections. 您的客户联系 IP 地址，以确定他们是否实际运行比特币并接受 IP 交易。如果不是，则不发生任何交易。 您的附加信息（“from”，“message”等）与服务器交换。 服务器生成一个全新的比特币公钥并将其发送给您的客户端。 您的客户端将硬币发送到此公钥。 由于当时的客户端实现并没有提供身份验证功能，因此可能会受到中间人攻击，即任何 “中间人” 都可能在交易期间截获您的比特币。当他们看到有人通过 IP 地址发送比特币付款时，他们假装是实际的收款人并将其比特币地址发回，从而你最终将比特币发送给了错误的人。遗憾的是，不久之后中本聪就消失了，而 Core 开发团队以不安全为由把这个功能从代码中删除。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 P2IP |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-transaction/p2rph.html":{"url":"chapter-transaction/p2rph.html","title":"P2RPH","keywords":"","body":"P2RPH new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 P2RPH |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-network/malleability.html":{"url":"chapter-network/malleability.html","title":"交易可塑性","keywords":"","body":"交易可塑性 什么是可塑性 交易可塑性，也叫交易延展性。在现实生活中，我们把一块金子敲变形之后，虽然形状有所改变，但质量却没有发生变化，也就是说金子外观发生了变化但是仍然被认可，这种特性呢被称为 “可塑性”。在比特币系统中，也有一个类似的名词，“Transaction Malleability”。这个词通常翻译为 “交易延展性”，也叫做 “交易可锻性” 存在不同类型的可塑性，但总而言之，如果创建了一笔比特币交易，其他人（例如矿工或交易所）可以在将其被打包入块之前修改交易 ID。由于比特币系统签名算法 ECDSA 的问题，节点可以利用之前的签名和账单内容，生成一个不一样的有效签名，这样，交易 ID 也随之改变。这个算法对于一个内容只存在 2 个有效签名，因此账单只能被锻造一次。 这里的重点是，这个签名有效，账单也是合法的。因此，在比特币网络中会同时存在两笔账单，这两笔账单内容一样，但是账单 ID 不一样。假如用户发出的交易为 A，黑客改成了 B。 这里有一个前提是，A 和 B 的输入都一样，对于一个节点来说，只要有一个交易被写到链上了，另一笔交易就会失效，因为在这个节点写入交易时会先检查本地链上账单的输入是否已经被消费过了。当两笔账单都在网络中传播时，一个节点接收到两笔账单后，会写入最先接收到的那笔，抛弃另一笔。 请记住，在可塑性方面，第三方不能更改资金的接收者，也不能更改金额，也不能更改费用......他们只能更改交易 ID。 这是功能还是缺陷 首先要意识到的是，延展性 “融入” 于比特币的设计中。 比特币使用一种称为椭圆曲线数字签名算法（ECDSA）的加密算法，这些数字签名本身具有可塑性。换句话说，第三方可以以某种方式更改签名，但它们仍然有效。其他类型的数字签名也是如此。 例如，（r，s）对的 ECDSA 签名可以被（r，-s）控制。这签名仍然有效，即使它们并不相同。 现在将此与比特币交易（包括签名）进行哈希计算。因为 ECDSA 签名具有可塑性，并且这些签名是每笔交易的一部分，这意味着比特币交易将具有可塑性。 因此，你可以合理地将可塑性称为比特币的 “功能”。然而，你也可以把它称为一个 bug，因为这会带来一些不理想的后果。归根结底，这取决于你对它的掌握有多了解。 可塑性的影响 任何声称可塑性是一个巨大而紧迫的问题的人要么是不知情要么是在撒谎。因为这是比特币有生俱来的，可塑性已经存在了十余年。臭名昭着的 MtGox 盗窃案一直被归咎于可塑性，尽管 这些理论已被揭穿。 遗憾的是，可塑性被当成了政治工具，修复延展性的一个好处是它使其他项目（如 Lightning Network）更容易实现，那些支持闪电网络的人可能会大大夸大修复延展性的需要。 比特币的可塑性至今仍然存在。即使在 BTC 中，SegWit 也只能阻止 SegWit 交易的可塑性，虽然这些交易占总交易量的很小一部分而已。 零确认交易 在比特币中，一旦矿工将其包含在块中并将块发布到区块链，该区块的交易就会得到一次确认。确认越多，该交易的可信度就越高。试图利用可塑性造成攻击的人，在交易被确认后，另一笔双花的企图会直接被矿工拒绝。 可塑性攻击只能操纵那些刚进入矿工的内存池但尚未包含在块中的交易，即零确认交易。大多数人都知道，未经确认的交易不如具有至少 1 个确认的交易安全。 但这安全性究竟如何呢？ “Bitcoin Core” 的理念是我们应该在基础层上有一个高费用的分层系统。因此，除非您使用适当的高额费用，否则未经确认的交易可能需要很长时间才能确认，或者可能永远无法确认。在此期间，它可能会花费两倍或用 “RBF” 替换（替换费用）以让交易得以更快确认。在那个系统中，零确认被认为是相当 不安全且不可靠 ，毕竟，Bitcoin Core 的支持者认为小额的交易应该在二层网络上进行。 Bitcoin SV 的理念是不应该让交易费变得昂贵，而且区块不应该填满，小世界网络中的矿工竞争使得零确认足够 安全可靠 。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 交易可塑性 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-network/timelocks.html":{"url":"chapter-network/timelocks.html","title":"时间锁","keywords":"","body":"时间锁 时间锁功能让比特币交易拥有了时间维度，这篇文章介绍时间锁的详细内容。 本文也是介绍比特币交易内幕细节的最后一篇文章。 区块 为了理解时间锁，需要提前介绍一点区块的概念。 你可以把区块（Block）想象成一个箱子，里面装着交易。 对这些 “箱子”： 可以按先来后到的顺序，用 高度 标识，第一个箱子的高度为 0 也可以用哈希标识，相当于这个箱子的标签 每个箱子，都记录了它 前一个 箱子的标签（哈希） 网络不断产生新的交易，人们根据规则，将这些交易 “塞到” 新箱子里，随后将它摞在之前整理好的最后一个箱子上。 容易想象，网络中的交易，被不断整理到箱子中，这些依次摞起来的箱子，形成了一条 不断延长 的 “箱子” 链 。 比特币网络的总帐本，就是这样的一条链，交易填充区块，一个个区块 前向引用 ，形成 区块链 。 nLocktime 回忆一下比特币交易的结构。 长度（字节） 描述 4 交易结构的版本 1~9 VarInt 交易包含几个输入，非零正整数 变长 输入数组 1~9 VarInt 交易包含几个输出，非零正整数 变长 输出数组 4 nLockTime 通过最后 4 字节的 nLockTime 字段，可以实现 交易 粒度的时间锁。 nLockTime = 0，表示这笔交易没有时间锁定，可以被 “随时” 写入账本，“即时生效” nLockTime ，指示块 高度 ，这笔交易在块高度 nLockTime 之后，才可以被写入账本 nLockTime >= 500,000,000，指示具体的 Unix 时间戳 ，这笔交易在 Unix 时间戳 nLockTime 之后，才可以被写入账本 Unix 时间戳是一种时间表示法，它的值，表示从 1970 年 1 月 1 日 0 时 0 分 0 秒 UTC 开始，经历的秒数。 你可以用这个 工具 转换，1546434313 表示的时间为 2019 年 1 月 2 日 13 时 5 分 13 秒 UTC，即北京时间 2019 年 1 月 2 日 21 时 5 分 13 秒 UTC+8。 设想这样的需求，父亲想立个遗嘱，在自己去世后，儿子可以拥有自己所有的比特币，并需要保证： 父亲在世时，可以随时修改遗嘱 父亲过世后，儿子确定可以拿到币 设置交易的 nLockTime 字段，可以满足这样的遗嘱需求。 父亲计算出自己 80 岁时的 Unix 时间戳，值为 T 父亲构造一笔 P2PKH 交易，将自己所有的比特币，付款到儿子的公钥哈希，并设置交易 nLockTime 字段的值为 T 父亲用自己的私钥，对这笔交易签名（设置正确的解锁脚本），将签名后的交易数据交给儿子 这笔交易是合法的，但因为时间锁的设置，即使向网络 “展示” 这笔交易，它也不会被提前写入账本。转账不会在父亲 80 岁前发生，即儿子不会在父亲 80 岁前拿到这笔钱。 如果父亲去世时没到 80 岁，儿子也可以在未来，在父亲 80 岁这天之后，向网络 “展示” 交易，拿到这笔钱。 如果父亲想修改遗嘱，只需要： 将所有比特币先转到自己的另一个公钥哈希上，即时生效 重新按照自己的意愿，构造交易并设置 nLockTime，签名后分发 完成操作 [1] 后，之前那笔签名过的交易会 变得无效 ，因为对应的 UTXO 已经被消费。 一般的，Alice 签名了一笔交易，付款到 Bob 的公钥哈希，并将交易的 nLocktime 设为三个月后。Alice 把这笔交易发送给 Bob，此时，两人都知道： 在三个月过去之前，Bob 不会收到这笔钱 这三个月内，Alice 可以随时构造另外的交易，即时生效，消费同样的 UTXO，即 Alice 可以在这三个月内，随时花费付给 Bob 的这笔钱 Bob 无法保证 Alice 不这么做 这正是 nLocktime 的局限性。nLocktime 唯一能保证的，是这笔 交易在时间锁释放之前 ， 无法被写入账本 ，即收款人无法在时间锁释放之前，收到资金。 交易粒度的 nLocktime 时间锁，只在下列情况满足时，才会释放。 nLocktime = 0，没有时间锁 nLockTime ，且当前的区块高度，已经超过了 nLockTime 的值 nLockTime >= 500,000,000，且当前的 Unix 时间戳，已经超过了 nLockTime 的值 OP_CHECKLOCKTIMEVERIFY 为了改善交易 nLocktime 时间锁的局限性，有更细粒度的控制，时间锁需要跟 UTXO 关联，即放到锁定脚本中。 2015 年 12 月，BIP-65 引入操作码 OP_CHECKLOCKTIMEVERIFY（CLTV，Check Lock Time Verify），来实现 UTXO 粒度的时间锁定。 对一般的 P2PKH，其锁定脚本为 OP_DUP OP_HASH160 [公钥哈希] OP_EQUALVERIFY OP_CHECKSIG 如果一个 UTXO 的锁定脚本形如 [过期时间] OP_CHECKLOCKTIMEVERIFY OP_DROP OP_DUP OP_HASH160 [公钥哈希] OP_EQUALVERIFY OP_CHECKSIG || 我们说，这是一个被 CLTV 锁定的 UTXO，只能在锁定脚本中的 CLTV 时间锁释放后才可以被消费。 其中，[过期时间] 与交易的 nLockTime 字段有相同的格式，指示一个区块高度（），或一个 Unix 时间戳（>= 500,000,000）。 即，只有在当前区块高度超过 [过期时间]，或当前 Unix 时间戳超过 [过期时间] 时，CLTV 时间锁才会释放，这个 UTXO 才可以被消费。 CLTV 的幕后细节 逻辑上 CLTV 很好理解，但其工作方式稍显复杂，具体在 BIP-65 里定义，这里也做个说明。 回忆一下交易输入最后 4 字节的 nSequence 字段，这里会用到。 长度（字节） 描述 32 引用的交易哈希，UTXO 来自哪笔交易 4 引用的输出序号，UTXO 是那笔交易的第几个输出，从 0 开始计数 1~9 VarInt 后面紧跟的解锁脚本，有多少字节 变长 解锁脚本的内容 4 nSequence 如果一笔交易要消费 CLTV 锁定的 UTXO，需要同时满足下列所有条件。 这笔交易（消费这个 UTXO 的）输入的 nSequence 字段的值，必须小于 0xffffffff 这个 UTXO 锁定脚本中 [过期时间] 的值，必须大于等于 0 这笔交易的 nLockTime 和这个 UTXO 锁定脚本中的 [过期时间]，必须同时大于等于 500,000,000 或同时小于 500,000,000，即要么都指示 Unix 时间戳，要么都指示区块高度 这笔交易的 nLockTime 字段的值，必须大于等于这个 UTXO 锁定脚本中 [过期时间] 的值 你能看到，交易要消费 CLTV 锁定的 UTXO，还需要配合使用 nLockTime 字段。 这些条件组合有些复杂，与当前区块高度或当前 Unix 时间戳，好像并没有什么关系。 让我们换个角度看，着重关注最后一个条件。对一笔交易， 为了保证交易能 “即时生效”，你需要将 nLockTime 的值，设置为小于等于当前的区块高度或小于等于当前的 Unix 时间戳，否则这笔交易不会被写入账本 为了满足上述最后一个条件，你需要将 nLockTime 的值，设置为大于等于锁定脚本中 [过期时间] 的值，否则时间锁不会释放 画个图，直观的看一下。如果当前时间 Tc，未到 CLTV 锁定的过期时间 Tb： ![](https://www.lucidchart.com/publicSegments/view/5d145f0e-021f-4b5a-acc5-5493815f57d8/image.png) 那么，你找不到这么一个 nLockTime 值 T，同时满足 T （交易即时生效）且 T>= Tb（释放时间锁）。 如果当前时间 Tc，超过了 CLTV 锁定的过期时间 Tb： ![](https://www.lucidchart.com/publicSegments/view/d26de9f5-62ae-46b6-917c-8aa510ab6bbf/image.png) 那么，nLockTime 可以被设置为大于等于 Tb 且小于等于 Tc 的任意值，一般的，都直接设置为当前的区块高度或当前的 Unix 时间戳 Tc。 对于 使用 nLockTime 字段的交易时间锁 使用 CLTV 操作码的 UTXO 时间锁 这两种时间锁都是 指定某个具体的绝对时间点 为过期时间的 绝对时间 锁。 nSequence nSequence 字段最初被设计为，标识某些还未被写入账本（仍在内存池中）的交易，允许它们在之后被更新。 如果某个交易的输入，其 nSequence 字段的值，小于 0xffffffff，表示这笔交易尚未 “确定”，还不是最终版本 这笔交易会被暂时搁置，等待被另一个消耗了同样输入的，并且有一个更大 nSequence 值的交易替换 直到收到消耗了同样输入的、nSequence 值为 0xffffffff 的交易，才认为这笔交易已经准备就绪，可以随时被写入账本 但这个功能没有实现，从未在系统中使用过。 BIP-68 通过复用交易输入的 nSequence 字段，实现 交易 粒度的 相对时间 锁。 相对时间的意思是，从 被引用的交易写入账本 后，经过的时间。 高度 10,000 的区块中有一笔交易，创建了一个 UTXO 你现在创建一笔新交易消费这个 UTXO，并设置新交易输入 nSequence 字段的值为 100 个区块 那么，这笔新交易不会被写入账本，除非当前区块高度已经达到或超过 10,100。 nSequence 是输入的一个字段，交易可以包含多个输入。 只有在满足了 所有输入 上的 nSequence 相对时间锁（如果有）要求后， 交易 才被认为合法，才会被写入账本。 根据 BIP-68 的设计，如果 nSequence 字段的值小于 $2^{31}$（0x80000000），表示这是一笔激活了 nSequence 相对时间锁的交易。 用 nSequence 表示相对时间锁的过期时间，格式上与 nLockTime 和 CLTV 略有不同。 对于这个 4 字节的值， 最高位第 31 位，作为开关，为 1 表示 禁用 相对时间锁 第 22 位作为类型标志，为 1 指示 多少个 512 秒 ，为 0 指示 多少个区块 低 16 位，作为值 如果 nSequence 的值为 0x0040005a， 31 22 15 0 | | | | 0000 0000 0100 0000 0000 0000 0101 1010 可以知道： 第 31 位是 0，启用了相对时间锁 第 22 位是 1，指示多少个 512 秒 低 16 位是 0x005a，值为 90 超时时间是 $90 \\times 512 = 46080$ 秒 整理下 nSequence 的不同情况： 等于 $2^{32} - 1$，即等于 0xffffffff，表示没有设置任何时间锁 小于 $2^{32} - 1$ 且 大于等于 $2^{31}$，表示启用了 nLockTime 或 CLTV 绝对时间锁，一般都设置为 0xfffffffe 小于 $2^{31}$，即小于 0x80000000，表示启用了 nSequence 相对时间锁 OP_CHECKSEQUENCEVERIFY 通过 BIP-112 引入的操作码 OP_CHECKSEQUENCEVERIFY（CSV，Check Sequence Verify），可以实现 UTXO 粒度的相对时间锁定。 锁定脚本形如 [过期时间] OP_CHECKSEQUENCEVERIFY OP_DROP OP_DUP OP_HASH160 [公钥哈希] OP_EQUALVERIFY OP_CHECKSIG || 简单的说，被 CSV 锁定的 UTXO，从 创建它的交易被写入账本 开始计时，只有在经过一定的秒数或一定的区块数后，这个 UTXO 才可以被消费。 与 CLTV 类似，在消费一个 CSV 锁定的 UTXO 时，要求满足下列所有条件。 交易的 nVersion 字段的值，必须大于等于 2 输入的 nSequence 字段的值，必须小于 0x800000000 锁定脚本中 [过期时间] 的值，必须大于等于 0 且小于 0x800000000 输入的 nSequence 和锁定脚本中的 [过期时间]，要么都指示秒数，要么都指示区块数 输入的 nSequence 的值，必须大于等于 [过期时间] 的值 总结 这篇文章介绍了四种比特币交易时间锁： 基于交易粒度的 nLockTime 绝对时间锁，在达到指定的区块高度或具体的 Unix 时间戳前，这笔交易不会被写入账本 基于交易粒度的 nSequence 相对时间锁，这笔交易不会被写入账本，除非其输入引用的那笔已经被写入账本的交易，经过了指定的时间或区块数 基于 UTXO 粒度的 CLTV 绝对时间锁，在达到指定的区块高度或具体的 Unix 时间戳前，这笔 UTXO 无法被消费 基于 UTXO 粒度的 CSV 相对时间锁，在创建这个 UTXO 的交易写入帐本后，除非经过了指定的时间或区块数，否则这个 UTXO 无法被消费 关于 Median Time-Past 和 Fee Sniping，因为需要理解区块和挖矿的相关内容，所以我把他们放在之后的文章中再介绍。 时间锁的概念非常好理解，但细节繁多略显晦涩，建议你在阅读本文的同时，也看看下面的参考资料。 参考 精通比特币（第二版）译文 原文 Bitcoin wiki, Protocol documentation #tx Bitcoin wiki, Script #Locktime 比特币的时间锁转账 Transactions with a wait time (using nLockTime) Understanding Timelock Options Using CLTV in Scripts Using CSV in Scripts new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 时间锁 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么 "},"chapter-block/":{"url":"chapter-block/","title":"比特币区块","keywords":"","body":"比特币区块 本章将介绍比特币区块的结构和生成方式，说明区块确认的意义，并分析在小世界网络中零确认的重要性。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币区块 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-block/block-structure.html":{"url":"chapter-block/block-structure.html","title":"区块的结构","keywords":"","body":"区块链 比特币的交易，会被 “整理” 到区块中，形成一条可追溯到创世块的链。 网络活动不断产生新交易，不断 “整理” 出新区块来记录 “这一段时间内” 的交易。 为了能彼此关联，每个区块都会记录它的前一个区块是什么，这相当于，区块按先来后到的顺序被 “摞” 在一起，形成了一条 “链”。 一个区块，可以用高度标识，也可以用哈希标识。 随着时间的推移，链不断延长，这条 区块链 ，记录了截至目前为止所有的比特币交易，是比特币网络的总账本。 我们说一笔交易被写入账本，就是说这笔交易通过了验证，已经被 “整理” 进区块，并得到了全网络的认可。 这篇文章，介绍比特币的区块和区块链。 区块的结构 当你托运行李的时候，航空公司会在你的箱上贴一个标签，记录一些必要的基本信息，方便快速识别。 用区块存储交易也是类似的，代码见 block.h#L61，区块结构（序列化后）为 长度（字节） 描述 4 后面紧跟的区块数据，有多少字节 80 区块头 1~9 VarInt 区块里有多少笔交易 变长 各个交易的数据 区块头就是这个区块的 “标签”，代码见 block.h#L21，区块头的结构（序列化后）为 长度（字节） 字段 描述 4 nVersion 版本号，用来跟踪软件或协议的升级 32 hashPrevBlock 前一个区块（父区块）的哈希值 32 hashMerkleRoot 一个哈希值，表示这个区块中全部交易构成的 Merkle 树的根 4 nTime 区块创建的时间，Unix 时间戳格式 4 nBits 难度目标，该区块工作量证明算法的难度目标 4 nNonce 一个用于证明工作量的计数器 你能看到，和交易一样，序列化后的区块结构中，也没有区块哈希的部分。 这个哈希标识，可以直接用收到的区块数据计算出来，并不需要传输。通过下面的过程，计算区块的哈希。 对序列化后的 区块头 数据做 SHA256 运算，得到 S1 对 S1 做 SHA256 运算，得到 S2 按字节翻转 S2，得到区块的哈希 区块看起来会是下面的样子，黄色的部分是区块头。 高度 100,000 的区块，从 序列化后的区块数据 中找到区块头。 01000000 # nVersion 50120119172a610421a6c3011dd330d9df07b63616c2cc1f1cd0020000000000 # hashPrevBlock 6657a9252aacd5c0b2940996ecff952228c3067cc38d4885efb5a4ac4247e9f3 # hashMerkleRoot 37221b4d # nTime 4c86041b # nBits 0f2b5710 # nNonce 这个区块在 Unix 时间戳为 0x4d1b2237 时，即 ‭1293623863‬ 时被创建出来，转换后的时间 为 2010-12-29 11:57:43 UTC，即北京时间 2010-12-29 19:57:43 UTC+8。 对区块头数据做 SHA256，得到 S1 的值 00844eeb8713eb62bc33df34ca0cfa7af2ee152a6b16788fd3f2fea69861f3c8 对 S1 做 SHA256，得到 S2 的值 06e533fd1ada86391f3f6c343204b0d278d4aaec1c0b20aa27ba030000000000 按字节翻转 S2，得到区块哈希 000000000003ba27aa200b1cecaad478d2b00432346c3f1f3986da1afd33e506 关于 nBits 和 nNonce 字段的含义，下篇文章介绍。 Merkle 树 Merkle 树是一棵二叉树，用于 归纳 一个区块中的所有交易，代码见 merkle.cpp。 Merkle 树会生成 整个交易集合的数字指纹 ，形如 交易会被放在 Merkle 树最底层的叶子节点上，如图所示，如果交易的个数是奇数，会复制最后一笔交易补齐，其中： $H_A = SHA256(SHA256(Tx\\ A))$ $H_{AB} = SHA256(SHA256(H_A + H_B))$ $H_A + H_B$ 的意思拼接 $H_A$ 和 $H_B$，如果 $H_A = 0123$，$H_B = 4567$，则 $H_A + H_B = 01234567$。 不管区块中有多少交易，都使用 Merkle 树结构进行归纳，最顶上的树根 Merkle Root 的值，会放到区块头的 hashMerkleRoot 字段中。 Merkle 树将区块头和区块中的交易关联了起来，如果区块中的交易发生了变化，Merkle 树根的值就会变化，从而改变区块头，改变整个区块的哈希标识。 使用 Merkle 树的另一个好处是，它提供了一种校验区块是否存在某笔交易的高效途径。对于下面这棵 Merkle 树， 为了证明交易 K 在区块中，可以用 $HL$、$H{IJ}$、$H{MNOP}$ 和 $H{ABCDEFGH}$ 这四个哈希值构造一条 “Merkle 路径”，只需 128 字节，任何人都可以用这条路径，验证区块包含交易 K。 Coinbase 一个区块最多只能有一笔 Coinbase 交易（一般是区块中的第一笔交易），它没有输入，“无中生有” 的产生输出，即会发行新的比特币。 伴随着区块的产生，新的比特币会被不断 “创造” 出来。 比特币协议规定： 每产生 210,000 个区块，新发行的比特币数量就会减半，直至为零 比特币的创世区块（高度为 0 的区块），发行 50 个比特币 网络会自动调整某些参数，以保证平均 10 分钟的区块生产速度 谁创建的区块，谁就获得这个区块中新发行的比特币（构造一个 Coinbase 交易放到区块中，输出到自己的地址），及区块中所有交易的手续费 产生 210,000 个区块，大约需要四年时间。 在比特币运行的第一个四年中，每个区块创造出 50 个新比特币 2012 年 11 月，比特币的发行速度降低到每区块 25 比特币 2016 年 7 月，降低到 12.5 比特币 2020 年的某个时候，也就是从区块高度 630,000 开始，它将再次下降至 6.25 比特币 直到第 6,720,000 块（大约在 2137 年产生），达到比特币的最小单位 1 聪 经过 6,930,000 个区块之后，大约在 2140 年，所有的共 20999999.97690000 比特币将全部发行完毕 关于比特币的总量，可以写个程序算一下。 package main import \"fmt\" func main() { totalBitcoin := 0 halfCount := 0 // 减半的次数 for coinbase := 5000000000; coinbase >= 1; coinbase /= 2 { fmt.Println(coinbase) totalBitcoin += coinbase * 210000 // 每 210000 个区块 Coinbase 减半 halfCount += 1 } fmt.Println(\"------------------\") fmt.Println(halfCount) fmt.Println(totalBitcoin) } // 输出 // 5000000000 // 2500000000 // 1250000000 // 625000000 // 312500000 // 156250000 // 78125000 // 39062500 // 19531250 // 9765625 // 4882812 // 2441406 // 1220703 // 610351 // 305175 // 152587 // 76293 // 38146 // 19073 // 9536 // 4768 // 2384 // 1192 // 596 // 298 // 149 // 74 // 37 // 18 // 9 // 4 // 2 // 1 // ------------------ // 33 // 2099999997690000 一个要注意的点是，因为 Coinbase 交易不需要输入，所以你可以在解锁脚本里填写任意值（2 ~ 100 字节），这个值被称为 Coinbase 数据。 根据 BIP-34 的要求，Coinbase 数据需要以这个 Coinbase 交易所在的区块高度开头。 交易 d0ec21e1d73d06be76c2b5b1e5ec486085bda8264229046c11b95f66f2eded83 的 Coinbase 数据为 03ec59062f48616f4254432f53756e204368756e2059753a205a6875616e67205975616e2c2077696c6c20796f75206d61727279206d653f2f06fcc9cacc19c5f278560300 开头的 0x03 表示，区块高度数据紧跟其后有 3 字节，值为 0x0659ec（小端模式），即 416236。 另外，比特币协议允许 Coinbase 交易发行新币的最大数量可以直观的说明剩余比特币的比例，比如在当前（2019 年）每个区块被允许发行新币的最大数量是 12.5，说明下次减半的时候，还有 12.5% 的比特币没有开采。 区块链 注意区块头中 hashPrevBlock 字段带来的神奇效果。 每个区块，都会将它前一个区块的哈希值写在自己的区块头中。 区块的哈希，是对区块头的哈希。 如果链中的某个区块数据发生了变化（例如区块中的交易被替换），那么这个区块的哈希也会发生变化（Merkle 树根发生了变化），同时改变下一个区块的区块头数据及区块哈希，带来一连串的连锁反应。 也就是说，从这个改变了的区块开始，之后所有的区块都必须重新计算。 这是比特币区块链一个非常重要的特性。 一段时间内产生的交易通过验证后，会被打包（整理）进区块并 “告知” 全网，网络中的节点根据规则，选择接受（跟随）这个区块（把这个区块纳入总帐本），或者拒绝（丢弃）这个区块。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 区块的结构 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-block/block-confirmation.html":{"url":"chapter-block/block-confirmation.html","title":"区块确认","keywords":"","body":"区块确认 比特币内的确认时间是很快的。人们混淆了确认和结算。尚未在区块内结算的交易是足够安全的。这个体系不需要固若金汤，它只要足够好就够了。 其结果是这个系统在任何规模上都比 Visa 或万事达卡安全数千倍，并且交易可以在一秒钟内尘埃落定。随着网络规模和网络容量的上升，检测双花的延迟将会降低，网络将变得更加安全。比特币有趣的二分法在于，使用越多、规模越大，它就越安全，系统中商户的风险也将变得越低。 比特币中的交易的确认时间可以比任何当前部署的电子系统更短。现在已经是绰绰有余了，规模越大，体验越好。 10 分钟的间隔 许多人经常想知道为什么比特币使用了 10 分钟的间隔。比特币被设计为调整为平均 10 分钟的出区块间隔。但是，您会注意到实际网络上区块的平均时间约为 560 秒或 9.3 分钟。与预期的 10 分钟有所不同的原因与网络的增长有关。对于可以想象的未来，我们可以预期比特币将遵循摩尔定律中的预测率，以接近指数的路径增长。因此，我们将看到出区块时间略少于 10 分钟。 比特币的实际上不是泊松或指数分布，而是一个 SEIR 过程。这是一个生物学上的概念，当科学家对流行病进行建模时，他们会使用与以下术语相关的组合模型： 易感 Susceptible 暴露 Exposed 传染 Infectious 康复 Recovered 在诸如比特币之类的系统中，或者对于任何分布式的节点系统，我们可以这样描述：网络易受影响的状态是已经选择了区块并且正在寻找新的区块的状态。这时候，区块 (记为 B0) 在整个网络中是已知的，并且所有务实的矿工都在其上进行挖掘。接下来，我们进入暴露状态。在暴露状态下，矿工发现了一个新的区块。一个或多个矿工接受这个区块，并在上面开采新的区块。这需要从找到符合的哈希值的矿工传播到其它所有矿工。暴露状态下的时间标记与其他矿工接收该区块之间有一段确定的时间。 下一个状态可以在流行病学研究中以传染状态建模。这里，矿工已经验证并接受所接收的区块作为满足区块散列的解决方案并开始将其传播给其他矿工。在验证阶段之后，每个矿工开始在 B0 之后开始寻找下一个区块 B1 的解决方案。 在所有节点知道交易之前 的预期时间是： 请访问 https://papers.ssrn.com/sol3/papers.cfm?abstract\\_id=3151940 查看模型 结果不是上面的限制，而是渐近等价。预期时间随 N 增加的事实与我们不用 N 来扩展 I0 这一事实有关。从这里我们看到当少数连接不良的节点持有一个交易，并且当几乎所有节点都有一个副本时在区块或交易中，节点传播到 Gossip 网络中的其余节点的速度非常慢。 我们现在可以扩展此模型以考虑审查以及当发现区块时，区块将重置并重新启动该过程。 验证节点接收的每个区块并检查其准确性。当几乎同时开采两个区块时，包括要由节点接收的第一个区块并进行验证。下一个区块将被放入 “孤立池” 中，并在最初接收到的区块之后进行验证。如果添加了另一个区块，则将此孤立区块添加到节点的主链中，使其成为更长的链。 每个节点在将区块传播到连接的对等节点之前验证区块。以这种方式，仅传播有效区块，并且快速隔离任何无效区块。比特币核心客户端列出了以下功能中的所有验证要求： CheckBlock CheckBlockHeader 在验证区块时，节点将确保： 区块的数据结构格式正确。 区块头哈希小于或等于两周时间段的设定目标难度。 该区块的时间戳不到 120 分钟。这允许挖掘节点上的一些时间漂移。 区块大小小于或等于 MAX_BLOCK_SIZE 参数中设置的值。 初始交易是 coinbase 生成交易。这是该区块的交易零，并支付获胜的矿工。 该区块中没有其他的 coinbase 交易。 区块中的每个交易都是有效的。必须单独检查和验证每个交易及其哈希值。 接下来，验证区块以确保： 交易指数的有效性是正确的。 交易哈希是正确的。 花费 txouts 已经花费在主链上。 所有优先次序都标记为已用完。 花费的 txouts 由消耗它们的有效交易花费。 由于 UTXO 缓存可以保存收到的交易，因此如果已经收到，缓存并保存在池中，则每个交易的验证应该很快。交易不在 UTXO 缓存中的情况会降低进程的速度。节点从网络请求交易的副本，验证它，并将其添加到哈希检查。 当接收到具有交易的区块时，矿工丢失，挖掘节点需要下载丢失的交易的副本，然后才能完成对接收的区块的验证。在下面显示的分布中，我们看到比特币网络上记录的区块时间。虽然这与 10 分钟的区块时间大致呈指数关系，但我们可以看到，当我们查看一分钟时间时它会形成幂律分布。 与 10 分钟相比， 验证和传播时间很短。结果是我们可以近似泊松方法，这比计算与真实 SEIR 模型或更简单的幂律近似相关的微分方程更简单。 时间很重要。 比特币需要在金融世界中运作，而不是认为金融世界可以建模在比特币中运作。货币交易不遵循平等分配。早在 2006 年和 2007 年，我参与了 为会计和审计目的创建自动欺诈系统的货币交易建模。我对全球系统中货币交易的时间分布非常熟悉。 密码社区中经常被忽视的一点是交易的时间分配。在任何时期我们都可以看到这种分布本质上是指数的。区块间​​隔越大，分布越接近指数函数。在大型商业系统中，在超过五分钟但仍然不到一小时的时间段内，我们通常预计交易将在指数情节下落入 95％的置信区间内。 或者，当我们降低间隔时，数据似乎越来越随机，噪声对系统的影响使得预测变得更加困难。 无法建模时间间隔的影响是区块大小的更广泛分布。在一分钟内，即使在较低的 10％alpha，我们预计会有许多与标准可预测分布的偏差。结果是区块大小的标准偏差大得多。 虽然区块的分布是不对称的，但是更大的区块时间允许小型矿工的范围增加。随着时间的减少，更少的矿工能够参与竞争。部分原因是交易的不对称分布。在一分钟时，孤儿率约为 10 分钟阻滞间隔的 2.5 至 3 倍。下图将此图显示为在第 10 分钟区块中的孤立率与时间的关系。 我可以花更多的时间来做指数并播放图表，然而，解释为什么钱不应该被改变的整个过程就是问题所在。 改变定居点（封锁时间）以减少分配并最终有利于大型矿工而不是小型矿工。它扭曲了盈利能力。 这就是为什么 10 分钟。 然而更重要的是，10 分钟不是最佳，没有。为了使比特币正常工作，它需要在 5 分钟到 20 分之间。确切的理想最佳时间是不可计算的，因为它随时间，季节，使用，电价和许多其他非标准因素而变化。 这有助于商人的论点充其量是虚假的。货币稳定时效果最佳。这是比特币的全部目的。为了赚钱稳定，但这是每个人都试图改变的一件事，那就是让比特币成为典型的硅谷 螺丝，并希望它能够实验 。就是这样，比特币永远不会以这种方式运作。 当缩放以包含更大的区块大小时，对于 10 分钟的区块，这是 1 GB，对于一分钟的区块间隔，这是相应的 100 MB。 虽然表面上看，上面显示的区块的两个幂律分布看起来相似，但它们根本不同，因为区块处理时间和分布时间不均匀分布。 此外，通过较小的区块时间，保留矿工自己进一步扭曲分布的一些交易变得更加简单。每隔 10 分钟，第一个四分位数是平均值的 30％。在一分钟的时间里，第一个四分位数是平均值的 40.5％。 鉴于快速发现的区块存在于第三个四分位数及以上的大小，而非分发时间，我们最终得出的情况是，一分钟的区块最终包含足够的交易以减缓分发。不幸的是，大多数所谓的缩放测试使用均匀分布的过程而不是幂律区块大小。我们在第三个四分之一大小的一分钟区块最终被缓慢传播给除了最大的矿工之外的所有人。在目前的环境中，采矿池和独立采矿者的哈希率为 15％或更高。小矿工会缓慢地接收到这个区块，以至于在发现新区块之前 27％的时间他们无法验证区块。 哈希率的增加主要影响矿工的总哈希率低于 10％。 效益 一分钟区块率的吹捧好处是提高了商家的采用率。即使在一分钟的时间段内，大约 20％的区块在超过两分钟的时间内被发现。为了对商业场景中的商家有用，需要在不到 3 秒的间隔内发现并传播区块而不进行孤立。这在极好的时候极少发生。这个论点是对 0-conf 的好处的错误论据。实际情况是，在改变区块时间方面没有可实现的收益。 有许多负面因素。 主要的负面影响是比特币是一种基于现金的支付系统。商家开发软件和应用程序，每次进行更改时，他们都需要重新部署这些软件和应用程序。这是比特币所展现的最大弱点。与法定相比，比特币每分钟都在变化。 如果我们要将比特币作为全球货币，我们需要复制现金的特征。首先，这归结为创建一个稳定的平台。每次更改协议时，商家机会都会丢失。最初的比特币协议具有足够的弹性。永远不会有完美的状态。 比特币中的 10 分钟时间间隔是猜测。这是一个足够好的。也许五分钟会更好或者可能是 15 分钟，但事实并非如此重要，因为它永远不会少于两分钟并成功扩展。需要做的最重要的方面是稳定和锁定协议，以便商家可以在全球范围内构建和使用硬币。 更大的区块时间导致更少的不确定性 我们在下图中看到了区块的分布。一小部分（1 分钟的阻塞时间）只能使用幂律或指数分布建模。较大的区块时间接近正态或高斯分布。 与许多事情一样，比特币的阻止时间是一种权衡。没有完美的时间，当您降低或增加时间时，您可以改变激励并改变系统。 这首先是比特币无法做到的。比特币的设计是稳定的，并且是一成不变的。 Source new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 区块确认 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-block/importance-of-zero-conf.html":{"url":"chapter-block/importance-of-zero-conf.html","title":"零确认的重要性","keywords":"","body":"零确认的重要性 前言：比特币诞生至今已经近十年，但当被问及比特币是什么时，依然很少有人能够准确地解释清楚。《正本清源比特币》系列，将追寻中本聪的足迹，向读者展示比特币创造者对比特币的构想及背后蕴含的寓意，以纠正一些人对比特币的误解。 本文要纠正的，是大家对比特币安全模式的认知：零确认交易。 什么是零确认交易 与物理世界的资产不同，在数字世界里面，数据是可以复制的。这使得去中心化电子支付在很长的一段时间内无法实现，因为需要有一个中间媒介，来裁定一笔钱是不是已经被花掉，否则可能会出现一笔钱既转给了 A，又转给了 B 的情况。这就是大家说的双花问题 (Double Spending Problem)。 中本聪设计的 PoW 方式，创造性地解决了这个问题：节点通过进行大量 SHA256 计算一个找到符合当前难度下的 hash 值，才能获得区块链的一次写入权，其它节点在接收到这个区块后将在当前最长链下继续相同的操作，使得区块链能不断扩展。如果想要双花这笔交易，则需要花费更多的计算以生成一条更长的链让其它节点接受。一笔交易所在的区块的高度与当前最新区块高度的差值即这笔交易的确认数，确认数越多，意味着要篡改这笔交易所需要的工作量也越大，即这笔交易被更改的可能性将随着时间的流逝而越来越小。 比特币平均十分钟出一个区块，这使得交易信息在被打包入区块链前处于一个待确认的状态：一笔比特币交易广播到节点后，会进入该节点的内存池中，并向全网广播这笔交易。这笔还没有被打包的交易则称为零确认交易。 零确认交易并不是什么新技术，是否接受它、让零确认交易能得以足够广泛的应用，取决于商家，以及大众的认知。 零确认交易的设想 接受零确认交易意味着可以更快地结束用户的支付请求。毕竟与几乎即时完成的支付体验相比，要求用户在发送交易后至少需要等待一个确认才交付在大多数的场景下是不现实的。 中本聪在 2010 年回复 BM 质疑比特币十分钟确认太慢的时候，曾提出了 Payment Processor 的 说法，用于快速交易支付： Quote from: bytemaster on July 28, 2010, 08:59:42 PM Besides, 10 minutes is too long to verify that payment is good. It needs to be as fast as swiping a credit card is today. See the snack machine thread, I outline how a payment processor could verify payments well enough, actually really well (much lower fraud rate than credit cards), in something like 10 seconds or less. If you don’t believe me or don’t get it, I don’t have time to try to convince you, sorry. source: https://bitcointalk.org/index.php?topic=423.msg3819#msg3819 由于这时候零确认只存在节点的内存池中，并没有被打包上链，有可能会被双花的风险，中本聪将零确认交易称为 “二等居民”，并在 Snack Machine 一帖中，给出了他的解决方案： I believe it’ll be possible for a payment processing company to provide as a service the rapid distribution of transactions with good-enough checking in something like 10 seconds or less. The network nodes only accept the first version of a transaction they receive to incorporate into the block they’re trying to generate. When you broadcast a transaction, if someone else broadcasts a double-spend at the same time, it’s a race to propagate to the most nodes first. If one has a slight head start, it’ll geometrically spread through the network faster and get most of the nodes. 简单地说，中本聪在设计比特币的时候，认为零确认交易是可行的，其方法是节点将交易信息加到自己的内存池，如果发现有相同的 UTXO 则拒绝。由于试图双花的交易发出的时间将晚于发给商家的交易，商家只需要稍等片刻，待交易信息传递到绝大多数节点即可。 商家为何接受 / 不接受零确认支付 商家要接受现金之外的其它的支付方式，是需要考虑利弊的。一方面商家希望用户能够方便快捷地支付，以便能有更多的时间去服务更多的用户；另一方面，商家也需要考虑该支付手段是否足够安全，以免商品被购买后即无法收款。信用卡就是一个很好的例子，尽管不时出现信用卡盗刷导致坏单的情况，以及信用卡结算周期长（通常是一个月）并且还要收手续费（一般 VISA 以及 MasterCard 收取商家 2% 的手续费），但因为使用的人群广泛，在对于商家来说带来的客流量的收益大于可能的损失的情况下，店家乐于支持也是合情合理的事情。 对于很多商家（尤其是线下商家）来说，支付过程需要的时间过长几乎是不可容忍的，这客观上有着接受零确认的需求。因此，在讨论支持比特币支付的时候，我们更需要关注的是支持比特币支付能否做得比信用卡更好。这就转变成一个得失比的问题了：比如说，假设某商家因支持零确认支付而营业额可能将增加 20000 元，如果一个用户要求用比特币购买一杯 10 元的咖啡，商家接受到交易后确信这笔交易有 99% 的概率将进入下一个区块，那么它是否值得为了那 1% 的损失 10 元的可能性，而让用户在一边等上十分钟？ 比特币支付目前还处于用户和商家互相促进的过程，更多的比特币用户的存在会让更多的商家愿意支持比特币支付，而更好的支付体验、更低廉的手续成本、更低的坏单率，会让更多商家让利于用户从而更多的培养更多的比特币用户。由于比特币去中心化的原因，商家无法像在信用卡盗刷后向相关机构投诉那样挽回损失，为了自身利益在接受零确认交易上自然容易对其安全性稍存疑惑。这是行业发展早期知识普及缺乏的结果。 因此，尽管像 Bitpay 这样的支付处理商很早就提供了接受零确认交易的选项，普及推广培养用户习惯也着实需要时间。而这随着比特币链上交易增多开始拥堵后情况变得更加糟糕：矿工在无法一次性打包完内存池的全部交易时会优先打包高手续的交易，为了缓解交易长时间没法确认的情况，BTC 引入了替换手续费 Replace-by-fee 的功能，允许用户将交易标记为 replaceable 并在这笔交易未确认前增加手续费来替换掉。这破坏了零确认交易的根基，加深了大众认为零确认交易不安全的印象，尽管商家可以选择设置成不接受 RBF 的交易。BCH 在分叉时除了修改了区块上限的大小之外，另外一个改动是移除了 RBF 的功能，这也是为其 “现金” 的定位恢复推动接受零确认交易打下基础。 接受零确认交易安全吗 零确认交易至今还没能得到广泛使用，很大原因是人们认为交易没有被确认的话是不安全的。客观地说，零确认交易被双花的可能性的确要比已经被打包的交易要大一些，但要注意的是，安全是一个相对的概念，脱离具体金额谈论零确认交易的安全性，似乎和 “抛开剂量谈毒性是耍流氓” 有异曲同工之处。本质上，零确认交易是否足够安全，是一个经济问题而非单纯的技术问题。 零确认交易是否安全，取决于成功双花这笔交易的概率是否足够低。而要双花一笔交易，需要矿工的参与。矿工愿意（配合用户）去双花的可能性如何呢？在比特币这个小世界网络中，信息的传递通常不超过两跳，这意味着，交易信息的传递非常迅速（现在只需要两秒即可几乎传遍全网）。在这样的网络里面，同个 UTXO 的两笔交易，先发出来的交易在传播时占了时机的优势，后发出来的交易（即使只差 0.01 秒）将难以在落后的情况下后来居上抢先传递到 51% 以上的节点的内存池里。 因此，要想成功双花，会有用户试图构建超低手续费的交易、利用节点设置的传递规则的差异以达到延缓那笔交易传播。事实上，绝太多数的双花企图都是这样做的，这可以在 DoubleSpend.cash 上查看到。商家在应对这样的交易时是可以做出风险评估的，毕竟目前主动构建低于目前正常手续费 1sat/byte 的交易本身就比较有嫌疑，支付提供商可以给予商家提示，让顾客等一个确认后再处于，或者多向几个不同的节点请求确认这笔交易是否存在，毕竟超低手续费的交易可能根本就没传递下去。类似的，Payment Processor 在接收到交易信息后也应该尽快地随机向多个节点发送收到的交易信息，以便交易信息能迅速传递到各个结点。 更重要的一点是，交易应该是由商家提供交易模板 (详见 BIP270 协议) 给用户签名，然后由商家来决定何时广播这笔交易。这让商家更具有主动权，进而大大降低了双花的风险：1，正常的情况下，商家的交易先出现在网络上，并会很快传递到大部分节点。试图双花的交易必然落后，从而被先见先得的规则拒绝；2，如果用户试着双花先把交易发出去，那么这笔比双花的尝试会很快传递到全网，随后商家在发送时将无法成功 (因为相同的 UTXO 已经进了矿工的内存池)，商家可以拒绝该用户的这笔支付。这样的机制可以在几秒中内就确定一笔交易的可接受情况，而且被双花诈骗的概率远低于信用卡。 另一个可能是矿工为了双花一笔交易，刻意将一笔用于双花的交易 A 隐藏而不向全网传播，待用于与商家支付的那笔交易 B 被商家承认后再试图将双花的交易 A 打包进区块链。此时该矿工出块的概率和所占的全网算力比相同，低于 51% 的情况下并没有较高的胜算（当然，高于 51% 的算力则是另外一个问题了）。而如果矿工成功出块将交易 A 打包而造成交易 B 失败，这就意味着该矿工对整个网络不诚实，没有将收到的交易信息及时广播，其它的矿工在发现后会因为自己的利益受损而对该矿工进行惩罚，将其暂时列入黑名单暂时切断连接甚至认为这是恶意双花而拒绝该区块。毕竟矿工们是竞争关系，维持与其它矿工的连接需要成本。这将使得该矿工接收其它节点的信息速度变慢，导致孤块率上升，最终出块的利润减少，长期来看也是得不偿失的事情。 能够想明白这个矿工之间的博弈，就会对 PoW 有了更深刻的了解：比特币本身是一个竞争的激励系统，它不只是单纯算力的堆积，更需要对整个网络维护的投入。矿工之间比拼的不是谁先找到块，而是谁能更快地将找到的块更快地传递给所有参与者。商家和用户并不需要信赖于具体的矿工，他们只需要将交易随机发到网络上，让矿工们争先恐后为其打包即可。 因此，虽然零确认交易存在着被双花的可能性，我们至少可以认为，在一笔交易的数额小于区块奖励并在区块浏览器上可看到的情况下，我们可以认为零确认接受这笔交易是几乎安全无误的。而根据今天的价格，这个数额足以满足大部分人的日常需求。 当然，关于接受零确认交易，可以做的还有很多。比如构建全网的双花检测系统，增加商家风险提示，甚至推出双花保险服务。总之，接受零确认交易的风险基本在可控的范围之内，剩下的则是一份愿意去尝试的好奇心。或许有一天，大众在使用比特币支付时不再需要关注确认数的多少。毕竟，有多少人知道支付宝的结算周期是多久呢 :) 现实的约束 “双花”问题在现实世界中对于商户来说不会是一个大问题，之所以我要强调是在 “现实世界” 当中，因为网上有很多双花成功的例子，也有很多人利用这些例子来证明比特币零确认是不安全的，但是这些人只是在实验室的理想条件下成功地将一笔款项发送到了两个不同的地址而已，当面临真实世界的约束条件时，这些手段都是不足为虑的。 因为在真实世界中，“双花”问题不是说你替换了自己的交易就结束了，而是说你替换了交易之后还要成功地欺骗接受小额零确认的商户，拿走了那件小额商品而且不被抓住，这才是真实世界中的真正的 “双花” 问题。 在真实的世界中，付款方从来都不会关心是否双花，因为双花对于付款方只有好处，而收款方商户才会关心是否被双花了，所以商户有动力去做一些防护措施来阻止双花。 商户想要不被双花，很重要的一点在于每笔交易都要至少给矿工支付最低限额的手续费，现在也许是 1sat/byte，扩容之后可能更低。怎样确保每笔交易都至少支付了最低限额的矿工费呢？很简单：由商户来设定交易模板。只要商户在设定交易模板时包含了足额的矿工费，那双花问题基本就不可能发生。 一个典型的交易场景应该是以下这种情况： 1、顾客到店点单，比如一杯咖啡； 2、商户计算好商品总额，包括咖啡的费用、税费、小费以及矿工费； 3、商户将商品总额输入交易模板，递交给顾客签名； 4、顾客填入输入地址及找零地址，签名交易后并将模板交还给商户； 5、商户拿回已签名的交易模板，发送给与其合作的矿工（也可能商户本身就是一个大矿工），确保输入交易的有效性，然后广播交易，交易完成； 6、顾客拿咖啡走人。 注意到了吗？整个交易流程当中是由商户去设定矿工费用，并且是由商户将交易发送给矿工进行广播验证的。矿工是商户的强力合作伙伴，商户有动力与矿工建立更紧密的联结，从而验证交易的有效性。 假设在第 5 步的时候，顾客拿了一个由自己广播的已签名的交易给商户怎么办？商户可以拒收这笔交易！ 现实世界当中的商户是可以拒绝接受不符合要求的交易的！现实世界不是你教商户怎么做生意，而是你要按照商户的要求进行付款。不仅如此，这笔钱如果你想要回来，商户还可以收你处理手续费，因为你没有按照商户的要求进行付款。接下来你就等吧，先等你这笔交易经过 6 个确认到达商户的账户，然后商户再费劲把钱退回给你，顺便收你点手续费。面对如此严苛的现实条件，谁还会为了一杯咖啡去双花？ 归根结底，我们一直说：世界上没有绝对的安全，而小额零确认是足够安全的。Shadders 的视频的 PPT 有句话说得很好：“Security is probabilistic, not binary.” 表达的也是同样的意思。一味地追求绝对安全是没有必要也是不可能达到的。 信任的进化 零确认之所以是个问题 其实在于比特币的哲学理解。比特币的双花是一个经济问题，它也是通过经济的方式来解决的。很多人认为比特币的核心在于互相不信任。但是其实比特币解决互相不信任问题的方法是把交易记录放在公开账本中，让骗子无所遁形。这意味着，比特币这个系统的可信度，不是建立在某一次交易的博弈过程上面，而是一个长期重复博弈的过程。 站在一个交易的角度想怎么防止作弊，防止双花，会带来极大的系统代价。在比特币领域，依靠的是博弈来制约，不能让少数的互相不信任的场景，来提高整体比特币上的诚信商户的低成本交易行为成本。为了解决 1% 的欺诈，提升 99% 交易的成本 10% 都是不可接受的。所以从这个角度来理解比特币上的双花，双花是因为发起支付的人不诚信带来的，我们在无法低成本去限制他让他诚信之外（原子交换），就要用经济手段惩罚被抓住的不诚信行为。 我们并不是要通过遍布警察的社会来防止犯罪发生。而是通过摄像头和监控，以及适当的代价来提升犯罪被抓住的几率来提升犯罪的成本。犯罪成本等于被抓住的几率乘以抓住后的判罚。判罚太重，会导致过失激情犯罪的人破罐子破摔。因为对于他们来说，极刑就是死而已。这是一个自然上限。所以单纯严苛的刑罚并不能降低犯罪率的，世界上没有绝对的安全，而事实上人们也不需要绝对的安全。我们大部分人平时出门不会每天穿防弹衣，我们知道飞机失事后丧命的可能性很高但依然会乘坐。归根结底，人们通常会在方便、安全和隐私之中，进行相应的取舍。 而对于比特币系统而言，诚实的力量是可以积累的。随着确认的数量越多，比特币链上的交易被篡改的可能性将指数级下降，也意味着上面的数据更加可信。比特币的矿工的博弈是一个信任进化的游戏。挖矿的矿工并不需要彼此信任，但在对方成果可验证的情况下，合作共赢的收益要比恶意双花更实惠。这一点，大家可以在 信任的进化 这个游戏里面有更直观的感受。 比特币从始至终都是一个经济系统，我们不能脱离现实的约束条件去谈一些只在实验室的理想状态下才能够实现的攻击。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 零确认的重要性 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-scripting/":{"url":"chapter-scripting/","title":"比特币脚本系统","keywords":"","body":"比特币脚本系统 本章将介绍比特币的脚本系统。这个脚本系统类似于 Forth 语言，它是图灵完备的，意味着人们可以在上面进行各种更高层次的开发。本章还将介绍比特币的交易模板，智能合约，以及在创世纪升级中将对 P2SH 和 OP_RETURN 所做出的调整。 比特币交易的输出，可以被 “绑定” 到收款方的公钥或公钥的哈希（数字指纹）上。在之后需要消费这个 UTXO 时，除非提供了正确的证明和授权信息（签名），否则无法支付。通过交易链条，任何人都可以验证交易的合法性。 在这方面，比特币类似于 OSI 模型中的 HTTP 第四层。 在互联网的 OSI 模型中，HTTP 是一个更高的层，因为它是封装的，它里面还包含其他内容。像侧链、Plasma 或闪电网络之类，它们是独立的系统；不可能成为第二层，因为没有被封装在脚本中。 在比特币模型中，我们有以下层级结构: L0 = 物理层， L1 = 数据链 (网络，例如 IP 和互联网或其他) , L2 = 网络 --P2P 网络和用户与节点之间的交易交换， L3 = 比特币交易 L4 = 脚本 就像你不能选择 HTTP 数据包和数据报的格式一样，在 BSV 的世界里，底层协议即将锁定，你不能在比特币中添加和更改 OP_CODES，除非遇到了无法避免的重大缺陷。这意味着开发者可以在上面构建开发各类应用，不必再担心自己的程序因底层变动而不再兼容。而脚本是图灵完备的，而且是对开发者是完全开放的，这是一个开阔的崭新舞台等着你来展现自己的才华。 欢迎来到比特币的新世界，通过脚本系统，你将看到 Metanet 的冰山一角。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币脚本系统 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-scripting/overview.html":{"url":"chapter-scripting/overview.html","title":"比特币脚本系统","keywords":"","body":"比特币脚本系统 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币脚本系统 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-scripting/turing-completeness.html":{"url":"chapter-scripting/turing-completeness.html","title":"比特币的图灵完备性","keywords":"","body":"比特币的图灵完备性 如果您不能理解比特币的脚本系统，就不能理解中本聪对比特币的设计，就看不到比特币功能最强大的部分，也就领悟不了中本聪的那句话：“The nature of Bitcoin is such that once version 0.1 was released, the core design was set in stone for the rest of its lifetime”（比特币的性质是这样的，一旦 0.1 版本发布，其核心设计在其整个生命周期中都是一成不变的）。 如果不明白比特币的脚本是图灵完备的，又怎能理解彻底比特币脚本系统？ 一、图灵机 Turing Machine 基础知识 图灵机是英国数学家艾伦 · 图灵于 1936 年提出的一种抽象计算模型。图灵提出图灵机的时候，世界上还不存在电子计算机。图灵都是用笔和纸解决这些问题的。所以，本质上，图灵机和图灵完备，都是数学问题。 图灵机，可以从上图的简单模型开始来理解。简单的图灵机，包括下面四个部分： 单向无限长的纸带，纸带上面有一个个存储用空格子，每个空格可以写字符如 {‘0’，‘1’} 或者空格。 一个读写头，读写头每次可以左或者右移动一格，或者不动，这个读写头可以在纸带的空格上读、写 / 修改字符。 状态存储器，记录图灵机当前的状态。有一个初始状态，还有一个特殊的状态，是停机状态。 控制操作的规则，也就是程序指令。根据图灵机当前的状态，以及读写头读到的字符，确定读写头的动作，左移一步，还是右移一步，或停止不动。并可改变图灵机的状态，是进入一个新状态，还是保持不变。 图灵机虽然简单，但是它可用来解决任何可计算问题。图灵机有很多种，但是任何二种之间，如果能够相互模拟，则二者是等价的。 图灵完备 Turing completeness 这是可计算性理论的概念，如果一系列操作数据的规则（如编程语言）可以模拟出图灵机，那么它是图灵完备的。 图灵完备是一个理论上的概念，它是假定有无穷的存储空间的，并且不管计算的效率。 凡是图灵完备的语言，它们之间描述问题、解决问题的能力，理论上说是等价的。比如，比特币脚本与 C/C++ 的语言能力是等价的。 图灵停机问题 图灵停机是一个难题，而且与比特币、区块链密切相关。凡是图灵机、图灵完备的程序语言，都有图灵停机的难题。 停机问题，通俗地说，就是对任意一个程序，对任意的输入数据，能否事先判断出程序是否会停止运行？ 结论是否定的，即不可能存在这样的方法，能够事先判断出来。 对于区块链上的智能合约而言，智能合约是任意人部署的，即程序是任意的；智能合约的触发，是任意用户发数据、交易等触发的，即输入数据是任意的。所以，智能合约运行后，能否停止，是无法预先判断的。 与比特币区块链的关系 比特币中，是有脚本指令系统。由于比特币的脚本中，没有循环结构（语句），在很长的时间里，人们都认为比特币脚本不是图灵完备的。世界上只有一个人知道比特币脚本是图灵完备的，那就是中本聪。而且比特币的脚本，是特地设计成没有循环语句的。 由于人们都错误地认为，比特币脚本不是图灵完备的，语言解决问题的能力有限。而实际上，比特币脚本是比特币最强大的功能。这点被误解后，人们就根本理解不了中本聪设计比特币的原意。 为什么比特币脚本语言，是图灵完备的？后面文章有详细的介绍。 以太坊、EOS 的智能合约 以太坊 以太坊最初目标是实现一台链上计算机，运行智能合约，它需要图灵完备的语言。以太坊开发智能合约的语言 solidity 确实是图灵完备的，它有循环语句。 以太坊的智能合约，不可避免地遇到了图灵停机的难题。它无法预先知道智能合约运行起来后，是否会停止？而智能合约不能停机，则所有的矿工机器，在运行的时候，都可能会死循环，永远出不来了。这对区块链是致命的，也就是链死在那里了。平常普通电脑在死机的时候，一般是断电、开机重启，又可以重新使用电脑。但是，区块链没有中心控制点，也无法断电。智能合约死循环，链就死掉了。 以太坊为了解决这个问题，特地推出一个附加资源限制，Gas(汽油)。运行智能合约需要耗费 Gas，Gas 用完了，智能合约必须停止。以太坊的智能合约，成千上万的矿机都需要运行相同的智能合约；而矿机运行智能合约，每运行一步（或者计算单元），都需要检查还有 Gas 没有，有则继续运行，没有就停机。所有的以太坊的矿机，都要不断地检查是否还有足够的 Gas？这个方法好像是挺笨拙的。 也有人说，以太坊的智能合约不是图灵完备的，因为它有 Gas 限制。其实这个说法是颠倒了因果。以太坊智能合约是梦想拥抱图灵完备的，但是图灵停机难题，它没有办法才用 Gas 的。 事实上，以太坊的 Gas，也是以太坊性能的恶梦之一。 EOS EOS 设计之初，就是对标以太坊的，当然支持图灵完备的智能合约。EOS 的智能合约，也面临着图灵停机的难题。 EOS 解决停机问题，是用 CPU 时间资源来约束智能合约的运行。每个运行智能合约的账户，根据事先抵押的 EOS 数量，分配相应的 CPU 时间。EOS 的矿工节点很少，只有 21 个超级节点产生区块。但是，这 21 个节点，都需要运行相同的智能合约。一样的，节点每运行一步智能合约，都需要去检查 CPU 时间是否还有？有则继续运行，没有就停机。跟以太坊是类似的，这个停机的方法也是挺笨拙的。 EOS 的 CPU 处理瓶颈，也成为 EOS 性能的恶梦之一。 是不是很类似？目前很多所谓的区块链和币，它们都是照抄了以太坊，或者是 EOS 的智能合约实现方法。都会面临着同样的停机难题。它们配得上称为所谓区块链 2.0，3.0，4.0 吗？ 中本聪的方案 看过了以太坊、EOS 智能合约的停机方法和遇到的问题，就明白了这一切早就在聪哥的预料之中。小样，你以为聪哥不会简单地给比特币脚本添加循环语句，就实现了图灵完备？ 聪哥既要比特币脚本功能相当于图灵完备，又要避免麻烦的停机问题。 而且在比特币中，矿工收取矿工费用，是按照区块大小收矿工费的。如果有循环语句，一段指令，循环了一万次，跟只执行一次，代码大小是一样的，收取矿工费是一样的；但是耗费矿工的资源却是差别很大的，对矿工不公平。 聪哥设计的比特币脚本是有二个堆栈，可以实现递归函数调用。递归方法类似于循环语句。但是，比特币脚本实现智能合约之类的程序 ，是把所有的递归（循环）展开，以增大程序的体积为代价，消除了递归（循环），得到的脚本程序必然会停机。智能合约的编译器，在生成比特币脚本指令程序的时候，会有一个程序体积的上限。太大的程序编译时都会报错，不能生成程序。那些不能停机、无限死循环的程序，生成的程序体积必然是无穷大，编译器就会报错，编译器把不能停机的有害程序，提前给拦截下来了。要实现这一点，需要比特币的区块足够大，因为比特币脚本指令的程序也会很大的！ 由此可知，比特币的脚本系统设计，根本不是水平差，而是神来之笔！中本聪团队中，有英国的数学家 David Rees。David Rees 教授，年轻的时候，是跟着艾伦 · 图灵一起做项目的。所以中本聪团队，能够对图灵机、图灵停机等理论问题，理解这么深刻。 当然，本文中说的比特币，是指 Bitcoin SV。BTC 以及其它的分叉币，没有这个图灵完备的能力。 二、基础数学知识 先补充一些基础数学知识。 递归函数 后继函数 S(x) = x+1 非负整数集 $$ \\mathbb{N}_0={{0,1,2,3...}} $$ 加法定义 add(x,0) = x add(x,S(y)) = S( add(x,y) ) 例如，通过加法计算 2+2=4 ： add(2,2) = S( add(2,1) ) = S( S( add(2,0) ) ) add(2,0) = 2 = S( S(2) ) = S(3) = 4 三个基本函数 三个基本函数如下： $$ \\begin{align} &1. 零函数 \\quad Z(x)\\equiv0.\\ &2. 后继函数 \\quad S(x)\\equiv x+1\\ &3. 投影函数. 一个投影函数，就是选出它的某个变量。\\ &\\quad 特别地，如下面的函数，从二维平面，投影到一维的坐标轴上：\\ &\\quad P_1(x,y)\\equiv x \\quad P_2(x,y)\\equiv y \\end{align} $$ 组合运算 有两种操作，可以从旧的函数创建新的函数：组合运算和原始递归 组合，就是将一个函数的变量，用另外一个函数来替换。例如，可以用下面的方式来定义函数 f $$ f(x,y)=g(h_1(x,y),h_2(x,y)) $$ $$ 用函数 g,h_1,h_2 来定义函数 f $$ 原始递归 原始递归的典型形式如下: $$ \\begin{align} &f(x,0)=g_1(x)\\ &f(x,S(y))=h(g_2(x,y),f(x,y))\\ & 用函数 g_1,g_2 和 h 来定义 f \\end{align} $$ 例如，在加法函数中，h 就是后继函数，并且投影到第二个变量上面。 更多的原始递归 一种特殊情况的原始递归，对于某些常数 k： $$ \\begin{align} &f(0)=k\\ &f(S(y))=h(y,f(y)) \\end{align} $$ 原始递归函数 一个函数是原始递归的，如果它能够用基本的函数，以及组合运算和原始递归等操作来构造，那么这个函数就是原始递归函数。 原始递归函数是图灵可计算函数 组合和原始递归运算保留了可计算的特性，可计算是指图灵机可计算。因此： 事实. 一个原始递归函数是图灵可计算的。 例子：乘法 $$ \\begin{align} &mul(x,0)=0\\ &mul(x,S(y))=add(x,mul(x,y)) \\end{align} $$ 现在我们已经展示了加法和乘法都是原始递归的，对这些函数我们可以使用正常的算术符号表示。 例子：减法和 Monus 减法更加困难，因为结果要保留在非负整数集中。 $$ 非负整数集 \\quad \\mathbb{N}_0 $$ 因而定义一个 “尽可能地减” 的运算，叫做 monus。 $$ monus 写作 ∸ ，定义如下：\\ x ∸ y = \\left{\\begin{matrix} & x-y \\quad 如果 \\quad x\\geq y \\ & 0 \\quad 其它\\end{matrix}\\right. $$ monus 作为一个原始递归函数，要用公式表示的话，这里需要前继。 例子：前继 $$ \\begin{align} & pred(0) = 0\\ & pred(S(y)) = y\\ \\end{align} $$ 练习 下面展示 monus 是一个原始递归。 $$ \\begin{align} & monus(x,0) = x\\ & monus(x,S(y)) = prev(monus(x,y))\\ \\end{align} $$ 例子：谓词 如果一个函数，仅仅取值 0 和 1，可以看作是一种谓词（predicate）。其中 0 表示假，1 表示真。 例如，一个识别 0 的函数，它对参数０取值为１；而对 0 之外的其它值则相反，取值 1。 $$ \\begin{align} & sgn(0) = 1\\ & sgn(S(y)) = 0\\ \\end{align} $$ 即： sgn(S(y)) = sgn(y+1) = 0 0 之后的所有参数，都取值 0 例子：用例定义 $$ f(x) = \\left{\\begin{matrix} & g(x) \\quad 如果 \\quad p(x) \\ & h(x) \\quad 其它的情况 \\ \\end{matrix}\\right. $$ 可以确定，如果 g 和 h 是原始递归函数，则 f 也是原始递归函数。一种理解这点的方式，是写成代数式： $$ f(x) \\equiv g(x)p(x)+(1-p(x))h(x) $$ 练习： 请展示：如果 p(x) 和 q(x) 都是原始递归谓词，那么 $p\\land q$ (它们的“与”，或者说“并且”) 定义为真，当且仅当 p(x) 和 q(x) 都为真。 $$ p \\land q = p(x) \\times q(x) $$ 不是原始递归的函数 == 定理 == 不是所有图灵可计算的函数，都是原始递归的。 这里采用（康托尔）对角线论证法。每一个部分递归函数，都由有限字符串给出。因而，可以给它们编号 $f_1,f_2 ...$ 定义一个函数 g 如下： $$ g=f_x(x)+1 $$ 这样的 g 是一个完美的可计算函数。但是它不可能是原始递归的：它跟每一个原始递归函数都不一样。 阿克曼函数（Ackermann） 阿克曼函数是一个著名的函数，但是它不是原始递归的。阿克曼函数定义如下： $$ \\begin{align} & A(0,y) = y+1\\ & A(x,0) = A(x-1,1)\\ & A(x,y+1) = A(x-1,A(x,y)) \\end{align} $$ 下面是这个函数比较小的一些值： A(0,1) = 1+1 = 2 A(1,0) = A(0,1)=2 A(1,1) = A(0,A(1,0)) = A(0,2) =3 A(1,2) = A(0,A(1,1)) = A(0,3) =4 A(2,0) = A(1,1) = 3 A(2,1) = A(1,A(2,0))= A(1,3) = A(0,A(1,2)) = A(0,4) = 5 练习 A(2,2) A(2,2) = A(1,A(2,1)) = A(1,5) = A(0,6) = 7 有界和无界最小化 假如 q(x,y)是一些谓词。一个操作叫做有界的最小化。对于一些固定的 k： $$ f(x) = min{\\,y \\le k: q(x,y)} $$ 这里，在没有 y 的情况下，必须要处理那些 x 。使得谓词 q(x,y)为真，且不大于 k 的 y 值；取最小的那个 y 值。 实际上，有界最小化只是 case 语句的一种扩展（相当于 k-1 嵌套的 case 语句）。因而，如果 f 是从原始递归谓词开始，通过有界最小化组成的，那么 f 也是原始递归的。 无界最小化 我们定义 $$ f(x)=\\mu \\, q(x,y) $$ 意思是，f(x)是使得谓词 q(x,y)为真的最小的 y 的值。而谓词 q(x,y)为假时，f(x)=0。 $$ 定义 \\ 一个函数是 \\mu - 递归的，如果这个函数可以用基本函数、组合操作、原始递归和无界最小化等建立起来。 $$ $\\mu - 递归函数 $ 不难验证，所有这些函数，都可以由某些图灵机计算。其更深层次的结果是：每一个图灵可计算函数，都对应一些 $\\mu - 递归函数 $ 。 $$ 定理：\\, 一个函数是图灵可计算的，当且仅当它是 \\mu - 递归的 $$ 总结 一个原始递归函数，是由基本函数零、后继函数、投影函数使用 2 个操作，组合操作和原始递归，建造的。有一些图灵可计算函数却不是原始递归函数，例如阿克曼函数。 二、学习比特币脚本 Learning Script ，Craig Wright 博士 原文链接：https://medium.com/@craig_10243/learning-script-20303a5f867e 递归的基础，来自于下面的六个函数。比特币脚本指令 OP_ADD 和 OP_1ADD，分别封装了下面的第 4 和第 2 个函数。第六个函数，可以用乘法指令 OP_MUL 完成。下面只剩下 “尽可能地减” 函数 Monus、Characteristic function（特征函数）和 Identity functions（恒等函数）。后面将会介绍这些函数。 OP_ADD a b 把 a 的值，添加到 b 上面去 OP_1ADD 这个指令把 1 加到输入（变量）上去 OP_MUL a b 把 a 的值与 b 相乘，结果保存在变量 b 中 根据哥德尔（Godel）的公理，所有可以决定的数学（因而，我们可以说，任何在科学，工程和金融中使用的东西）可以使用以下六（6）个函数构造来解决。 $$ \\begin{align} &1. \\, C_A(x) \\qquad \\qquad \\qquad \\qquad \\qquad \\qquad 这表示 A 的特征函数 \\ &2. \\, S(x)=x+1 \\qquad \\qquad \\qquad \\qquad \\quad 后继函数 \\ &3. \\, U^n_i(x_i,...,x_n)=x_i, \\quad 1 \\le i\\le n. \\, 恒等函数 \\ &4. \\, x+y \\ &5. \\, x∸y \\qquad \\qquad \\qquad \\qquad \\quad \\qquad \\quad \\, Monus 函数 \\ &6. \\, x.y \\ \\end{align} $$ 这六个函数就是原始函数，通过使用递归函数，来表征可计算特性。 乘法函数： OP_MUL 覆盖了第六个函数 x.y 对比特币指令'a b OP_MUL' ，a 乘到 b 上 后继函数： 第二个函数很简单，可以用指令 OP_1ADD 覆盖。后继函数用来形成无限’格尔泽戈茨兹克‘（Grzegorczyk）超运算的层次结构，后继函数是其 0 级基础。这样就可以构建数学函数，它们包括加法，乘法，取幂，迭代幂次和函数。 加法： OP_ADD 覆盖了第四个函数。 比特币指令 ’a b OP_ADD‘，a 加到 b 上。 Monus（尽可能地减）函数 今天，我将从认真地使用 Monus 函数开始。 它计算截止减法。当我们计算它时就知道，我们将不会得到负的返回值。在创建数学函数和编译器时，它是一个非常有价值的函数。 $$ a ∸ b = \\left{\\begin{matrix} & 0 \\qquad \\quad 如果 \\quad a $$ 下面是用比特币的脚本指令，来实现 Monus 函数的例子。 值 1 值 2 指令 堆栈 ALT 堆栈 说明 A OP_PUSHDATA(x) A A 被压入堆栈 - x 可以是 1,2,4。意思是三个指令都可以 OP_IFDUP AA 如果 A 的值不为空，复制它。这是一个好的检查，来防止出错。 OP_TOALTSTACK A A A 被压入 ALT 堆栈。是从主堆栈移过来的。 B OP_PUSHDATA(x) BA A B 被压入堆栈 - x 可以是 1,2,4。 OP_IFDUP BBA A 如果 B 的值不为空，复制它。 OP_TOALTSTACK BA BA B 被压入 ALT 堆栈。 OP_LESSTHANOREQUAL 真, 如 A>=B, 假，其它 BA 如果 A 大于等于 B，将继续；或者返回 0。注意，这里形式上与指令相反了，指令是从 B 比较 A 的。 OP_IF BA 栈顶的值不为假，语句被执行。栈顶的值被移除。 OP_FROMALTSTACK B A 将输入值移到主栈顶。并从 ALT 栈顶移除。 OP_FROMALTSTACK AB 将输入值移到主栈顶。并从 ALT 栈顶移除。 OP_SUB (A-B) 返回(A-B) OP_ELSE BA 前面 if 语句的 else 部分 OP_FROMALTSTACK B A OP_FROMALTSTACK AB OP_DROP B 删除栈顶元素 A OP_DROP 删除栈顶元素 B。此时清空了主堆栈 OP_0 0 一个空的字节数组被压入堆栈，即 0 OP_ENDIF if 语句的结束标志。所有语句块必须结束，否则事务无效 上面的比特币指令，实现了下面的数学运算 结果 如果 A>=B A-B 如果 A 0 注释：OP_PUSHDATA(x)是指，x=1,2,4 时，分别是下面 3 条脚本指令 指令 输入 输出 说明 OP_PUSHDATA1 后面的一个字节 数据 后面的那个字节，表示压入堆栈中的数据长度，最多 256 个。 OP_PUSHDATA2 后面的二个字节 数据 后面的 2 个字节，表示压入堆栈中的数据长度，最多 64KB。 OP_PUSHDATA4 后面的四个字节 数据 后面的 4 个字节，表示压入堆栈中的数据长度，最多 4GB。 我已经扩展了一个比下面真正需要的更详细的脚本。 值 1 指令 堆栈 ALT 堆栈 A OP_PUSHDATA(x) A OP_IFDUP AA OP_TOALTSTACK A A B OP_PUSHDATA(x) BA A OP_IFDUP BBA A OP_TOALTSTACK BA BA OP_LESSTHANOREQUAL 真, 如 A>=B, 假，其它 BA OP_IF BA OP_FROMALTSTACK B A OP_FROMALTSTACK AB OP_SUB (A-B) OP_ELSE BA OP_FROMALTSTACK B A OP_FROMALTSTACK AB OP_DROP B OP_DROP OP_0 0 OP_ENDIF Monus 函数遵循如下的运算规律： a + (b∸a) = b + (a∸b) (a∸b) ∸ c = a ∸ (b+c) (a∸a) = 0 (0∸a) = 0 更加重要的是，我们可以保存其他函数，并调用它们以便加载到 Monus 函数中。 $$ \\begin{align} & monus(x,0)=x \\ & monus(0,y)=0 \\ & monus(s(x),s(y))= monus(x,y) \\ & 其中，s(x)表示后继函数，即 x 后面的那一个数 \\end{align} $$ 注意我们怎样将函数合并到函数中。 值 1 指令 堆栈 ALT 堆栈 说明 A OP_PUSHDATA(x) A A 被压入堆栈 - x 可以是 1,2,4。意思是三个指令都可以 OP_1ADD S(A) S(A)=A+1 OP_IFDUP S(A)S(A) 如果 S(A)的值不为空，复制它。这是一个好的检查，来防止出错。 OP_TOALTSTACK S(A) S(A) S(A)被压入 ALT 堆栈。是从主堆栈移过来的。 B OP_PUSHDATA(x) BS(A) S(A) S(A)被压入堆栈 - x 可以是 1,2,4。 OP_1ADD S(B)S(A) S(A) S(B)=B+1 OP_IFDUP S(B)S(B)S(A) S(A) 如果 S(B)的值不为空，复制它。 OP_TOALTSTACK S(B)S(A) S(B)S(A) S(B)被压入 ALT 堆栈。 OP_LESSTHANOREQUAL 真, 如 S(A)>=S(B), 假，其它 S(B)S(A) 如果 S(A)大于等于 S(B)，将继续；或者返回 0。注意，这里形式上与指令相反了，指令时从 S(B)比较 S(A)的。 OP_IF S(B)S(A) 栈顶的值不为假，语句被执行。栈顶的值被移除。 OP_FROMALTSTACK s(B) S(A) 将输入值移到主栈顶。并从 ALT 栈顶移除。 OP_FROMALTSTACK S(A)S(B) 将输入值移到主栈顶。并从 ALT 栈顶移除。 OP_SUB [S(A)-S(B)] 返回(A-B) OP_ELSE S(B)S(A) 前面 if 语句的 else 部分 OP_FROMALTSTACK S(B) S(A) OP_FROMALTSTACK S(A)S(B) OP_DROP S(B) 删除栈顶元素 OP_DROP 删除栈顶元素。此时清空了主堆栈 OP_0 0 一个空的字节数组被压入堆栈，即 0 OP_ENDIF (A-B)如果真，否则 0 if 语句的结束标志。所有语句块必须结束，否则事务无效 在这里，我们扩展了前面的结果以计算 Monus[S(x),S(y)]函数。我们当然可以使用任何函数扩展，与此进行比较。 还有更高效的方法来计算 Monus。我将把这些计算留给读者。 $$ MONUS(x,y) = \\left{\\begin{matrix} & 0 \\qquad \\qquad 如果 \\quad x \\le y \\ & flip(flip(x)+y) \\quad \\, 其它 \\ \\end{matrix}\\right. $$ 这样，MONUS(x,y)计算通常的截止减法 x ∸ y，使用了两个补充的技巧。 注释： flip(x)没有找到定义。应当是，flip(x)=-x， flip(x)+y = y-x flip(flip(x)+y) = flip(y-x) = x-y flip(x)就是这里用来扩展的函数。 定义 MSP 函数如下： $$ \\begin{align} & MSP(0,k)=0 \\ & MSP(si(x),k)= s{Bit(k,s_i(x))}(MSP(x,k)) \\ \\end{align} $$ 三、比特币：一个完全的图灵机 Bitcoin: A Total Turing Machine ，Craig Wright 博士 原文链接：https://medium.com/@craig_10243/bitcoin-a-total-turing-machine-5a6c3c68f5a7 今天我发布了一份 2014 年就开始写的一篇论文草稿 “Bitcoin: A Total Turing Machine” 。文章可以从 SSRN 网站下载。这里是一个介绍。 如果您想了解更多信息，请下载全文。 Bitcoin: A Total Turing Machine 我们证明比特币脚本语言不仅允许原始递归，而且在部署阿克曼 (Ackerman) 函数的过程中，能够简单地在比特币脚本中进行递归，我们证明了脚本系统是图灵完备的。由此，我们介绍一类新的图灵机，PTTM 或概率的完全图灵机。并注意到比特币可担任一个决策者，或完全图灵机，它使得我们找到 NIZKPoK，可以作为基于图灵机的验证器，作为非交互式证明，在外部和非关联图灵机上作为证明系统运行。比特币扩展后可以安全地提供合同，例如最适合常见物流系统的解决方案，一些优化类的问题，包括旅行推销员类问题和系统优化。这可以作为开放的或有时限的合同提供，以保证付款；并且可以解决，允许投标人用假名的问题。 一，导言 在本文中，我们展示了比特币的脚本系统，如何构成了基础，形成一种特殊类型的图灵机的，称为决策者（Sipser，1996）或者完全图灵机（Kozen，1997）。这是一类图灵机，可以在任何输入下停机。 任何程序是图灵完备的，都必须是有限的。尽管您无法决定一个程序是否会停止，但任何图灵完备的程序都将按照定义停止。任何确实会停止的程序，本质上必须具有小于无限的终止点，因为能停止的最大可能的程序，总是（本质上）小于所有程序的最大集合。我们可以简单地从中推断出，所有 UTM[A1]（通用图灵机）都在有限的时间内运行（尽管这个时间仍然无具体限制），我们无法事先告知一个程序是否实际上是可判定的。 在（Wright，2016）中，我们证明了部署在比特币中的脚本系统，是使用原始递归函数构成的（Meyer 和 Ritchie，1967）。在（Wright，2017）中，我们扩展了这个 [A2] 理论，来创建一个玩具编程语言，类似于 Brainerd 和 Landweber（1974）的 PL- {GOTO}，因此证明了脚本构造是图灵完备的（忽略了真实世界中，脚本限制和大小的约束）。这种脚本的最简单用法，是开发简单的决策树函数。我们证明这些可以使用随机组件进行合并，以随机化并公平地分配可能的输出结果。 这种系统 [A3] 的功能（和优势），可以尽量地发挥在开发可扩展的编译器中，这些编译器采用高级递归构造（例如 OP_ForLoop [1]），并 “展开” 这些构造。在这个系统中所表达的语言种类，镜像了递归的语言集。众所周知，所有的原始递归函数都是完全可计算的。在本文中，我们还演示了使用阿克曼 (Ackermann) 函数，比特币脚本可构造出阿克曼函数；比特币脚本构造包括扩展到非原始递归的完全可计算函数的能力。这表明比特币可以包含完全可计算函数，这些函数可以是简单“递归的”，也可以是原始递归的。 这些结果的后果是，比特币系统不受最初故意施加的脚本语言限制之约束。从它最初的设计构想出发，比特币脚本语言旨在实现高度复杂的功能，而不仅仅是简单的价值转移。省略循环语句是特意设计的，旨在防止拒绝服务（DOS）攻击无限循环。遗憾的是，故意删去循环语句，导致许多观察者认为比特币“不是图灵完备”，因此它无法执行的功能，将使其不适合作为通用编程系统。这个断言是不正确的。本文扩展了早期的论文（Wright，2017），证明比特币适用于所有实际目的图灵完备（事实上，正如其他一些观察家所说，“图灵完备性是理论上的，在实践中没有图灵完备”[2]）。因此，对其执行复杂功能的能力没有实际限制，例如执行智能合约和实施分布式自治公司（DACs）。在本文中，我们也研究了比特币如何满足相关概念的实现要求，如完全图灵机（TTM）和概率的完全图灵机（PTTM）。 二、完全图灵机[A4] 关于图灵机的性质和这种系统的能力，存在许多误解。图灵机可以解决一类称为λ- 可定义函数的 “有效可计算” 函数。 首先，我们将图灵完备程序定义为：任何图灵完备程序都是会停止运行的程序。虽然我们无法事先确定，任何特定程序是否在输入任意数据集时，都会停止运行。我们确实知道，一个程序在图灵完备的系统上必须能停止，如果它确实是可判定的；并且知道只有可判定的程序，在图灵完备系统上运行到完成。因此，我们知道必然有一个点，可判定程序跑到那个点会停止运行。 结果是所有可判定的程序，必须在一些时间有界的有限周期内停止。我们也可以说，没有可判定的程序，可以无限地运行在图灵完备系统上；或者，当在图灵完备系统上加载时，所有可判定程序都是有限的。由此我们可以推断出，所有图灵完备程序和函数构成了所有可能程序集的一个子集。所有可能程序的集合，既包括那些在图灵机上会停止的程序（可判定的），也包括那些无限循环运行而不终止的程序。我们可以证明，无限和不可判断的程序集不是空集。构建一个无限期地在无限磁带上运行的程序，是一个简单的练习。这样一个程序，给予无限时间运行，将永远不会停止。这里留给读者，来想象一个能够无限递归的简单程序（即永不停止）。由此，我们现在知道，所有程序集 P(N)必须大于并包含可判定程序集(N)。 任何可判定的程序都必须能停止。因而，在时间上它是有限的。因此，我们可以声明，对于任何可判定并且在图灵完备系统上运行的程序 P(T)，它需要在某个时间点能停止运行。因此，程序集合 (N) 中，是所有形式如 P(T)程序组成的程序集，对某些输入数据，它们必须在有限时间内停止运行。值得注意的是，尽管我们无法确定每个程序是否具有确定性，我们可以开发一种完全图灵机，它要求所有程序都“展开”，因此是可以判定的。 J.B.Rosser(1939)对 “有效可计算性” 进行了广泛的写作，其观点是： 显然，CC 和 RC（Church 和 Rosser 的证明）的存在，意味着一个精确定义的 “有效”。“有效方法” 在这里以一种相当特殊的方式使用，每个步骤都是精确预定的，并且肯定会以有限的步骤产生答案。 结果是，“有效”方法将按照输出顺序创建结果，这个结果是“明白无误的，决定性的或预期的效果”。并且这系统或机器本质上必须“能够产生一个结果”。 图灵（1939）定义了这种状态： 我们将使用表达式 “可计算函数” 来表示机器可计算的函数，并且让 “有效计算” 指的是直观的想法，而没有特殊识别其中任何一个定义。 正如我们上面提到的，图灵 (1939) 的论文基于这样一个前提：对于任何有效可计算的函数，必须存在一个可计算的函数。图灵表示： 有人说：如果一个函数，可以通过一些纯粹的机械过程找到它的值，那么这个函数是可以有效计算的。我们可以从字面上理解，通过纯粹的机械过程，即理解为，可以由机器执行。此开发会导向，通过有效的可计算性来识别可计算性。 结果是，尽管所有程序都不必是有限的，所有可判定的程序都可以在图灵机上停止运行。更多地，我们可以说图灵机将运行所有可判定的程序，且只运行所有可判定的程序集合。在图灵机上运行的程序集合，并且不可判定其是否会停止的程序集合，是一个空集。 比特币脚本语言 [3] 是一种类似于 Forth 的基于堆栈的语言。它有两个堆栈，称为主堆栈和备用堆栈(ALT)。脚本指令，称为“OP_CODE”，对主堆栈中的值进行操作，而备用堆栈则用作额外的数据存储。该语言是故意设计的，以排除循环结构，来避免 DOS 攻击的可能性。但是该语言有许多功能，包括访问和管理主堆栈中数值的命令（例如，OP_PICK 和 OP_ROLL）。OP_CODE 的原始列表比当前可用的更广泛（比特币 Core 开发人员禁用了几个命令）。然而比特币脚本仍然是一种简单但功能强大的语言。 Wolfram 猜测，2 状态 - 3 符号的图灵机是通用图灵机（Wolfram，2002，p709），这个在 2007 年由 Smith（2007）证实[4]。使用 Wright（2017）中的逻辑，我们可以证明，在比特币中部署的谓词逻辑系统作为脚本语言等价于 Wolfram（2,3）图灵机。通过这种见解，我们看到，比特币在功能上是一个完全图灵机的系统 [A5][CSW6]。正如 Wright（2017）所证明的，比特币的脚本语言可以递归。Wright（2017）中描述的比特币脚本语言比 Smith（2007）更具扩展性。因此，我们可以直接将 Smith（2007）的猜想映射到一个系统，此系统使用比特币内的递归系统（Wright，2017）来设计。 问题不在于是否可以构建，能运行任何想得到的可判定程序（即会停止）的计算机。当递归循环的结构被 “展开” 时，寻找最有效方法，来最小化可判定程序大小的成为问题。展开的程序大小可以按指数级增长[A7]。对于所有程序的集合，无法确定程序是否可判定并将停止运行；或者，当运行在标准图灵机上时，在现实的时间 / 空间约束下，一个系统能否运行到结束（也无法判定）。但是，完全图灵机只接受，在预先构造和设置了有界空间 / 时间参数内定义的输入。 以相同的方式，无限数量的计算可以通过有限递归程序来描述，即使该程序不包含显式重复“（Wirth，1976）。 注：比特币指令 操作码 输入 输出 说明 OP_PICK xn ... x2 x1 x0 xn ... x2 x1 x0 xn 把主栈第 n 个元素复制到栈顶 OP_ROLL xn ... x2 x1 x0 ... x2 x1 x0 xn 把主栈第 n 个元素移动到栈顶 [1] For details see Patent filing XXX. Other loop constructs include OP_WhileLoop, OP_Case, … [2] https://www.quora.com/Why-is-Bitcoin-not-Turing-complete [3] https://en.bitcoin.it/wiki/Script [4] https://www.nature.com/news/2007/071024/full/news.2007.190.html [A1]Should this be UTM? [A2]Extend this theory or this demonstration? [A3]Are you referring to the advantages of this system? [A4]This section presents a good theoretical overview on the definition of a Total Turing Machine. In my opinion the references used in this section are relevant. [A5]In my opinion, this phrase is very difficult to follow. It needs to be reformulated. Also, I suggest adding a reference or a paragraph to introduce Bitcoin Scripting language. [CSW6] [CSW6]I will get Stef / Antonetta to add a paragraph here [A7]The problem statement is not clear. Please try to use shorter phrases and to formulate the problem that should be solved clearly. 后记 如果这些文章，您看起来比较费劲，那么恭喜您，您的感觉是对的；图灵完备这些问题，本来就比较深奥，至少您进行了学习和探索！看过这些文章之后，就明白设计比特币的中本聪，他的理论水平，远在这些文章之上！ 比特币出来很多年之后，这个世界依然没有人知道，比特币的脚本是图灵完备的，除了一个人之外！ 当我第一次看到这个观点的时候，说比特币脚本是图灵完备的，我的内心是非常震撼的！这完全颠覆了我对比特币的认知。而当时，业界对这个观点，一片嘲讽；很多所谓的大佬，对比特币脚本是图灵完备的观点，嗤之以鼻。需要自己去查证。 幸运的是，我们自己可以验证这个观点。我查阅了一些资料，经过大致的推理，确信这个观点是正确的；虽然那时还不能严格地数学证明。通过这一点，我迅速过滤出一些谎言、谣言制造者，当然，现在已经没有人敢跳出来指责这个观点了。后来，又陆续有一些博士，公布了证明比特币脚本是图灵完备的方法。 毫无疑问，理解了比特币脚本是图灵完备的人，都确信，第一个提出这个观点的人，是中本聪。那就是澳洲聪哥，Craig Wright 博士。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币的图灵完备性 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-scripting/programming-in-script.html":{"url":"chapter-scripting/programming-in-script.html","title":"比特币的脚本编程","keywords":"","body":"比特币的脚本编程 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币的脚本编程 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-scripting/template.html":{"url":"chapter-scripting/template.html","title":"比特币交易模板","keywords":"","body":"比特币交易模板 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币交易模板 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-scripting/smart-contract.html":{"url":"chapter-scripting/smart-contract.html","title":"比特币智能合约","keywords":"","body":"比特币智能合约 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币智能合约 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-scripting/multisig.html":{"url":"chapter-scripting/multisig.html","title":"比特币多重签名","keywords":"","body":"比特币多重签名 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币多重签名 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-scripting/r-puzzle.html":{"url":"chapter-scripting/r-puzzle.html","title":"比特币 R-Puzzle 签名","keywords":"","body":"比特币R-Puzzle签名 R-Puzzle 是 CSW 在 2019 年 Coingeek Toronto 会议上提出的一个新的比特币签名方式。简单地说，就是 把数据的指纹（Hash值）放到区块链上，而不是放数据本身。这样更加安全。 通过使用 R-Puzzles， 有一个应用场景，就是减少使用公钥（进而得到比特币地址），而可以代之用 R-Puzzles，从而可以提高隐私性。R-Puzzles 让大家方便地证明， 你知道某个秘密（或者知识），但是不需要展示秘密本身。你的秘密和知识，还是保护得很好。R-Puzzles 使得用户，可以方便地控制自己数据的访问权限， 方便出卖数据访问权限，转移数据控制、访问权限。 其中一个重要的点是，don't use your public key publicly (不要轻易暴露你的公钥)。 https://www.youtube.com/watch?v=CqqTCsLzbEAnew Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币 R-Puzzle 签名 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-scripting/raising-op-code-limits.html":{"url":"chapter-scripting/raising-op-code-limits.html","title":"提升操作符上限","keywords":"","body":"恢复原始协议，开启无限可能 介绍 中本聪创建的原始比特币客户端（0.1.0 版本），其脚本引擎与我们今天的脚本引擎存在显著差异。最初的脚本支持任意大小的整数进行数学运算（密码学），其大小等方面也没有限制。此后，在比特币发展的某一时间点，才开始实施每脚本 201 个操作码的限制。 比特币是用一种丰富的脚本语言创建的。如果它的用途仅限于两个私钥之间的直接支付，就算包括多重签名交易，那也根本不需要脚本语言。这些功能完全可以简单地通过硬编码实现，代码还能大大地简化了。但比特币是建立在一种具有丰富指令集的脚本语言之上的，这表明它始终是一个用更复杂的规则集去管理资金转移的基础平台。将比特币恢复到最初的预定设计（当然我们也要修复其中的bug）本身就是一个原因。 8年过去了，现在人们对这些操作码的边界例子有了更好的理解。8年也给了人们很多时间来思考如何使用这些操作码。此外，它们当初是在仓促的情况下被迫禁用的。BSV 社区现在已经有了充裕的时间来彻底解决这些问题。 比特币 SV 执行团队建议去除或者提高每个脚本 201 个操作码的上限，引发了人们对黑客攻击的担忧，此类攻击将引起网络超载。 在这篇文章中，我将量化风险并解释相应的缓解措施，通过这些措施，我们将极有可能在不颠覆传统的情况下完成这项工作。 去除操作码限制的原因 撇开大脚本可能存在的问题，例如展开的循环和复杂的算法结构等，我先来探讨几个问题。 比特币 SV 的愿景是恢复原始比特币协议并将其锁定（安全修复及为满足扩展目标所必需的更改情况除外）。在我们看来，“协议”通常由以下几点构成： 白皮书 原始代码 中本聪通过修复漏洞设置的明显例子 他此后对协议的一些思考 我个人相信这个目标的原因（非技术论证）或许是：中本聪还未隐退前，比特币尚处于起步阶段。这个系统依赖于用户规模，当用户数量达到一定规模时，系统的许多属性才开始可以实现。即使中本聪在的时候，也已经开始施加限制（虽然后来用户达到一定规模后，他曾表示要去除限制），并且这种趋势在他离开后仍在继续，比特币出现了越来越多的分叉，和最初的版本越来越不同。这种现象在费用替代方案 (Replace By Fee, 简称 RBF) 和隔离见证 (SegWit) 出现时达到了巅峰。而这也是压死骆驼的最后一根稻草，并最终使比特币以比特币现金的形式重生。 如今比特币 Core \u001b开发组终于摆脱了链上扩容派的枷锁，我们也将有望迎来关键时刻。这也是史上第一次，比特币终于有望实现其最初的目标。问题是，我们尚不知道目标是什么。比特币是基于博弈论、经济激励、密码学等之间复杂作用的系统。我们知道中本聪认为我们不需要设定任何人为限制，他计划的核心是给矿工提供极富吸引力、以利润为基础的激励措施来解决这个问题。考虑到当下比特币对世界产生的影响及其所代表的巨大变革潜力，我个人认为将协议恢复到它应有的方式并让它沉淀几年是值得的 – 让比特币成为它至今还未有机会成为的样子。只有这样，我们才有机会看到比特币所代表的技术和社会学相互作用的结果以及其可借鉴的东西。这是我们欠中本聪的。 比特币脚本的存在以及它最初没有设限的事实，强有力地说明了中本聪设想这种语言的使用方式是我们尚未构想到的。 现在我们重新回到有趣的技术细节上。 限制脚本大小的因素 在当前的应用中，实际上的确有一些限制与脚本大小相关： 每个脚本 201 个操作码 每个脚本 10000 字节 每笔交易 20000 签名操作(sigops) 每 MB 20000 签名操作（但 3 和 4 普遍被认为完全破坏了技术应用） 每笔交易 1MB 第 2 点非常重要，因为人们通常有一个误解，即解除每个脚本 201 个操作码的限制等同于每个脚本大小不受限制。 实际并非如此，因为 10000 字节的限制仍发挥作用。 另外需要注意的是，此限制同时将操作码和数据计算在内。 限制脚本大小的另一重要因素，一开始就已构建到比特币中：即交易费用。 100 * 10 = 10 * 100 就提高每个脚本操作码上限而言，人们通常担忧的问题是计算成本。 运行 201 个操作代码的脚本所耗费的算力不是比运行 10000 个操作代码的脚本少的多吗？答案是肯定的，前者消耗的算力必然要少（虽然我们即将看到的只是轻微差别），但对矿工而言，前者相对更有利可图。 从矿工的角度来看，100 次每次 10 satoshis 和 10 次每次 100satoshis 的收益相当。（注： 这个观点很简单，因为它没有考虑不同操作码间计算成本的差异。但这是一个很好的开始，让我们来看下这种差异会带来怎样的改变。 签名操作及其重要性 请注意上述提到的限制之一是每兆字节签名操作的最大值。 签名操作是 OP_CHECKSIG 和 OP_CHECKMULTISIG 操作码（及其验证变体）调用的 ECDSA 签名验证操作的通用术语。 与其他操作码相比，这些操作码的处理成本要比前者高出几个数量级。 直到最近，大多数客户端仍采用单线程处理。 那么攻击者是如何利用这一情况，来攻击比特币呢？ 在衡量一个变更的潜在影响时，仅比较正常使用场景和变更后攻击场景的影响是不够的。将变更前的攻击场景与变更后的攻击场景进行比较，可以获取更多信息。 增加签名操作 只为乐趣不为利益 为了分析不同的攻击场景，我将使用一个称为 sigop（签名操作）密度的度量概念，可以衡量你能打包到固定字节数的签名操作数量。在当前费用模型下，因为固定字节数与交易费用成比例，所以这个方式很有用。 因此，它实际上是衡量算力负荷的交易费用的一个指标。 因为签名操作目前算力成本非常高，所以创建一个包含尽可能多的签名操作的区块，使矿工花费很长时间来验证一个区块的方法是可行的。此外，可行的另一部分原因是因为比特币客户端软件中的签名验证代码效率低。发起此攻击需要尽可能增加块的签名操作数量，也就意味着用许多非标准交易来代替标准交易。因此除非有矿工愿意接受任何类型的交易，否则攻击者可能不得不自己挖矿。 最严重的攻击——10 年来从未有人发起 接下来我将提出一些简化此检测的假设。这些假设对最终结果的影响很小，但没有这些假设前提，问题解释就会变得很复杂： 我将假设我们只讨论一个脚本而不是两个单独的脚本（scriptSig 和 scriptPubKey） 在计算数据大小时，我将忽略交易的其余部分，并且只考虑脚本本身的字节（这样做实际上会使数字结果看起来稍微差一点，所以这是对我目前项目的偏见） 调用一个 sigop 需要 3 个操作码和脚本中大约 107 个字节，并把两个数据（签名和公钥）和 OP_CHECKSIG 本身一起压栈。 \\ = 1 + 71 字节 (平均) \\ = 1 + 33 字节 CHECKSIG = 1 字节 总计 = 107 字节 (平均) 有几种方法可以实现更高的签名操作密度。 只压栈一个签名和公钥，然后使用 OP_DUP2 为每个新签名操作重新复制。 然而，如果使用签名缓存，这个方法就很容易失效，其降低了每个签名操作缓存查找的成本。 压栈多个签名但重用相同的公钥。 这一操作需要 5 个操作码而非原先的 3 个，但节省了大约 32 个字节。 脚本如下：\\ \\ DUP TOALTSTACK CHECKSIG \\ FROMALTSTACK DUP TOALTSTACK CHECKSIG … 当存在 201 个操作码的限制情况时，仅仅反复重复 \\ \\ CHECKSIG 不能实现更大的签名操作密度。 在达到上限之前，大约可以加入 67 个签名操作，消耗大约 7169 个字节。 新近最严重的攻击 每个脚本设有 201 个操作码限制，我们现在可以自由地使用第二种替代方法，因为我们不需要再担心操作码数量过多，只需担心字节数。 在这种情况下，每个操作大约使用 76 字节。在相同的 7169 字节中，你可以容纳 94 个签名操作。 这相当于最大的签名操作密度增加到（94/67 – 1）* 100％= 40％ 有趣的是，删除 10000 字节限制对此签名操作密度几乎没有影响。只需要额外的 34 个字节就可以设置，这将使这次攻击的效率降低 1％。 总而言之，在构建和挖掘完整攻击区块的最严重的情况下，我们的计算成本比之前的最大值高了 40％。这是不容小觑的事情，但对一个应能抗御峰值负荷的系统来说，这也不是世界末日。 防御黑客攻击手段 如果比特币的整个生命周期中，特别是在比特币现金面对大量反对者的一年里，都没有发生这种攻击，我们是否仍有必要担心这个问题，对此我们是存疑的。但是，我们需要为此做好准备，了解将产生的影响，以及可以缓解这种情况的措施。 第一点显而易见：了解最高容量。正如我之前有关区块大小的文章中所解释的那样，比特币 SV 正在启动我们自己的 Gigablock Testnet 版本（实际上不止一个），我们将对这些客户端（和其他客户端）进行压力测试。其中将包括模拟此攻击，并且攻击脚本的工作已在进行中。我们将为矿工提供容量信息，也将为我们的发展重点提供信息。此变化的影响可能仅限于将块验证时间延长最多 40％，并且仅限于完整（昂贵）攻击情形。 如果结果显示提高每个脚本的操作码上限可能会导致攻击的发生，那么我们当然会重新审视这个问题。对矿工来说，目前已经存在一种缓解此情况的简单工具，即选择块大小的硬上限，从而产生可接受的验证时间。 另一个防御性措施是并行块验证（因此如若有黑客闯入，你可以切换到更容易验证的块）- 我们将根据矿工对该功能的需求优先考虑。 真正的缓解措施是提高签名验证的速度，这是我们路线图的首要任务之一。 最后的思考：冒险还是避险？ 如果比特币容量不断增加，我们只能接受其网络、存储和计算基础设施的负载量不断加大，别无他选。我们面对的挑战不是避免负载量的增加，而是应采用专业的企业方法进行容量管理和测试，以便网络安全运行。这是委托 SV 项目的矿工们希望实现的，也正是我们承诺要做的。额外的签名操作负载是交易量增长的自然结果，随着效率的提高就能见到问题解决的成效。这些也是比特币 SV 团队早期将关注的短期实现目标。在我之前的帖子中，我提到了与加速签名验证直接相关的路线图中的几个项目，但效率增益存在自然限制，之后我们必须转向水平扩展策略。 最后，要指出的是这些限制不是由 SV 团队决定，而是由矿工选择的，他们使用其知识和准确的运行指标来为他们的决策提供信息。我们的工作是提供这些指标并改进矿工使用的工具，以发挥他们优化采矿过程的能力。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 提升操作符上限 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-scripting/sunsetting-p2sh.html":{"url":"chapter-scripting/sunsetting-p2sh.html","title":"移除 P2SH","keywords":"","body":"移除 P2SH 为了使比特币尽可能接近原始的比特币协议，我们将计划废弃 P2SH。这不是一个简单的任务，需要分几个阶段进行。我们需要先开启新的非标准脚本供矿工接受，当停止新的操作符添加时，我们将接受旧的 P2SH 交易，但不允许再创建新的 P2SH 交易。 比特币的问题 比特币发展至今，受感染的两个最严重的癌症(概念)是: 软分叉（Softfork） 支付到脚本哈希 (P2SH) 前者在比特币上再也见不到了，硬分叉才是比特币的正确升级方式，这条唯一的出路早已在原始的比特币白皮书中阐明。软分叉的概念是对比特币最阴险的攻击。幸运的是现在它已不再有效。所有关于比特币的共识规则都将使用唯一有效的方式来处理: PoW 和硬分叉。 P2SH 的问题 P2SH 指的是 Pay-to-Script-Hash，用户不是像 P2PKH 把币发到一个地址上，使用对应的私钥即可解锁。P2SH 则需要系统之外的一个 Redeem Script 续回脚本，通过运行它来解锁该脚本锁定的币。不幸的是，P2SH 这个操作符的增加，让脚本的处理能力可能出现失控的情况，因为这依赖于外部的脚本执行，而系统无法确保该脚本是锁定时所用的而未被篡改。事实上，可以精心构造两个作用不同但 hash 一致的脚本，毕竟在续回的时候只需要与 Redeem Script 的哈希值相同即可。 而比特币的 Layer 2 应该是建立在可验证的脚本之上。 解决方案 不幸的是，我们不能简单地直接剔除 P2SH。因为它已经在许多应用中都有使用。但我们将宣布一个计划，以让它自然淘汰， 在将来的某个时间点后，我们将不再允许标准脚本和非标准脚本的区分成为继续使用 P2SH 的理由。要做到这一点，我们将允许脚本运行，并停止不包含在非标准脚本的有缺陷的概念。 使用 P2SH 的一个理由是有一个滑动性的共识规则。它有助于调整 \"软分叉\" 的策略 (如我们在 Bitcoin Core 中所看到的)，并有隐藏交易的规则。这不是比特币最初的构想。比特币系统没有匿名，但有化名，这里指的是隐私。比特币在保护隐私的同时，交易还必须可用并可追踪。 一些开发人员喜欢说为了改变和实验，作出改变总是好的。如果他们是正确的，我们可以试着改变一下轮子的形状。数千年来，它一直是圆形的，按照为了改变而改变的相同逻辑，可以尝试一下改成四方形的，或者三角形的。但事实是，要改变一个金融系统，比如比特币，需要提议者来证明这个增加的提议有多好，而不是为了改变而改变。因为货币需要稳定，所有这些画蛇添足的改变将使比特币失去了价值，这也是为什么我们将把它恢复到最初的状态。 所以，是时候开始使用比特币脚本了。它是比特币唯一的第二层。在网络协议中，数据封装在层里面。这就是，一层在另一层里面，而不是在外部系统里。在这方面，比特币类似于 OSI 模型中的 HTTP 第四层。 在互联网的 OSI 模型中，HTTP 是一个更高的层，因为它是封装的，它里面还包含其他内容。像侧链、Plasma 或闪电网络之类，它们是独立的系统；不可能成为第二层，因为没有被封装在脚本中。 在比特币模型中，我们有以下层级结构: L0 = 物理层 L1 = 数据链 (网络，例如 IP 和互联网或其他) L2 = 网络--P2P 网络和用户与节点之间的交易交换 L3 = 比特币交易 L4 = 脚本 L5 有待创造的更多东西。这里对开发者是完全开放的。 在任何系统中，都没有无许可的概念。比特币允许你创造任何你喜欢的东西 -- 包括丝绸之路 2.0 版本和儿童色情交易所 -- 这种想法与比特币的设计初衷是对立的，比特币的初衷是坚实的货币。从现在起，一切都结束了。我们在互联网上看到的不是一个没有许可框架的开发，而是在法律和系统规则范围内发展的无限潜力。 就像你不能选择 HTTP 数据包和数据报的格式一样，你也不能在比特币中添加和更改操作符 OP_CODE。你可以在这个系统中发挥你的才智，只要你的操作不会破坏影响到别人。 欢迎来到 Metanet 的世界。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 移除 P2SH |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-scripting/danger-of-segwit.html":{"url":"chapter-scripting/danger-of-segwit.html","title":"隔离见证的风险","keywords":"","body":"隔离见证的风险 Bitcoin Core 开发团队提出的将签名数据（见证）与交易数据隔离开来的 Segwit 扩容解决方案，是导致 BCH 以及后来的 BSV 出来的原因之一。尽管 BSV 并没有被隔离见证感染，但作为上一节的补充，在此说明一下 BTC 引入隔离见证的风险。 隔离见证有许多风险，其中有一种风险需要特别注意：隔离见证为恶意串通和挖矿巨头打开了方便之门，比特币网络可能因此遭到破坏。 当前比特币协议的保护作用 要理解隔离见证是如何打开这扇门的，让我们来回顾一下比特币协议的格式。在比特币的工作方式下，一个成功获得全网 51% 以上算力的挖矿巨头可以双重支付现有交易，以此发动攻击。其工作方式如下: “即使一个坏人制服了网络, 他也不会立刻变得富有。他能做的就是收回自己花出去的钱，就像支票退票一样。要想利用它，他必须从商人那里买东西，等到发货，然后把网络制服，把他的钱拿回来。我不认为他能通过那种盗刷的方式，赚到比创造比特币更多的钱。有了一个那么大的僵尸农场，他能创造比其他人加起来还多的比特币。”--中本聪的邮件 这种形式的攻击将使矿工的收益受损。除非这个矿工拥有全网 51% 以上的算力，否则此类攻击是不可能的，而且考虑到比特币的开采成本，此类攻击也是极其昂贵的。这也会危及到该矿工的现有收入模式。 在比特币中，如果一家挖矿巨头成功将一笔双重支付交易引入到某个区块，那它就能取得很小的收益。这意味着，一个邪恶的矿工能够引入一项交易，而这项交易本身就是为了回滚第一笔支付而产生的。但对于小额交易 (比如少于几千美元的交易) 回滚是没有任何经济动机的。 此外，这种形式的攻击只有在精心安排的情况下才可行。该矿工必须在交易（上面例子中是商品出售）完成后但交易尚未被集成到某个区块之前实施攻击。更高金额（更昂贵）的交易自然是最有利可图的攻击目标，但它们很可能早被整合到某个位于合适深度的区块，回滚时间已经过去了。比如说，许多司法管辖区的法律都规定，进行不动产转让时，买方有权在规定时间内撤销交易，而这一规定时间将超过任何可撤销的区块高度。因此，当前的比特币协议提供了经济上的抑制措施，以阻止和防范双重支付攻击，尤其针对较大交易金额的双重支付攻击。 隔离见证为挖矿巨头的形成创造了激励机制 如果得到实施，隔离见证将会使情况变得更糟，它为促使挖矿巨头形成的经济激励模式打开了大门。按照目前比特币网络的运作，矿工们没有动力去形成巨头。矿池不是一个巨头而是一家公司。但是隔离见证使比特币发生了根本变化：“AnyOneCanSpend”地址，它实质上是一个空白的交易签名。隔离见证使用 “AnyOneCanSpend” 地址来验证交易并将交易记录到区块中，即使发送方和接收方的签名数据被分开。顾名思义，“AnyOneCanSpend”输出通常允许任何矿工使用该交易的相关资金。因此，隔离见证将引入新的规则来解释“AnyOneCanSpend”。这也就意味着，矿工不能利用该输出地址来不当使用隔离见证交易的相关资金。 但有了 “AnyOneCanSpend” 地址，只有所有参与者都同意它是安全的，系统才会是安全的。隔离见证的支持者认为，一旦协议改动生效，所有矿工都会同意好好玩，永不偷钱，而且资金会被安全地锁住。但他们想法的主要缺陷在于，它忽略了邪恶矿工会有经济动机在隔离见证生效后采取以下措施： 组成一个巨头来接管这个网络。 关掉隔离见证，恢复到当前的比特币协议。 利用 “AnyoneCanSpend” 地址立即窃取他们开采区块中与所有隔离见证交易相关的资金。 通过使用 “AnyOneCanSpend” 地址，隔离见证从此打开了一扇门，让腐败矿工能够开采区块来破坏交易，并反而将其重新定向到矿工自己的地址。只要隔离见证还在使用，这种非法攻击的价值都会日益增长。随着时间推移，越多的人使用比特币，越多隔离见证交易被加在区块链上; 而实行了隔离见证的比特币锁定的资金越多，这种形式的巨头攻击就变得越有利可图。一个叛变矿工可以获得尚未从隔离见证重定向到传统比特币地址的历史资金。因此，隔离见证系统运行的时间越长，就越有可能形成一个巨头来窃取资金。 在隔离见证的情况下，矿工不太可能形成一个巨头来恢复个人的双重支付交易——即使是一笔大单交易。反而所有隔离见证交易的总和（至少在巨头成员开采的区块）提供了一个足够大的值得掠夺的宝箱。如果 51% 为隔离见证发信号的矿工秘密支持协议的巨头化，那么交易被窃取只是时间问题。窃取方式可能如下： 矿工发出了隔离见证的信号。 一组联合哈希率超过当前网络算力 50% 的矿池和公司形成了一个巨头。 随后，该巨头组织停止发出隔离见证信号，并将比特币网络返回到之前的比特币协议。 如果有足够数量的比特币是使用隔离见证进行交易的，巨头将从隔离见证切换到使用原始协议处理所有交易。巨头成员随后可以立即利用隔离见证的 “AnyOneCanSpend” 地址从他们开采的区块（特别是高价值的区块）的交易中窃取资金。为了激励矿工加入该组织，该组织可能同意每个成员按某种比例（例如，按照每个成员的哈希率）将从被攻击区块盗来的资金分配给整个集团。任何一个矿工或矿池，不需要拥有 51% 的哈希率就可以参与这场窃取。 这只是隔离见证可能引起的数百种被攻击情景中的一种。在隔离见证的系统下，攻击比特币网络的行为可能变得奏效，因为网络的经济状况可能被改变；因为这个时候非法攻击不再是被阻拦的，而是被鼓励的。这也正是被比特币核心研发者和其他隔离见证支持者最容易忽略的一方面。 在比特币发展早期已出现过好几宗大额的个人交易。如上所述并不是任何个人交易对网络构成主要风险，而是在任何一个区块内的总交易水平。随着比特币的扩大，一个具有很高价值的区块的出现正在变的越来越可能。从维萨卡和万事达卡转账速率来看，当比特币变成互联网主要货币的时候，在转账高峰期，短时间内集合的转账（比如 1-2 小时）总金额可能超过 1000 亿美元。在这种层面上，即使最诚实的矿工也可能会受激励逃离标准协议的控制。 上面的提到的隔离见证的消极结果并没有被研究过，也没有在比特币的社群中广泛的讨论过。相反的，隔离见证的支持者淡化其系统的动机，经济和博弈论，并不断的暗示密码学算法才是比特币安全的根本。 博弈论解释人们为什么选择利己而非社会合作 博弈论可以生动的来解释这个问题。我们可以把现行的比特币安全模式比做是一个猎鹿赛局游戏。但是隔离见证将现有的模型转换成了一个囚徒困境模型，在这个模型里面，不同组的矿工们要么是最诚实的矿机，要么是叛变的矿机。 在博弈论中，囚徒困境模型解释了为什么即使是在对于双方最有利的条件下，两个人也选择不合作。两个朋友或伙伴被指控实施了犯罪并且被分别关押，所以没有办法和对方交流。检察官也没有足够的证据去指控两个罪犯，所以给囚犯提供了两个选择，要么选择指控对方（背叛对方），要么选择沉默来帮助对方。每个囚犯的选择会决定最终的结果（在下面四个象限中列出）：自由（如果两个囚徒都选择沉默来帮助对方）或者被拘禁不同的时间（最坏的情况下各自都背叛了对方）。通常情况下，囚犯会寻求对自己有利的情况，也就是背叛对方，如果双方都选择背叛对方，那么两个人会被判罚更长时间的监禁（相比于都帮助对方）。博弈论告诉我们，个人的利益权衡通常控制着人们最后的决定，即使最终会导致更糟糕的结局。这个例子对现实世界提供了一个很好的例子，譬如比特币网络，因为在比特币网络里需要个体的相互合作。 在囚徒困境模型里，如果双方选择背叛对方，那么游戏再一次变成了猎鹿赛局。猎鹿赛局也要求人们在个人利益和社会合作中做出选择。在猎鹿赛局中，每个人会被要求去猎杀一只驯鹿或者野兔，在做决定的时候他们并不知道对方的选择。猎杀一只驯鹿需要两个人的配合；猎杀一只兔子则一个人就可以完成，只是比驯鹿有更小的价值。合作猎杀驯鹿会让双方利益最大化（就像囚徒困境中帮助对方会使双方都受益一样）。 图一：驯鹿还是野兔？ Chris Jensen 和 Greg Riestenberg 绘 当博弈论被应用到隔离见证下的比特币网络时，它有被歪曲的风险。相对于遵从积极的社会协作去让比特币网络中的每个人受益，挖矿巨头会等待足够大的目标的出现，然后将其捕获。一旦一个区块奖励被发现包含由隔离见证提供的适当大额的支付，无论是部分还是全部区块, 巨头会行动。 在这个时候，拥有全网哈希算力 51% 以上的巨头将恢复到原来的比特币网络算法，同时将隔离见证下未偿付的付款和上一区块中的付款转移到 AnyoneCanSpend 地址，然后马上转移到一个他们自己可以使用的账户中。当向隔离见证地址付款总量增加时，矿工从网络中叛变的几率也会增加。在博弈论中，这会导致 纳什均衡 叛变。 当比特币在默认协议下被更广泛的使用，比特币会变的越来越安全而且更不容易被攻击（这是比特币默认协议的一个重要特点）。隔离见证向相反的方向根本地改变了这个协议。也就是比特币系统会变的越来越脆弱。比如，在隔离见证实施的第一周有价值一亿的转账，在实施的第一个月有价值十亿的转账，系统作弊的动机不取决于单一的某一笔或者某一区块的转账金额，而是在系统内未偿付款的总额。 从这点可以看出，每一笔包含了隔离见证而且没有和一个标准的比特币地址相关联的转账都会逐渐增加系统被攻击的可能性。系统越大，越有可能出错。这恰恰是与现行比特币协议完全相反的，现行的协议是比特币的生态系统和哈希率增长越大（在比特币原有协议下），系统就越安全。在比特币的早期，个人矿工是有可能计划并实施一个双花袭击。但是当系统变得越来越强大和复杂，实施双花袭击会变得越来越难并无利可图。但如果隔离见证被实施，系统运行的时间越长，被使用得越多, 矿工就会有更加强烈的动机和意愿去攻击和破坏系统。所以隔离见证在安全方面会和现行比特币网络机制产生完全相反的效果。 引进新参与者的风险 现行隔离见证一个最大的缺点就是假设现在的矿工会一直保持现在好的动机。但是这个假设忽略了新的参与者的加入。上述在隔离见证下有可能出现的叛逃策略已很有可能吸引新的有不良动机矿工的参与。他们可能是反对隔离见证的团体，或者是从来没有挖到比特币但是寻求快速短周期利润的团体。为了寻求短周期的利润，一些人会以折扣的价格进入市场。 比特币目前已知最大威胁来自拥有涵盖系统 51% 计算量的矿工，这些矿工有能力参与每一笔转账或者参与到双重消费袭击。但是引入隔离见证会有毁灭性的风险，系统总额和所包含的所有价值都有可能被摧毁。对于矿工在隔离见证的体系中不会窃取系统资金的假设忽略了新参与者的加入。参与者会有越来越强烈从系统里盗取资金的意愿。这些新参与者的意愿和后期内系统剩余价值的提升都让系统在后期遭受攻击。 隔离见证原来是在系统拥有 95% 哈希率支持的基础上引入的。这是建立在一旦隔离见证被激活，新的参与者会支持现行规则的基础上。结局是假设所有的转账都是安全的. 但是这个假设是错误的. 矿池和矿工们会不定期更换，就像在其它商业领域，行业参与者的转变是一样的。 在现行的比特币协议中，系统的自然经济属性会逐渐增强系统的安全性。但是在隔离见证协议下，政府和其他政府相关参与者会因为攻击比特币从中获利。怀有敌意政府秘密建立的这些组织对于比特币构成了巨大的威胁。这些组织并不需要通过集中的方式即时 51% 的控制。 相反，这些机构中的领先者可以参与到帮助最弱参与者的策略中。这个策略包括找到之前盈利但是由于衰退，技术进步或者能源价格上升，现阶段在市场上经营困难的矿池。加入这些领先机构会给予弱势的参与者一个优惠的条件离开网络。一个最终的攻击可以是短期收益的，同时让矿工意识到正在进行的竞争是非常困难的。 新的经营者会获得现有的市场份额，同时可以以折扣的价格获得系统的使用权，在这之后，系统将不再运行隔离见证。随着隔离见证的缺点被移除，新的参与者会更加有竞争优势，更低的市场进入成本和更具颠覆性的对于系统的控制。 这些巨头对于比特币系统攻击的描述在你看来可能过于危言耸听，但是这是隔离见证机制背后真实存在的隐患。或许在不久的将来，我们就会看到这场悲剧的上演。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 隔离见证的风险 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-network/":{"url":"chapter-network/","title":"比特币网络","keywords":"","body":"比特币网络 本章将介绍比特币的网络。比特币的去中心化网络其实有两层含义，第一层是矿工之间自由竞争的节点网络，另一层是用户之间直接点对点发送的交易网络。它们浑然一体，通过每一笔交易而关联起来，并随着矿工的打包入块，成为 Metanet 有迹可循的点点滴滴。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币网络 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-network/overlayed-bitcoin-network.html":{"url":"chapter-network/overlayed-bitcoin-network.html","title":"双重的比特币网络","keywords":"","body":"双重的比特币网络 点对点网络是人们在没有中间人的情况下直接向彼此发送信息的时候。 比特币中有两层点对点网络。最著名的是矿工之间的点对点网络。但最重要的是用户之间的点对点网络。而这两层网络实际上是浑然一体，联系紧密。如果理解这一点，理解比特币的潜在能力会容易得多。 矿工 矿工们组成了一个点对点网络，它们互相传输区块和交易信息。它们被鼓励尽可能快地将每个区块传送给所有其它矿工，以便其它他矿工在他们的区块上建造，他们从而获得报酬。 为了做到这一点，每个矿工都因激励而彼此连接紧密。在理想情况下，这将形成一个完全图，每个矿工都与其他矿工相连。而实际上，矿工受连接能力限制，会与大多数其他矿工连接，但不是全部，这形成了一个近完全图(Near Completed Graph)。 矿工网络用于解决双重支出问题。比特币白皮书中描述了这一点：“在本文中，我们提出了使用对等分布式时间戳服务器生成双重花费问题的解决方案，以生成交易时间顺序的计算证明。” 矿工是点对点分布式时间戳服务器，它们与普通用户不同。 用户 用户具有不同的对等网络。用户不一定直接与矿工联系，但是用户确实需要相互联系才能进行交易。 用户与他们进行交易的其他用户相关联。用户不会被激励连接到所有其他用户。只有受到激励的用户与他们想要交易的其他用户建立联系。 这些用户形成一个网状的网络，就像现实的经济交易一样。 与现实一样，一个用户并不与其它的大多数其他用户直接关联，他们仅直接连接到他们关心的用户。 白皮书描述了这样的用户：“可以在不运行完整网络节点的情况下验证付款。用户只需要保留最长工作证明链的块头的副本，他可以通过查询网络节点获得它，直到他确信他拥有最长的链，并获得将交易链接到区块的 Merkle 路径和时间戳。“ 比特币白皮书中明确区分了运行节点的矿工和 “不需要运行完整网络节点” 的用户，SPV 是其中的关键。 结论 白皮书的标题是“比特币：点对点的电子现金系统”。标题中的点对点网络是用户，而不是矿工。这是因为数字现金是点对点交易的。 根据白皮书，“我们需要的是一种基于加密证明而不是信任的电子支付系统，允许任何两个愿意的各方直接相互交易，而无需受信任的第三方。”在比特币中，两个人可以直接点对点交易，无需可信任的第三方。交易是即时的，仅受光速的物理限制。当用户之间没有完全信任彼此时，他们可以查询矿工（“网络节点”）以确认交易的有效性。用户对等网络比矿工对等网络更重要，因为用户是矿工存在的根基，矿工为用户提供服务并获取收益，从而能让这整个系统持续下去。 中本聪最初的比特币源代码提供了 IP2IP 的功能，这是一种点对点交易的方法。但该代码因当时实现不完整(有可能被中间人攻击)而被 Core 禁用了。现在，我们可以通过 Paymail 再次实现比特币的点对点交易功能。我们建议所有钱包都采用这种方法。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 双重的比特币网络 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-network/ip2ip.html":{"url":"chapter-network/ip2ip.html","title":"IP2IP","keywords":"","body":"IP2IP 交易 比特币的交换可以直接从一方到另一方而无需中介。一个由中央银行背书的货币单位，再由其向商业银行，万事达卡和Visa卡等第三方发行的体系并不是现金的目的所在，现金的目的是建立一种允许个人之间直接交换的、稳定的硬通货货币体系。在比特币的第一个版本中，有一个相当糟糕的IP到IP的协议能让用户交换密钥。当时实现的版本并不安全，允许中间人攻击。这是可以轻松修复的东西，现在有很多协议可以解决这个问题。 双方进行交易时的主要关注点是： “在计算上不可逆转的交易将保护卖方免受欺诈”[1] 这就是点对点（peer to peer）的意思。矿工是一个结算层。在银行系统中，即使资金清算到你的账户，也可能无法结算。商家通过信用卡系统收到的任何款项可能需要90天才能清算。银行允许你获得资金，但银行也可以追溯性对交易进行回撤，从而使账户逾期并要求支付利息和罚金。 这二者之间的差异使得比特币成为了点对点的。并非每个人都需要成为矿工，但个人之间可以直接相互交易，并快速验证挖矿节点是否已收到交易。 P2P 的理解其实很简单，点对点，这里的点是指交易的双方，而不是交易的一方与矿工网络。 正确理解的点对点交易，就是线下我拿着一张 10 元的纸币，递给小贩，小贩给我一个煎饼果子；问题在于今天为止我们在链上使用比特币的方式还没有做到这一点，现实是我拿着 10 元存进银行，由银行把我这 10 元划到小贩的账户，（由付款方单方生成交易 - 付款方签名 - 广播到网络）- 小贩打开客户端一看，喔钱到了，唯一的区别是这里的 “银行” 被去中心化了，“银行” 也没有信用派生去产生利息。 革命不彻底。 点对点的特性一方面满足比特币白皮书中第十节所提出新隐私模型，将身份与交易和公众相互分离；另一方面，这个是我个人的认知，是为了实现一笔交易的可协商性。很不幸，交易的可协商性的特性，被当成了一个问题叫做可锻性 malleability，被 Core 和 ABC 两家联手堵住了。 交易的可协商性讲白了，就是交易的双方（多方）可以先讨价还价，最后确定合同和支付。讨价还价的过程是不上链的，交易双方建立渠道，直接相互发送没有完全成型的交易并修改讨论内容，只有确定之后，才广播到链上。 比特币的交易数据结构中有两个关键的特性，一个叫 nSequence，一个叫 nLocktime，第一个功能是序号，第二个功能叫锁定时间。序号使得一个交易可有很多个版本，序号从 000001 一直上升至 FFFFFF，针对同一组输入，序号大的交易会覆盖序号小的交易；锁定时间使得一笔交易在达到指定时间之前不会被矿工打包。Blockstream 很黑，一方面把这两个特性彻底堵住，另外一方面在自己做的 Grin 上发扬光大，他们也一定见到了点对点交易的未来前景。 我们把相关的连接放在这里，请大家串起来看。 https://medium.com/@craig_10243/nSequence-and-p2p-exchange-9e4cbf32124c https://medium.com/@craig_10243/p2p-and-returning-ip-and-domain-based-transfers-9943d32bd38e https://medium.com/@craig_10243/bitcoin-as-the-base-layer-cff28c5dab9c https://medium.com/@craig_10243/ipv6-with-cga-and-bitcoin-a761d0185d5d https://medium.com/@craig_10243/the-secure-bitcoin-internet-2f589d81890f * https://en.bitcoin.it/wiki/Contract#Example_7:Rapidly-adjusted.28micro.29payments_to_a_pre-determined_party https://en.bitcoin.it/wiki/OP_CHECKSIG#How_it_works 注意，交易协商的实现方式可以多种多样，这里仅以视频网站举个小小的例子。Craig 博士说了他接下来几周的 Medium 博客将会重点讲述。 比如说 Keyport 这个应用，你呢是一个看视频的，我是个视频服务商，我们约定，按看视频的时长付费，每分钟画面收 1 毛钱。 如何点对点实现这个过程呢？ 第一步，你先生成一笔押金交易，将押金 10 块发送到双方共有的一个地址，签名但不广播； 第二步，建立一个 10 块退款交易，带有时间锁 5 个小时，让我来签名，签好给你，你再签好给我，确保你什么都不干的话可以拿到退款； 第三步，双方核对好这两个交易并同时广播，由于退款交易有时间锁，并不会马上生效，这样押金就锁定好了。 第四步，接下来我们开始传输，开始使用押金交易的输出向我服务器的地址和你的退款地址进行分配，创造一笔第一分钟的交易，序号 nSequence=1，我拿 1 毛，退款 9 块 9，把视频 ID 或者前两分钟的解密密钥写在 op_return 的备注里。我拿到之后，并不会广播，然后开始向你传输第一分钟的画面数据。 如果你要继续看第二分钟，那么你就要把这个传输交易改一改，我拿 2 毛，退款 9 块 8，签好再发给我，我把确认的第二分钟密钥给你，同时传输第三分钟的画面。 这个传输过程都不需要广播，我只要拿到你签名的交易，就向你发送下一分钟的视频。直到： 你把整个视频看完了。这个时候，比如说视频有 15 分钟，那么通过点对点直接来回 15 次，input 是一样的，但是 nSequence 从 1 一个一个涨到了 15. 这时候本视频已经放好了，那么我们协商一致，把 nSequence 变成 FFFFFFFF，作为最终的交易，广播，成交。 你看了五分钟，关了浏览器，过了半个小时继续看。你关掉浏览器的时候，我就把上一笔交易留着但不广播，当你回来，大家就继续对同一笔交易进行 P2P 的来回签名，这时候新生成的交易 nSequence>5，广播之后，会在矿工那里自动覆盖掉 nSequence 你看了五分钟，” 我好了”，直接关了浏览器。4 小时 59 分这个时候我只有最大序号 5 的交易，我把这笔交易广播，网络也能清算，我拿了 5 毛，给你退回 9 块 5。 你啥也没看，直接走了，过了五个小时，退款交易时间锁解除，矿工打包确认，钱退给你。 这里有没有可能双花呢，有一点点，押金交易是有可能双花的，但只要押金交易和退款交易都正常地到了矿工那里验证过，下面的就几乎没有风险了。 所有的高频竞价系统都可以使用 nSequence 实现。股票、拍卖…… 视频付费。我发给你下一分钟内容，肯定已经收到了上一个签名交易，这样最多损失 1min，无所谓。 竞拍。竞拍也可以通过 nSequence 实现的，大家分别向交易所付足够的拍卖保证金，成交时，需要销毁其他交易，所以交易所会首先请成交人付费，收到成交人付费，并经过多个区块确认之后，通知其他竞拍人，这里需要一个复杂的原子交换，保证成交人 A 中标其他人就同时收到退款，具体的实现方式还有待开发，总之交易所可以销毁原有未广播的交易并退回保证金，经过若干个 conf 之后，再发货。如在这个过程中收到欺诈通知，可以不发货，并采取法律手段。 股票交易。股票交易是分几个阶段的，开盘前后各有两次集合竞价，盘中撮合成交。对双花的检查，可以设置在每一阶段的前后，把不合法的交易对剔除掉，然后再集合竞价阶段把被放鸽子的交易通过大户做完。 类似的过程，可以视为确定有限状态自动机（英语：deterministic finite automaton, DFA），形成自动的交易程序，按照固定条件执行流程图，完成自动交易，最终实现去中心化的公司治理自动化（英语 Decentralized Autonomous Corporations,DAC），详见这里： https://medium.com/@craig_10243/dfa-compilation-and-execution-38e6815897d2 https://medium.com/@craig_10243/blockchain-based-decentralised-autonomous-corporations-an-overview-5dc0d469fcb5 这里和现有社区的理解最大差别是，整个传输的中间过程都是点对点，不需要经过比特币(矿工)网络，事情办完，再把交易写到链上清算、固化。 2018 年 nChain 和 Coingeek 提出了一个 Metanet 概念。 以刚才视频为例，我们把每分钟视频数据的解密密钥放在交易中，而视频的数据通过现有的互联网方法传输。Metanet 是指，不再通过互联网协议渠道发送这个视频的数据包，而是把每分钟的视频，直接嵌入交易里面。这件事并不麻烦，后台程序自动处理了，使用起来，和微信扫码登录知识星球的体验会差不多。价格一定是双方协定好的必须透明，不透明的话，用户可以选择停止签名并安全退出。文件可以链上获得，也就意味着互联网服务器的所有内容都可以上链了，固定的资源放在主链上，临时的可变的资源 P2P 直接发给用户，在线博客、视频等等服务正在以日新月异的速度涌现，已经打破了我的想象力天花板。 在层出不穷的新应用、新环境下，点对点电子交易发展根本没有肉眼可见的天花板，唯一的限制是整个网络承载能力，也就是区块大小。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 IP2IP |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-network/payment-channel.html":{"url":"chapter-network/payment-channel.html","title":"支付通道","keywords":"","body":"支付通道 Nakamoto high-frequency transactions 在比特币 0.1 版中实现的功能包括交易替换 [2]，输入序列 (nSequence) 和时间锁定 (nLockTime) ，它们允许两方或多方在确认之前重复更新未确认交易的状态。 Satoshi Nakamoto 在个人电子邮件中向比特币开发人员描述了这种技术：[3] 未记录的打开交易可以继续被替换，直到 nLockTime。它可能包含多方付款。每个输入所有者签署他们的输入 对于要编写的新版本，每个版本都必须签署更高的序列号（请参阅 IsNewerThan）。通过签署，一位投入所有者说：“如果每个人都投入资金并且产出就是这个，我同意把钱存入。” SignatureHash 中还有其他选项，例如 SIGHASH_SINGLE，这意味着 “我同意，只要这个输出（即我的）是我想要的，我不关心你对其他输出做什么。” 如果用高 nSequenceNumber 编写，那么除了那个规定之外，该方可以退出谈判，或者签署 SIGHASH_NONE 并完全退出。 各方可以通过使用 OP_CHECKMULTISIG 创建更高的 nSequenceNumber tx 来创建预先商定的默认选项，该 OP_CHECKMULTISIG 需要签署一方的子集以完成签名。各方保留此 tx，如果需要，将其传递给它，直到它有足够的签名。 nLockTime 的一个用途是在一组方之间进行高频交易。他们可以通过一致同意不断更新 tx。捐款方将是第一个签署下一版本的人。如果一方停止同意更改，则最后一个状态将记录在 nLockTime。如果需要，可以在每个版本之后准备默认交易，因此 n-1 方可以推迟无响应方。不需要广播中间交易。只有最终结果才会被网络记录下来。就在 nLockTime 之前，各方和一些见证节点广播他们看到的最高序列 tx。 这种设计并不安全：[ 引证需要 ] 一方可以与矿工勾结以提交交易的非最终版本，可能从另一方或多方窃取资金。 https://en.bitcoin.it/wiki/Payment_channels 根据中本聪发给比特币开发人员 Mike Hearn 的电子邮件，这个基本结构是中本聪的想法： nLockTime 的其中一个用途是参与者间可以进行高频交易。他们可以通过一致同意不断更新。支付的人是下一个版本的第一个签署人。如果任何一方不同意更新，则最后一个状态将记录为 nLockTime 。如果需要的话，可以在每个版本之后准备一个默认的交易，这样同意 n-1 的参与者们可以将没有反应的人给剔除。中间交易不需要广播。只有最后的结果需要被记录到网络上。就在 nLockTime 发生之前，参与者们和几个见证节点广播他们见证的最高序列的 tx 。 事实上，nlocktime 可用于一组参与者之间的高频交易。 各参与方可以通过一致同意来不断更新 tx。付钱的一方将首先签署下一个版本。如果一方停止同意更改，那么最后一个状态将记录于 nLockTime。如果需要，可以在每个版本之后准备一个默认交易，以便 n-1 当事方可以将一个不响应的当事方除名。中间交易不需要广播。只有最终的结果才被网络记录。在 nLockTime 之前，当事方和一些见证节点广播它们所看到的最高序列 Tx。“ 最后，我们可以创建支付通道及更多，这包括高频交易和即时拍卖在内的交易。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 支付通道 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-network/spv.html":{"url":"chapter-network/spv.html","title":"SPV","keywords":"","body":"SPV SPV - 简化付款验证 人们要么完全没有理解 SPV，要么在涉及其使用时误导其他人，试图推动虚假议程。重要的是，如果用户正在存储密钥，则他们可以存储输入交易。 客户钱包即发送交易的人甚至可以离线。他们不需要检查是否向他们发送了更改，他们指示要发送更改的位置，以及如果商家没有将交易发送到网络，则用户不会被收费。 SPV 比人们理解的要简单得多。私人证明或人们正在寻求的任何其他浪费时间和金钱的项目都没有必要。所有需要发生的事情是钱包不仅要存储密钥，还要存储最后一笔交易的交易细节。因此，如果 Alice 向比特币发送比特币，并且她有两个输入交易（Tx1 和 Tx2），那么她需要存储的是区块头，她想要花费的交易的 Merkle 路径以及交易本身。Bob 可以简单地检查信息并计算 Merkle 路径和区块头，以验证 Alice 根据输入发送给他的交易。此时，Alice 只需要保留区块头，正如我在白皮书第 8 节中所解释的那样。 请注意离线客户 SPV 钱包的以下功能： UTXO 集。预加载的完整，未使用的交易输出（UTXO）可以存储为预付的 “钱”，可用作包含 Alice 的未使用的未使用交易输出的数据。Merkle 路径旁边的完整交易数据构成了 Alice 正在花费的交易有效的 Merkle 证据。散列完整交易将给出作为新交易花费的输入数据的一部分所需的 TXID。 私钥/公钥。钱包必须能够访问一组私钥以签署 UTX 输出，并且公钥可以在进行交易时指定更改地址。 Merkle 路径。商家的销售点钱包将使用包含 UTXO 的每个交易的 Merkle 路径来验证 UTXO 是否有效。请注意，此类钱包提供的 Merkle 证明不会阻止双重花费，但可以作为防止垃圾邮件攻击的快速机制。 最小处理能力。SPV 钱包需要签署未花费的交易输出（UTXO）以便花费它们。它要求离线钱包能够实现 ECDSA，这意味着需要足够的处理能力来执行椭圆曲线点乘法和计算散列函数。 区块头（可选）。客户钱包可能希望包括区块头以验证已经处理了对销售点 SPV 钱包的付款。它还需要在与销售点钱包交互之后存储 TXID 和 Merkle 路径。 对于 Alice，即使区块头也是可选的。Bob 当然需要他们。 只要我们不更改协议规则，就无法攻击系统。事实上，即使一群拥有超过 50％网络的矿工选择改变协议，他们也会突然发现没有人在他们的网络上花费任何比特币。这就是分裂的本质。矿工们对协议变更进行投票并没有改变规则本身，正如白皮书最后一句所说的那样。 只有矿工才是节点。这是比特币的一个重要方面。决定规则和矿工可以做的不是你的软件，事实上，共识纯粹是通过采矿来实施的。该协议是整个系统。 这就是为什么 SPV 可以工作以及为什么它不能用于像 BTC 这样的系统。在协议可以改变的地方，SPV 不复存在。比特币允许链接到主链的本地验证。事实上，这个过程非常简单。所有需要进行的是收件人存储交易。如果我们假设 Alice 和 Bob 寻求交换交易，而 Bob 正在销售 Alice 希望购买比特币的商品，那么 SPV 可以非常简单。 如果 Alice 保留了她与 Merkle 树一起支付的交易副本，她可以将交易的这两个部分和相应的块交给 Bob，Bob 现在可以非常简单地验证和验证整个交易链。 任何所需的规则和激励措施都可以通过这种共识机制来实施。 比特币白皮书的最后一行非常重要。如果您需要所有 SPV 钱包和运行比特币或创建交易的整个组织进行升级，那么您可以更改协议而不是规则。这是一个重要的区别。 正如白皮书中的最后一行所解释的那样，在比特币协议范围内采取行动的规则和激励措施总是可以通过接受工作链证明并对接受有效块进行投票的矿工的简单决策来更新。系统在不进一步改变网络的情况下起作用。请注意，结论非常具体地说节点和节点只需要投票。白皮书的第 5 节中明确指出节点实际上是一个矿工并创建了新的区块。网络上的所有其他人都是网络的钱包和用户。两者在安全模型中都很重要，因为除非大多数用户被改变协议所愚弄，否则系统的安全性不会被劫持。 它实际上可以比作需要更改以便被破坏的软件。这是一种社会工程攻击。 证明非常简单。 我们有一个合乎逻辑的声明，声明矿工对规则的简单投票可以在协议中设定任何规则。从逻辑上讲，我们可以推断，除了通过拒绝交易和区块进行投票的能力之外的任何规则也在协议之外。从逻辑上讲，没有其他方法可以阅读该声明。任何节点（注意，白皮书里所说的节点指是挖矿的矿工）都可以通过单独投票来设置规则，或者它在协议之外。 我们现在将看到在协议之外建立规则的不同之处，从而创建一个不是比特币的系统。 https://medium.com/@craig_10243/forks-as-a-demerger-or-a-split-as-a-copy-c38bf6d8abed new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 SPV |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-mining/":{"url":"chapter-mining/","title":"比特币挖矿","keywords":"","body":"比特币挖矿 白皮书非常清楚地说明了什么是节点： 1. 网络 运行该网络的步骤如下： 1) 新的交易向全网进行广播； 2) 每一个节点都将收到的交易信息纳入一个区块中； 3) 每个节点都尝试在自己的区块中找到一个具有足够难度的工作量证明； 4) 当一个节点找到了一个工作量证明，它就向全网进行广播； 5) 当且仅当包含在该区块中的所有交易都是有效的且之前未存在过的，其他节点才认同该区块的有效性； 6) 其他节点表示他们接受该区块，而表示接受的方法，则是在跟随该区块的末尾，制造新的区块以延长该链条，而将被接受区块的随机散列值视为先于新区快的随机散列值。 节点始终都将最长的链条视为正确的链条，并持续工作和延长它。如果有两个节点同时广播不同版本的新区块，那么其他节点在接收到该区块的时间上将存在先后差别。当此情形，他们将在率先收到的区块基础上进行工作，但也会保留另外一个链条，以防后者变成最长的链条。该僵局（tie）的打破要等到下一个工作量证明被发现，而其中的一条链条被证实为是较长的一条，那么在另一条分支链条上工作的节点将转换阵营，开始在较长的链条上工作。 比特币当中的节点无一例外都是是矿工。任何不挖矿的人运行的都只是一个钱包而已。 人们难以明白的地方是在比特币当中重要的是来自于区块的共识。有种说法是你需要检视自己的节点以便知晓交易正在进行，这是毫无意义的无稽之谈，交易成功是因为它已被合并到一个区块中。你要将一笔交易打包进区块的唯一办法是要让节点接受它。这就是系统在 “挖” 你的交易。 傻坐着看着你自己的系统毫无意义。如果你没有创建新的区块，你对网络产生不了任何影响，你既不协助广播区块，你也不协助验证区块。 比特币历史上除了矿工能够拒绝一个区块之外，从来没有过任何交易或任何区块因为其他的情况被拒绝。 关键是，如果你不创建区块，你只能是一个跟随节点。在这一点上，我将再次强调一个节点是由挖矿服务器控制的系统。它创建新区块。如果你看看早期的代码，它写得非常清楚。 [1] 这在代码注释中有详细说明 [2]: 个人认为，评论所说的 “节点将交易打包成区块” 等信息是相当清楚的。如果你不挖矿，你就不是一个节点。 这应该是很直观的。将你的交易从你的设备传递到采矿节点之间将会经过数跳，而在比特币网络中几乎没有多于两跳的情况，除非要经过那些与挖矿无关的系统。 让我们做一些思考练习。 试想你有一台不挖矿的计算机，它正在运行一个钱包。你收到一个你认为无效的交易，会发生什么情况？基本上，你不会将其转发到任何其他系统。 事实上，你啥也没做。 如果你收到一个无效的区块呢？同样，你根本不广播它，你并不告诉其他节点说这是一个无效区块，你所做的只是忽略它。这似乎是现在人们难以理解的一点，你什么都不做你就什么也没有改变。如果你正在挖矿，并且你拒绝了一个区块，这意味着你不会在这个区块之上继续挖矿并选择一个备用区块。如果你不挖矿，你不用选择一个备用区块。你不创建区块，所以除了你被告知的信息之外，你不会广播任何东西。 “人们必须要运行树莓派全节点”这种半吊子推理存在的明显谬误就是，它们（树莓派节点）什么都不做。 除非你是矿工，否则你接不接受这笔交易并不重要。非矿工在区块链的架构中没有任何发言权。所谓的验证者这种想法只有在你是矿工的条件下才有意义。如果你愿意，你可以审计区块链，但没有理由为此永远保留副本。一旦你确认了你已经记录的最新一个区块的哈希值，你就可以从那一刻剪枝前序区块。因为即使你保留了所有陈旧交易并反复验证它们，你也根本没有获得任何安全性的提升。 重要的是那些矿工。 现在，我们需要了解的第一件事是所有加密系统都是概率性的。密码系统和任何现代信息安全系统都基于概率信息工作。那些讨论比特币概率系统的所谓的专家并不理解强加密是概率性的。 我认为现在很清楚的是，你只要下载区块头而无需成为一名矿工就知道哪些交易是无效的了。 Blockstream 一直试图告诉我们的 “如何运行一个全节点” 的当中的 “节点” 的意思与中本聪在白皮书中所说的内容是直接相冲突的。 我认为现在是时候开始考虑所有这些变化以及人们在试图劫持网络时寻求的是什么。 广泛流传的关于比特币及其他基于区块链的衍生系统（如以太坊）的错误理解和荒谬信息迫使我成为公众人物。我所创造的系统有部分可能被任何技术导向最具欺诈性的结果。对区块链功能的匮乏理解导致谬种流传、谎言泛滥。大量前新闻组和网络 IPO 的欺诈以 ICO 的旧瓶换新装形式沉渣泛起。 我已准备好在本回复范围之外回答 CFTC 提出的一切质询。需要特别提醒的是，在我谈到比特币或其他系统时，特指由原始白皮书和相应代码所定义的比特币。 无论比特币和以太坊如何迭代，系统的性质都是一众竞争性公司为积极执行规则而谋求支付。值得注意的是，当系统通过分叉改变并引入新规则时，其效果是，数字资产的前持有人获得了空投。此时，通常有一个主体发行了对等数量的新资产。关于去中心化的概念存在大量错误导向。去中心化只是加密货币的一种手段，仅意味着资产是去中心化的。所有的资产包括比特币都是由单一主体或组织发行的。 矿工并没有充当发行者。数字加密资产比如比特币或以太坊，其发行始于程序运行。系统规则的任何改变都应看成创造了新的完整系统，它模仿了原始系统，但给原始持有人发行了新的相同数量的通证。在以太坊网络中，少于 20 个节点控制了整个系统。 在这里，我将把比特币作为一个协议进行重点讨论。由于竞争关系，多协议共存不可能形成稳定的平衡。 清算与结算 比特币（或通常说的区块链）改变了贸易的完成方式。比特币去除了中间人或中介的必要性。中间人系统充当了结算与清算的功能。 在过去，一个交易以典型的两个步骤完成。第一个步骤是签订买卖协议。在比特币中，这是系统用户一方的点对点。个人或公司可以与另外一个人甚至是交易所完成此一步骤。这允许数字商品及通证化产品包括证券在内的无缝和整合交易。此与现行的金融与贸易系统并无二致。当前，电子商务的销售亦存在数字化通证的运行。 比特币不同于这些的是，它解决了系统第二层的发行以及清算与结算。 清算所的存在是为了保证在节点交易时不会导致数字产品或通证的双花。 比特币是通过交易的结算步骤来解决此一问题的。一项买卖中，Alice 和 Bob 达成交换 100 个特定数字产品的协议，也就是，Alice 欲以美元计价的通证交换 Bob 持有的股票。 协议是资产转移与支付的相互承诺。 此时，比特币和 “区块链” 的概念来了。交易的第二步骤叫结算。通过银行或交易所，两个人联系在一起并进行商品交易。交易双方签订一个交换契约，承诺转移一定数量的有价通证，并按约定执行协议（此处执行，指交易双方的执行）。 通常，我们发现中间人促进并完成了交易的每一个步骤。一个节点交易应当包括无中间人时的直接销售或场外交易。基于通证销售的 ICO，与此并无不同。ICO 或其他通证是由中间人或直接的交易所进行销售的。又，此等执行过程与销售任何商品是相同的，也与交易所销售全部证券或非商品化的钱及票据完全一样。银行开具信用证，在单证相符时促成对受益人的远期付款。 这也适用于不需要直接以物换物的期货代理商、证券交易所或其他交易所。 我们可以把这些步骤叫做通证市场的前端，此处通证指证券、债券或可交易的商品。电子账本和电子交易所并不新鲜。目前，无纸化的债券和股票已相当完整。这些记录于计算机的数据就是通证。当前通证的使用已相当普遍，电子商务的起源可上溯到 1980 年代。市场上的电子商务地面工作人也日益被电子交换通道所取代。纽约证券交易所、芝加哥商品交易所及其他交易所，都是在交易通证，在一定形式上，与任何 “加密货币” 交易所都是类同的。 比特币（或其他 “区块链”）不会也不可能取代 “前端” 过程。买卖指令的完成就是这样的前端过程。比特币（或曰区块链）在于帮助消除 “后端” 中的中间人阶层。 后端中完成的那些指令引入了交易的下一个步骤 --“结算”。在区块链中，此一步骤由矿工或 “节点” 控制。矿工充当了分布式的清算所和结算功能。就一项数字资产，资产在完成实际转移时，也意味着结算。对于证券化的，可作为通证交易的商品，承诺转移资产的结算动作可在区块链上执行，但是对于物理性商品的最后结算，需要后端的结算功能。 对于金融性资产、股票或证券交易，区块链可以去除对清算所功能的需求。 这就是后端。也就是，区块链完成了通证或电子化资产的实际转移，如同清算所完成现行交易所的通证化资产的转移一样（注：一切电子化发行的资产都叫通证，这是 1980 年代以来就存在的条款）。 中间人在后端的功能是保证资产转移的权利得以实现。投资人在达成资产交换协议后，应当被保证分别收到对方的资产，也就是，所有的交换和资金应当清算和结算。 后端的功能被忽视，也常在普通公众的视线之外。 后端功能在于保证被发行资产的投资人可以享有不必关心所持资产的质量、市场性、流动性或风险的权利。后端还提供了交易垃圾债券、一美元元以下劣质股票与交易 AAA 级主权债券或 500 美元一股优质股票的同等权利。 区块链，就象结算中间人一样，只是提供一种机制，以保证投资人在交易时的权利。 比特币，实际上就是任何区块链，在交易中充当了后端中间人的角色。 中央证券存托机构包括 DTC（存款信托公司）、中央对手方清算制度包括芝商所的清算所，LVFTS（大额资金转移系统）和美联储等等，都是区块链将要取代的中间人实体机构。 没有一家后端实体在市场交易中有位置。它们提供的是市场交易的渠道，促进前端交易执行，担保结算，担保权利及资产在交易主体间的转移。 比特币在任何时候都不会取代前端功能。它起一个补充作用，允许一个更简单、更划算和经济可行的方式完成前端交易。 比特币（或任何区块链）添加了一个私人层允许后端流程化。常犯的错误是比特币取消了所有的中间人，比特币不会，一个区块链也不会作出这种夸大的承诺。后端的流程化，及有能力为电子化权利提供一种全球化的无缝、整合的清算与结算功能是无与伦比的革新。有一种观点认为比特币允许无规则、无监管的证券交易，这只是一种在 “民主金融” 外衣伪装下意图以虚假和无效宣传来从事非法投机生意的大而不当的愚蠢理论。需要注意的是，清算所是不用考虑正在交易的资产质量的，正如 N.Aubryr 在 2008 年所言，欧洲的金融管道就是如此。 在金融系统中引入区块链不会影响、削弱或在任一程度上减少前端功能对监管和控制的需求。实际上，比特币简化了交易调控政策在金融市场中的运用。添加日期、定义交易所的功能允许市场参与者简化合规性需求，而提供服务的同时允许参与者更快、更低的成本的清算则降低了 “前端 “市场的成本。其结果是提高了国内及国际贸易与交易的流动性。 我们可以按如下描述这个过程。假定 Alice 与 Bob 之间发生了一笔以美元换苹果公司股票的交易，比如达成了 Alice 按一股 150 美元从 Bob 手中购买 1000 股苹果股票的协议。这个交易在前端达成协议后将在后端完成清算。前端，无论是 OTC 还是在证券交易所，引入区块链后不会有任何变化，交易更快，结算无延迟，但是交易过程存在于比特币（或任何区块链）之外。 在传统的场景里，清算所和结算功能是为了保证 Alice 存入 15 万美元而 Bob 则放弃 1000 股苹果股票。后端可以保证 Alice 有可支付的资金，同时 Bob 有可交付的股票，且对这些股票拥有权利。以允许交易所完成交割。 比特币简化了后端过程。它允许 Alice 将资金放在一边而进入结算功能，以直接或原子交换方式获得 Bob 的已验证资产。系统的匿名性质意味着仅有交易双方及与交换或交易相关的主体知道 Alice 与 Bob 的身份。交易者的身份不可篡改地记录于区块链，价格的任何变化都具有法律效力，当违反法律或规则时，允许提醒股票交易者。 Bob 和 Alice 在数分钟内直接完成结算，整个过程没有成本，没有上面人，没有浪费地加入第三方清算所。这就是比特币引入和进行的过程，也被其他区块链在模仿。 前端和后端 金融交易的前端远不同于后端。前端包括买卖证券或商品的一个合同交换。后端在传统上是基于一个已在前面完成、已经关门的关系。这种关系以账户的形式持续存在于中间人处。中间人所享有的权利和承担的义务不与任何特定时间相关联，也不与任何交易合同关联。前端表明买卖双方正进入一个合同关系。 后端通过中间人之间改变关系。例如，Alice 通过摩根。斯坦利出售苹果公司股票，摩根。斯坦利用这些登记的股票在 Bob 账户上记账，后端交易就是账户的转移，即摩根。斯坦利在 Bob 的贷方账户记入与 Alice 借方账户同样的数额。这样，Alice 在摩根斯坦利的账户余额减少，而 Bob 相应地增加。 同样的过程被区块链取代。不同于摩根斯坦利在他们的网络清算所中完成与验证账户功能，比特币允许账本直接同步与维持。 一个智能合约甚或一个简单的模板式交易都在区块链外完成协商，然后使用区块链进行结算，以保证交易是有效的（验证发生于挖矿过程），没有双花发生（诸如试图将同一份股票进行二次登记）。 比特币通过保留登记而充当了后端系统。用户通过签署加密消息而保存了被验证记录，该记录存于账本上。 比特币是 “一次写入，多次读取” 的账本。这模仿了许多现行的账本数据库。如果发生错误，账本可被修复，但回滚操作亦被写入以提示错误。 对于公司发行的通证化股票，如果法院判定某次特定的股票交易无效，比如交易对象受限，则即使是不可篡改的账本，公司仍能改正之。 这一过程是通过公开回赎。虽然交易各方对公众而言是匿名的，但公司或组织仍保留账本与记录，可以进行公开回赎交易。 比如，Alice 出售给 Bob 100 股苹果公司股票，但是法院判定 Bob 无权持有该等股票，该交易可通过无效交易而回赎。 如果 Bob 不签名交易致使回赎不能发生，则公司可简单地在注册表上签署一个正式的废止声明。此时，尽管 Bob 仍有加密账本的入口，但该入口不关联任何权利。Bob 不能使用这个回购商品，不能出售，因为任何销售行为都是无效的，注册表将永久提示不仅 Bob 的入口而且由此发生的任何交易树都是无效的。 区块链允许引入简单的 “撤回 “表格。如果一个注册或交易的” 撤回 “是无效的，可能导致 Alice 对公司发起法律诉讼。 尽管区块链的记录不可篡改，如同 WORM 或一次写入多次读取的账本系统，但记录并非不可变化。 目的或功能 以太坊或相关网络的设计和发展归咎于 Bitcoin core 开发组对比特币强加的一系列限制。比特币在设计时，其脚本具有强大的、充分的潜能。比特币在事实上是图灵完备的，无任何自我限制，可以实现比以太坊更多的计算工作。 a. 以太坊是产生于比特币的一个错误概念。这个概念是，所有节点应当平等地运行和计算软件，以实现 “去中心化”。现实是，这限制了可计算性，阻止了扩容。 b. 以太坊网络已经达到它的计算极限。当它扩容时，每一个用户都被其他用户复制。 c. 反之，比特币只在链上留下简单验证，允许系统全球扩容和引入分布式的计算方法。 d. 比特币不再扩容和维持临时的 1M 限制的唯一原因是 Core 迫使用户放弃不可篡改的账本。对比特币的劫持始于丝绸之路的失败。自从毒品市场崩溃，以及意识到不可篡改的账本允许政府更易追踪资金时，比特币开发者的目光开始聚焦迫使人们走向链外的替代方法。这导致侧链和闪电网络的发展。这些网络的设计允许间断结算，以通过清除记录而增加匿名性。 e. 一个类似的系统正在以太坊上发展，叫 plasma。 f. 将记录移至链外的唯一目的是提高加密货币在暗网如毒品市场的利用潜力。 g. 以太坊的合约问题类似于一个团体使用亚马逊云的计算服务，然后等待结果。问题是，亚马逊的每个客户端都需要在系统上自动运行其他客户端的代码。 2、 以太坊是比特币的拙劣副本，其设计目的是完善智能合约和脚本的承诺。实际上这些功能在比特币中均已存在，但被 core 开发组禁止，其目的是在系统内寻求匿名交易。 3、这个网络已经达到它的极限，只能通过非法的投机性交易来吸引资金，这些投机性交易可以欺骗不懂技术的门外汉。限于计算条件或创造了以前从未出现且效率更高的 ICO，以太坊已不能释放新的技术。 4、通常，许多申请对货币进行记账的人们都在抱怨记录太难，这是误导与错误。所有加密货币在记账时都应当不可思议的简单。 5、这个市场的交易量极小，极易被操纵，没有数据是可信的。 6、 技术 - 7、以太坊是一个用虚似机器和高等级语言建造的比特币副本。但它是一个拙劣的副本，不能证实如果不是每一个单一节点运行每一个单一计算时，是否限制扩容和减少使用。 8、以太坊不能扩容。如果十个人寻求运行十个应用，那么全部的十个节点都要运行这十个应用。如果 1 百万个人运行 100 万个应用 ，那么所有的 1 百万个节点都得运行全部运用，其效应就是一台全球计算机复制了一百万次。在比特币，节点仅需验证结果，甲骨文数据库亦可建造允许无限扩容。 9、在 2003 年至 2007 年之间我实验过等效的权益证明（PoS）机制。所有的权益证明机制最终都坍塌成一个单一控制并允许改变而不是创造不可篡改的记录。 10、权益证明在经济学上存在缺陷，其基础是寡头游戏。 11、没有正在工作的权益证明模式。 12、以太坊能够扩容的唯一方法是改变模式、模仿比特币。这些技术中的大部分我拥有专利。 治理 13、以太坊的治理模式是被一个中心团队所控制，该中心团队用了一个误导性的声明说他们是去中心化的，以掩盖数字证券的欺诈性发行。所有的选择都是由中心化的团队作出。 a、比特币的原初版本不存在分叉协议，此种不可改变性与主要证券的脆弱性大相径庭； b、任何区块链的性质是不可篡改的系统和协议； c、比特币核心（BTC）因徒劳地创造了一个匿名系统允许暗网毒品的使用与交易而颠覆了这个过程。 14、说区块链不分叉是社区试图误导政策制定者相信的。任何分裂都会创造一个完整的、新的副本，并随新的协议而分配新的空投币。 a、区块链在在某种方式上是协议，如同互联网和 IP 相对于之前的 NetBIOS 和 IPX 一样是协议。 b、没有分布式的共识协议在这里工作，比如以太坊经典相比以太坊就是一个新协议，创造了一个改动很少的但模仿原初协议的全新系统。 其他 比特币及其所有衍生的系统，通过引入竞争性的挖矿机制，处理、结算先见交易并记录为有效，解决了数字资产的清算与结算问题。 除验证节点外再无其他事情，也没有所谓的民主化去中心化概念。去中心化的迷雾旨在播撒非法市场的种子。比特币或以太坊的控制权在运行节点的人手中，也就是运行大数据中心的人手中，不是在家庭网络的手中。 区块链系统上的每一份合约、每一个交易都与现行普通法系市场中的金融和法律结构类似。 追踪每一个加密货币轻而易举，在系统中画出每一次交易的地图也很简单，比如以太坊。那些推动系统的人试图传播一种基于区块链功能的错误观点，其目的是绕开法律。任何区块链系统中，所有的交易都是发生在两个人之间，这与发生在芝加哥期货交易市场的两个人之间的交易是同一种方式。比特币的全部革新在于确保交易不被重组，非因清算与结算交易不被改变。 比特币不分布交易，也不改变交易过程。任何区块链包括以太坊都不会与此不同。 如果有人私下告诉你区块链可以在法律、条例、规则之外运行，他们是在试图误导或欺骗，其目的是规避监管以建立不受监管的投机或暗网市场。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币挖矿 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-mining/running-bitcoin-node.html":{"url":"chapter-mining/running-bitcoin-node.html","title":"运行节点","keywords":"","body":"运行节点 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 运行节点 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-mining/proof-of-work.html":{"url":"chapter-mining/proof-of-work.html","title":"工作量证明","keywords":"","body":"工作量证明 什么是工作量证明？ 比特币是一个不断更新的数据库，受到共识机制的保护，需要所谓的矿工或节点执行大量计算，通过解决哈希难题拿到工作量证明（Proof-of-Work）。其中，处理能力最强的矿工最有可能解决难题并在区块链上添加区块，每个区块包含由用户签名并由节点中继的交易。由于工作量证明共识机制需要大量的精力投入，也就是成本投入。具体地来说，创造一个新区块需要按照概率指定地完成若干次易于验证而难以重现的计算，以提高篡改的成本。 矿工享有两种货币激励措施，即通过工作量证明（Proof-of-Work）以电子货币的形式激励，保证网络运行： 为添加区块的节点增加新币供给（目前每个区块奖励 12.5 枚比特币） 用户选择的所有交易手续费总额（区块足够大的情况下，每笔手续费大约不到一分） 此外，更重要的是，每个节点还暗含着一个激励结构。由每个节点决定并（按计算能力）投票随后挖哪个区块，这不仅仅取决于谁先解决哈希难题，而是首先要确保交易有效，如果两笔相互冲突交易，则必须为排序靠前且有电子签名的一笔。 这对节点的 “行为” 有着很大的影响，因为在任何时候，所有节点都需注意到所有中继的交易，从而避免虚假或双重支付交易，这符合共同利益; 如果一个节点有意或无意地通过了欺诈性交易，其他节点便不会在这样一个欺诈性区块上挖掘。因为所有节点都需致力于区块链网络正常且诚实地运行，否则未来的收入岌岌可危。 如此就形成了一个高度互联的网络，每个节点都中继并处理所有接收到的有效交易，实现 Pareto 最优解。这一网络被称为一个小世界或一张近乎完整的图。简单说来，可以想象一下它以下列方式运行： 值得注意的是，这一过程只需几毫秒。时间对于节点来说至关重要，是一个主要成本因素; 如果一个节点未能完全更新，便有着成为孤儿的风险，其他节点可能决定不在这一节点开采的区块上挖矿，从而使其比特币奖励变得毫无价值。 比特币区块链的安全性恰恰源于这样一种网络效应：由于受到财务上的激励，最强大的节点开采速度高于网络中的其他任何节点，因此也不会选择违反游戏规则，只会记录有效交易。 PoW 机制的意义 Proof of work 工作量证明，还更多地存在于我们认知我们所处的这个世界。 工作量证明，永远是向前看的，看我们在现在的当下是否坚持工作、坚持创造，坚持改变这个世界；而持有量证明，是向后看的，看我们过去取得了哪些荣誉。一个逼迫我们坚持时刻奋进，一个则更希望坐在已有的基础上停滞不前，选择自在世人心中。 由于 PoW 需要花费电费进行相关的计算，会有很多人认为这是对能源的浪费，其实这不是，反之，正式因为比特币系统存在货币价值，有了价值，才会有人去挖矿；如果这个系统失去了价值，费电挖矿自然会停止。有一些人偷电挖矿，是实在的盗窃罪行，但这不是挖矿的罪过，它也可以偷电给自己电瓶车充电，都是盗窃。 另外有一些参与区块链系统的人，认为 PoW 是浪费了太多电力，开始转向 Proof of Stake，即持有量证明。这些算法是在比特币系统的基础上，将新生成区块的主人，依概率和持有比例赐予持有对应币种的节点。也有很多信息论的老师在研究是否有科学的 PoS 算法。 如果一个加引号的 “加密数字货币” 采用 PoS 系统，决策方式为按照持有比例投票，那其实这不是一个货币，而是一个公司的股权，那如果是 ICO 上市，就是非法证券。回到比特币上，它到底是货币，还是一项普通商品，还是证券？在法律的定义上这是值得商榷的。比特币的发行人到底是谁？你可以认为，比特币的数量新增依赖于矿工的劳动投入，新比特币的发行人是每一个出块的矿工；然而你也可以认为，因为中本聪设定好了比特币的总数和初始分发方式，矿工只是运行了中本聪的程序，所以比特币的发行人是中本聪。很多国家都有伪造货币罪的，事情就麻烦了。 代码不能也不可能取代人类的正义观念。法律不仅仅存在于条文之中，法律是一种精神，更多的是人类正义观念的体现，控告、辩护与裁决，都是有人的主观性的。 一些对比特币的误解 中本聪设计的目的，不是一个去中心化的货币系统，而是一个杀不死的货币系统。这是大多数人的第一个误解。 那么如何实现杀不死呢，用的是去中心化的方式来实现的，所以去中心化是手段而不是目的。这是第二个误解。 那么如何实现去中心化呢，有很多种，比如 PoW ，比如 PoS ，还有基于 ip 数量等等，最终中本聪选择了 PoW ，为什么？不是因为 PoW 可以实现去中心化， PoW 根本做不到去中心化。这是第三个误解。 那为什么还要选择 PoW ，因为只有 PoW 才能让真正掌握权力的人付出足够大的代价，付出足够多的沉没成本，这样他们才不会轻易危害比特币系统，才会竭尽全力去维护。中本聪并没有指望 PoW 可以避免中心化，否则他就不会指出 51% 攻击的可能性了。换句话说，中本聪早就知道 PoW 会出现中心化，中心化不可怕，可怕的是掌握权力的人不付出代价。所以 PoW 等于去中心化，这是第四个误解。 工作量证明的本质 现实世界和虚拟世界一直在我们这个世界共存了几十年了，但是仔细想想，并没有一个非常好的方式，将现实世界的资源用标准的方式，转换成虚拟世界的资源。有人可能说，不对啊，域名资源、IP 地址、带宽、存储空间不都是通过现实世界的资源转换得到的么？ 没错，它们其实也可以作为衡量的标准，可惜它们也有各种人为限制造成的缺陷，比如不够稳定、不易度量的、难以全球共同承认、全球无法容易地统一验证。而只有算力，可以完全满足上述的所有要求，所以，PoW 机制最终选择了算力为衡量标准。 如此，我们很容易看出，PoW 的本质其实是将现实世界的芯片和电力，转换成一串虚拟世界的数字，这串数字极为难得，必须要靠消耗大量现实资源才能得到。也就是说，PoW 打通了现实和虚拟的转换通道。 这样的意义在于，控制了现实世界资源的人，将会在虚拟世界里获得同样的权力和资源，也就是说让现实世界里可以扼杀比特币的人在比特币的世界里获得竞争优势，因为有了这个竞争优势，他们就有理由有动机成为比特币世界的朋友而不是敌人。所以，很容易就可以理解 PoW 为什么符合经济学原理，也很容易明白为什么采用了 PoW 机制的比特币的算力资源可以以指数级的形式疯狂成长壮大。 看到这里，你就明白为什么总有人说，支持矿工才是真正的支持比特币，而那些希望削弱矿工的力量、希望修改算法追求所谓挖矿公平的人，其实是在斩断比特币系统的激励机制，从根本上破坏比特币的成长。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 工作量证明 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-mining/double-hash.html":{"url":"chapter-mining/double-hash.html","title":"双重哈希","keywords":"","body":"双重哈希 比特币有一个长期的未解之谜：为什么要用双重哈希（double hash）？ 生日攻击 Core 对此的解释是这是为了消除生日攻击，但不幸的是，这种说法是错误的。 生日攻击是一种密码学攻击手段，所利用的是概率论中生日問題的数学原理。简而言之，大多数人之所以会认为 23 人中有 2 人生日相同的概率应该远远小于 50%，但事实并非如此。这种攻击手段可用于滥用两个或多个集团之间的通信。如果你双哈希一个值，生日攻击仍然存在，而且实际上，因为增加哈希操作，我们丢掉了一些信息。可以说，如果迭代一个哈希 n 次，发生冲突的可能性就会增加 n 倍。换句话说，在哈希之哈希的场景，比单一哈希甚至是同一哈希函数的哈希(一种双重哈希)更有可能导致碰撞。 比特币中的双哈希不是用来提高安全性的。在寻址中，它确实增加了一个好处，那就是，如果一个哈希函数被发现是脆弱的，另一个哈希函数的安全时间可以更长些，但正如上面的场景，冲突也可能更容易发现。所以，很不幸，这种表面上的好处并不是采用双哈希的原因。 专业化 如果双重哈希它降低了安全性，那么我们要这么做呢？ 比特币中双哈希函数的一个用途是，在比特币扩容时，对个别验证函数进行专业化。 如果你开始思考这个问题，将会发现问题从 A== Hash(X) 变成了 B== Hash(A) 我们将对交易 X 的哈希值 A 进行哈希后得到的值 B 发送给矿工，但不允许他们在没有某个交易的情况下广播一个区块。 通过使用默克尔树结构，我们可以仅发送其中的某个分支的信息给矿工，而不必发送整个区块。这样做将允许我们构建一个 ASIC 挖矿专用设备，它仅计算部分数据，但无法生成完整的区块，这样，工作量证明和验证可以交给专门化的实体。ASIC设备可以在发现有效块时将费用支付给验证设备，但是系统可以做到不让他们相互欺骗但可以相互交流。事实上，他们甚至可以与不同的矿工和矿池达成协议，而不必担心出现问题：如果一方作弊，双方失败。 当问到这样的设备可以放在哪里时，事情变得有趣。中国和中亚有些地方有电力，但这些地方的网络连接并不好。在这种情况下，能够把任务拆分并派发给不同的实体来计算是很有用的。 通过默克尔树，我们可以允许一个验证节点作为中国以外的分布式系统发送简单的但易于验证的哈希函数，这些哈希函数满足矿工检查，而无需验证所有的交易部分。换句话说，如果区块传播在某些地区是个问题，对于 BSV 中的大规模比特币矿工也不是问题。 屏蔽非法内容 此外，使用双哈希函数还可以创建一个系统，允许在遵守法律之下进行分布和验证。分布式函数可以发送到专门系统，在本地管辖范围内发挥作用。这样，我们有一个不可篡改的数据存储，可以通过已验证哈希进行过滤，并允许在某些司法区域随后删除非法内容。也就是说，比特币中的双哈希创造了一种可以选择性地传播内容的方法。 区块链是不可篡改的，这一点并没有改变，但是通过双重哈希，可以根据各国法律进行限制和记录对区块链记录的请求。 这也是比特币能够符合监管(而不是主动迎合监管)的一个体现。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 双重哈希 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-mining/professionalize.html":{"url":"chapter-mining/professionalize.html","title":"节点的专业化","keywords":"","body":"节点的专业化 中本聪的愿景其实是一个点对点现金系统，根据比特币白皮书的描述，它并不是由每个用户参与网络成为节点，从而搭建的现金系统。本质上比特币的交易是由公私钥体系和数字签名来保证安全的，在这个体系下用户的点对点交易，指的用户可以不经过任何第三方确认，就可以把自己的币签名、交易生效，然后直接传给接收方。为了解决在这个现金系统中可能出现的双花欺诈的现象，引入了矿工记账的形式。 所以，中本聪愿景，他是想建立一个不需要依靠任何第三方进行确认就能形成用户和用户之间直接交换价值的这么一个现金网络。在 BSV 的基础上：一是尊重现有比特币协议的技术，从安全、稳定、可扩容、零确认这四个方向来推进，达成更大规模并超越任何支付网络，包括现有的信用卡网络、支付宝、微信等等。 本质上比特币的挖矿不像大家想象的那样，认为” 区块的传播 “非常重要。在用户的点对点交易的情况下，一方把交易签完名发给另一方以后，这个事情已经完成了清算，收款方会主动的向所有的矿工去查询，看看这些矿工是不是都收到了同样的交易。在先到先得的规则下，如果百分百的矿工都收到了某一笔交易，那么这笔交易无论如何都会进入到下一个区块的，而不会被拒绝，此时其实不会出现双花，这是我们矿工挖矿的过程。所以，对于用户来说交易并不一定要等到出区才能确认，矿工在这个过程当中的出块只是参与节点的不同矿工同步自己状态的一种办法。 不过，因为有激励的存在，矿工是有动力来提升自己出块的传播速度的，所以矿工会不断的改进自己的连接性，不断提升自己的处理速度。 比特币最开始是中本聪自己一个人孤独挖矿挖了一整年，其他人并没有因为他已经挖了一年就不参与这个项目，认为项目不够去中心化。所以，比特币的矿工节点是任何人只要有算力，愿意投资，他有不经过任何人同意就能直接参与的权利，并且已经在挖矿的矿工是没有手段可以阻止别人加入竞争。这市场是自由进出的，可以随时加入，和 PoS 不同，能源的分布是非常平均和去中心化的，有便宜的能源就可以参与进来挖矿。这也体现出 BSV 资本主义特性残酷的一面，如果你竞争失败了，那么你只能退出，剩下的就是做得非常好、各方面有优势的节点，同时这种搏杀带来的进化也能促使矿工提升自己的效率。在 BSV 的路线图里面大家可以看到明年就会把区块的上限拿掉，所以 BSV 也将不会再对矿工进行大额的补贴，以后对于矿工来说需要投入大量的硬件来处理海量的交易，并且收取交易手续费，在这种情况下竞争优势就非常重要了。 本质上来讲都是处理交易，完成谁的成本最低，那么它就具有最好的竞争优势。而从成本最低的角度来看，BSV 矿工会竞争降低自己的成本，处理更大量的交易。如果很多人相信私有产权、相信资本主义可以极大的促进生产力的发展，通过看不见的手对市场进行调节的话，那么他就会相信这种竞争化的产物一定是能够产生最高的效率、以及最低的成本。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 节点的专业化 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-mining/small-world-network.html":{"url":"chapter-mining/small-world-network.html","title":"小世界网络","keywords":"","body":"小世界网络 什么是小世界网络？ 在数学、物理学和社会学中，小世界网络是一种数学上图的类型，在这种图中大部分的结点不与彼此邻接，但大部分结点可以从任一其他点经少数几步就可到达。若将一个小世界网络中的点代表一个人，而连结线代表人与人认识，则这小世界网络可以反映陌生人由彼此共同认识的人而连结的小世界现象。 比特币节点组成的网络是一个小世界网络，这是论文《Exploring the Bitcoin Network》中得到的结论: One important result concerns the relationship of network usage and exchange rate, where a strong connection could be confirmed. Moreover, there are indicators that the Bitcoin system is a “small world” network and follows a scale-free degree distribution. 这意味着，比特币网络中节点的紧密度比许多人想象的要密得多。 小世界网络的意义 小世界网络的意义在于，参与的节点大部分会紧密连接，使得信息广播在整个网络中的得以高效传递。同时这些节点组成的网络具有良好的扩展性，新加入的节点可以根据自身情况迅速融入其中，退出的节点也不会影响到整个网络系统。 在谈论网络拓扑结构的时候，人们通常会认为是以下几种形式。 作为一个去中心化的网络，比特币网络很容易让人认为它是处于上图中第二和第三种状态之间。这样的网络结构也被称为 Mesh 网络。在这种状态下，平均每十分钟一个区块要传播至全网，需要通过若干节点的几跳（相邻节点的一次传递叫一个跳）的传递，才能使得区块从网络的一端传递至另一端。 而在实际情况中，节点会倾向于与连接性良好的其它节点保持紧密关联，以便能尽快地接收交易信息以及将自己打包的区块传递出去。这使得节点在加入比特币网络后，会尽量与更多节点直接关联，从而让整个比特币网络慢慢变成了一张近完全图（Near Completed Graph)。下面的视频，生动地显示了新节点不断加入比特币网络后整体变得更加紧密的过程。 (视频需要翻墙 https://www.youtube.com/watch?v=D0Jqah-DrpU) 小世界网络使得在比特币网络中广播区块交易信息非常高效，平均在两跳之内即可将信息同步到大部分的节点。这也是比特币网络自然进化的结果：各个节点之间是竞争关系，因为它们需要争取下一个块的打包权；同时他们又不得不与其它节点保持良好沟通，以保证自己在挖矿过程中不处于劣势。 小世界网络是否让比特币变得中心化？ 这是一个很多人无法理解的坎：要尽可能地与更多节点保持连接意味着需要提升节点的硬件性能。如果最后变成了都是服务器级别的节点，这不会让很多爱好者无法自己在家运行，最后只有少数几个大矿场参与的游戏？ 这是一个很值得讨论的问题。 关于去中心化的更详尽讨论，我今后会另外撰文。在这里，希望读者能够先思考一下：去中心化的度应该如何衡量？在人人自建节点挖矿和只有屈指可数的节点参与之间，怎么样算足够去中心化？如何尽量保证比特币网络能够足够分散而不会因为单点故障而崩溃，同时又能尽可能保持整个网络高效运作？ 中本聪在比特币初期，孤独地一个人挖了一年之久，那时的比特币网络是中心化的，因为如果中本聪关了机后整个网络将停止运作。但那也是去中心化的，因为它对任何人开放，也随着后来加入的人越来越多，一直发展至今天的模样。 因此，对于这个问题，比特币的节点组成的小世界网络是对外开放的，它不像 EOS 这样指定了候选人，任何节点都可以自由地加入其中并有机会挖到块。同时这也是竞争激烈的，通过优胜劣汰的方式，让一些过时的设备不得不出局，从而让整个网络的承载能力能逐渐提升。 矿工网络的经济激励 很多人认为矿工的挖块就是刷哈希、扔色子，其实并非如此。PoW 并不是 Proof of Hashing，比拼的不是哪个矿工能以最快的速度出块，而是让所有其它矿工接受自己的工作成果。矿工可以选择在哪一个块上计算下一个块的哈希值，你出的块诚实、速度快、传播性好，匹配了当前网络效率，那么你才会被其它矿工所接受，人家才愿意在你的账本版本上投票。将来我们要把区块上限拿掉，在这以后，比特币 SV 将没有区块大小的限制，但这并不意味着矿工会打包巨块，因为整个网络有承载上限。假设当前网络绝大部分的矿工只能接受 10GB 的区块，当有人决定发一个 100GB 的区块来尝试脱垮大家，很显然，这个区块太大了，大到大家所有的其它矿工都来不及验证，无法有效地在这个区块上投票，那么它一定会成为孤块，因为没有人会在它上面继续投票。 所以，在这个模式的驱动下，矿工之间会保持一个紧密连接、高效高速的带宽组成的小世界网络，在这个小世界网络里面，矿工在合理大小的区块的传递上是高效的，任何的从一个矿工到达另外一个矿工的消息通讯，最多只需要经过两跳。 所有的矿工为了减少损失，增大收益，会尽可能提高和其它矿工的连通性，速度收到来自其它矿工刚出的块，并开始挖自己的下一个块。同时，在自己出块时，尽快把自己的块传递给其它的矿工，让别人在自己的区块上工作。由此可见，矿工之间的联通性受到矿工出块、孤块率的影响，同时被矿工追求更高收益的贪婪驱动力所推动着不断提升。在比特币世界里面，矿工自然而然地形成了一个小世界网络，每一个矿工节点和其它矿工基本上都保持着良好的连接，这样任何一条信息最多经过两次跳跃，就能够完成在矿工中的传播，它意味矿工之间的网络将成为下一代互联网的核心骨干基础设施。 在这种情况下，我们所有的用户和服务提供商并不是矿工，他们都会运行一个叫做 SPV（简单支付验证）节点的东西，和矿工之间的小世界网络保持紧密连接，全世界可能有几十上百号矿工，那么你可以选择一个离你速度最快、最近的矿工进行连接，然后你可以委托他们帮你把消息传递给你的目标的另外一个用户，这是接下来作为矿工的基础设施可以为大家提供的服务。 矿工和用户之间的每一个连接全部都将是由公钥进行控制和识别的，在接下来的 IPV6 地址背后由于 CGA(Cryptographically Generated Address) 的加持，都会具备公钥和私钥。那么可以通过这种方式，极大改善我们当前互联网的连接，当每一个参与者通过自己的电脑，委托矿工，就可以在四跳之内将信息传递给目标服务器，这个结果足够让人惊讶了！因为在当前，十跳之内已经是很快的结果了，尤其在中国网站里你要访问美国服务器，你需要层层往上找到边界网关服务器，再层层往下去翻到目的地址，这中间的过程没有十几跳是完不成的。但是在可以预见的未来，我们将可以看到所有的浏览器、所有的用户、所有的手机都可以使用 SPV 的方式和矿工保持直接连接。这是比特币这个点对点的现金系统的真正奥义所在，在双重的比特币网络一节中，我们将更清楚地说明这一点。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 小世界网络 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-mining/competition.html":{"url":"chapter-mining/competition.html","title":"竞争的本质","keywords":"","body":"矿工的博弈 这个比特币的记账权是由矿工通过算力来争夺的。谁的算力大，谁就有这个记账权。那么，是不是说，算力大的矿工说了算呢？矿工到底这个 “记账权” 是什么意思呢？有一个占 30% 的 “大矿工”，是不是可以说了算呢？还是说，如果有一个矿工拿到了记账权，就可以随意记录他认为合理的帐本？ 矿工的 “记账权”，其实是一个误解。矿工并不是在记账，而是在使用自己的算力，“不间断的”，在自己认可的 “可能成为最长链的一部分” 的区块上投票。 要理解这个，我们要从比特币的本源开始说起。 首先，比特币是一个点对点的现金系统，这个点对点现金系统的点对点部分，是通过椭圆曲线签名的安全性来保障的。当你（发送方）把一笔交易（记载了比特币的转移，当然，也可以记载了其他信息），使用发送方的私钥签名之后，传递给了接收方。双方的清算已经完成，也只有你（发送方）拥有双花的可能性。 在交易多方都是诚实的情况下，这种签名认可的方式，构成了整个交易可追溯可查证的历史记录。（参见白皮书第二章） 如果，我们的每个参与方，都使用 “先到先得” 的方式来在自己的本地构建账本，那么也是完全可以实现点对点的现金系统的。 但是，我们其实并不能保证这个先到先得，因为网络状况复杂，也可能所有参与的用户先收到的，未必是完全一致的。因此比特币使用区块的方式，来明确交易的先后。这些区块前后通过哈希形成了链。（参见白皮书第三章）。 到这里，才引入了比特币很特别的创造，PoW。工作量证明。如果存在多种互相冲突的账本，那么我们应当通过工作量来确定，哪个账本最有可能是对的，最有可能是其他所有人看到的那个版本（也许自己是被欺骗的）。除了信赖最多工作量累计之外，我们并没有其他更好的参照标准。（参见白皮书第四章） 那么，重点来了，我们是不是应该看到区块上出了一个新块，就认为某个账本是真实的呢？ 假设，矿工发现，自己的交易，和最新的区块有冲突，是否应该放弃手里的交易版本，去跟随最新的区块呢？ 我们可以认为，在交易没有任何冲突的情况下，跟随一个区块高度更高，累计算力更大的链，是矿工的合理结果。 这个合理结果，是因为如果全网的所有算力都遵循同样的结果，即使少数算力不认可这个账本，也依然无法在累计工作量上超过多数算力。If a majority of CPU power is controlled by honest nodes, the honest chain will grow the fastest and outpace any competing chains. 但，矿工也有其他的选择。如果矿工认为这个区块并不符合自己和绝大多数同样矿工的利益，他更愿意在一条将来收益更高的链上工作，那么他可以选择直接拒绝掉这个他不认可的区块，回到上一个认可的区块继续工作。 有的时候，这个事情被认为是 “分叉”。矿工有能力根据自己和其他矿工的多次重复博弈的结果来选择某个区块，是关键结果。 PoW 下的孤块、其他矿工的接受程度，是一种无法被修改和伪造的，博弈信号。 具体可以参考 Wright 博士的 “铁与钢”。 https://medium.com/@craig_10243/iron-and-steel-f4898687f6b0 下面我举一些可能的博弈的点。 上面说的 Wright 博士文章里面提到的，矿工面对自己的有限投资，可能有很多种投资方向。 矿工可以选择：1. 增加算力，提高自己的收益占比；2. 提升连通性，降低自己的孤块率。 每部分投资，都需要考虑如何获得更大的综合收益。因此，矿工并不能仅仅投入在某一个方面，而是通过同时在算力和连通性上投资，获得更高的收益。 通过观察其他矿工拒绝 / 接受的情况，矿工应当可以知道当前的最佳策略是怎么样的。当矿工打了一个巨大的区块，并被网络所接受，你也没有观察到有人拒绝，那么可以认为这个区块代表了网络平均水平以上的处理能力。如果自己在这个更大区块上，孤块率显著提升，那么代表自己需要更多的投入在连通性上，而不是继续增加算力。 如果发现一个巨大的区块，被网络拒绝（发现了另外的分叉），那么就应该知道此时这个更大的区块，是超过了某些矿工的接受能力。这个时候需要考虑并猜测其他人的处理水平，去考虑自己的策略，选择在巨大区块上继续投票，还是选择分叉而拒绝这个区块。 往往，这个博弈需要进行多轮，直到我们可以很确信的知道某个巨大的区块已经远远落后了，才会选择放弃。 这是矿工在区块大小上的博弈，选择更大的区块，打包更多交易收取更多交易手续费，但是会提升自己的孤块率，孤块率升高又会降低自己的收益率。 接下来我们说矿工在零确认交易上的博弈逻辑。 我们都说，矿工用自己的算力在保护比特币账本。但是，如果矿工受到外来的可能的攻击（都说有 30% 算力，都有可能攻击生效），也许运气好的时候，就会被小算力攻击生效。（举例，我们的小矿池，今天上午连续打出了三个块，如果按照累积工作量来看，发起攻击可能因为运气好就可以成功）。 在做空比特币的人眼里，只要能够成功发起攻击一次，可能就有丰富的回报。 那么，矿工应该如何应对这种行为呢？对矿工来说，面对的选择变成了： 选择一条工作量目前更高，但是存在明显双花的链； 选择一条工作量暂时更低，但是诚实的链。 矿工并不能百分百确定某条链是否算力可以保持最高，并且获得了其他矿工的支持。但是矿工肯定不愿意接受一条存在明显双花，破坏了比特币安全体系的链。 所以，矿工一旦检测出双花的区块，应该要能选择是接受，还是拒绝。诚实的矿工，会通过拒绝在双花的区块上工作，来保护比特币的账本安全。 我们都知道，比特币零确认，在我们假设矿工都使用先到先得的策略，且收款方对所有矿工都进行了双花查询得到矿工接受交易的反馈之后，是安全的。但我们无法排除 “矿工作恶” 的情况发生。 这个时候，我们怎么知道，矿工的交易，是被人愚弄了（故意给了一个双花交易给某个矿工），还是有矿工在作恶呢？ 激励措施在这里发挥了作用。 矿工为了避免自己在遇到双花攻击的时候，会因为打包错误的交易而被孤立，需要主动的检测自己收到的交易是否和其他矿工一致。这里插播一个广告，我们的 bitsonar 项目（bitsonar.mempool.com）的初衷，就是帮助矿工去找到所有的 “其他矿工”。 矿工会在收到每一笔交易之后，都主动的和其他矿工进行查询确认，标记处可能可疑的双花交易。 如果矿工从每个其他矿工都得到了交易没问题的反馈，而在出块的时候却出现了一个双花的块，那么，这个区块是否更有可能是对诚实账本的攻击？那么，所有的诚实矿工的理性决策，就是主动孤立这个账本，用自己的算力投票来保障比特币账本的安全。 如果矿工从其他矿工中收到了交易有问题的反馈，那么这个反馈也会传递到收款方那里，收款方就可以检测到双花交易从而要求付款方等待。 在这个博弈下，最终产生了这样的结果：交易在矿工中传递，是矿工为了安全选择的主动行为，这又提升了交易的传播速度。同时矿工又会主动拒绝掉和自己通过其他矿工确认的交易有冲突的区块，来实现账本的安全。 那么，这个时候是否是一个 “预共识” 呢？并不是。矿工的拒绝 / 孤立行为，是每个矿工独立作出的，并不是在代码里面写死的。有的矿工可能会坚持 6 个区块，有的矿工可能会坚持 100 个区块。他们根据自己的钱包（笑）多少，来选择和其他的矿工保持一致。 矿工的博弈，还体现在对费率的竞争上。 我们的 1sat/byte 的限制，以后是完全可以拿掉的。只要矿工愿意，他可以打包任何合法的交易。但这个交易的费率可能对打包的矿工来说有利可图，对其他矿工来说无利可图。 这样的竞争博弈，就会促使矿工不断降低自己的费率，来争取在合理的成本范围打包尽可能多的交易，收取尽可能多的手续费。 矿工费，是一个完全竞争的 Fee Market，注意这并不是设定了区块上限后的竞价排名，而是为了争取更多交易，更高手续费而降低费率门槛的矿工之间的竞争。 这个手续费并不是无限低的，因为更大的区块，带来了更高的孤块率，又会降低矿工的收益。 但是随着网络的不断发展，传输速度不断提升，这部分带来的成本优势，也会让每个用户从更低的手续费上获益。 我们并不能将策略的决定权，死板的交给开发者去决定。而应该引入竞争，用博弈的方式，让矿工在收益和成本之间权衡。通过竞争，来达到整个系统的效率的最优。而正是这种自由竞争的机制，更加保护了比特币网络和账本的安全。 我们并不需要协商一致的社会共识，通过竞争和竞争所发出的惨烈的信号（孤块损失），来进行优胜劣汰，奖励在这个系统里面贡献更多的参与者，进而激励所有参与者加大投入和贡献。 我们要看，白皮书中很重要的内容，是第十二章的最后一句话：They vote with their CPU power, expressing their acceptance of valid blocks by working on extending them and rejecting invalid blocks by refusing to work on them. Any needed rules and incentives can be enforced with this consensus mechanism. 任何规则和激励，都可以通过这种基于最长链 CPU 竞争的共识机制来引入。矿工在自由竞争环境下，是根据自身的策略选择，找到最适合的发展路径，对长远最有利的，有更高收益的路径。这并不代表矿工可以肆意修改竞争协议，或者通过联盟的方式来共同实现任何破坏这种竞争激励的规则。 矿工的为所欲为，是可以在尊重目前所有点对点交易的情况下，使用拒绝和接受任意块的方式，使用自己的算力来进行投票。 好了我的分享就到这里，全都是手打（除了复制的白皮书部分），大家来猛烈的提问吧。 问答环节： XIAOTU: 大哥的矿工是指矿池吧？ 哲亮：有算力可以打包出块的任何，目前主要是矿池节点。 邱少：在这样的机制下 51 攻击出现的可能性及影响如何？ 哲亮：我认为，不会有 51 攻击。因为 51% 的算力应该持续诚实挖矿才有更高的收益。如果是短时间的 51 攻击，因为我刚才说的矿工自己设置的拒绝 / 接受的策略，并不能很有效的借助 “诚实” 的矿工的力量来反对 “死硬” 的矿工，攻击的难度高了很多。所以，如 Wright 博士所说，其实是 51% 防御，而不是 51% 攻击。是所有诚实的矿工团结在一起，持续的反对大算力的短时间的攻击。所有交易所和账本使用者，会发现诚实的链会一直存在，不会有任何攻击，那么他们会跟随诚实的链，而不是段时间双花攻击的链。 刘晔律师：一聪一字节是硬编码入底层协议的么？ 哲亮：不是，参数设置。我们目前只是没有动力去改，因为改动这个需要配套很多其他的内容。第二内存池、交易优先级等策略，会在矿工中首先实施。并且很重要的可能会没有默认值，完全让矿工自主控制费率和优先级策略。比如，我说的多次的，给免费交易开空间。我们可能可以允许几兆的空间来放免费交易，高币天的交易，是大部分用户转账需要的，他们可以近乎零成本的使用。但是开多少，这个完全矿工自己决定。 满船：请问大哥：在用户，矿工，开发者之间，bitcoin 系统里占强势地位的是矿工？或者简单粗暴理解，矿工决定一切？ 哲亮 ： 我认为矿工应该决定一切。并且，其实矿工本身也是用户，也是开发者。我不相信在这个体系里面没有沉没成本的开发者做的贡献。 D5：我可否简单的理解为，在正常运行过程中，主角是矿工，几乎没有开发者什么事。那么请问，锁死底层协议之后，假如今后运行过程中大家发现，确实有需要修改底层协议某个地方的时候，如何提请操作，由谁来界定、怎么界定哪些属于可优化的，哪些属于不能动的？ 哲亮：我觉得除非出现巨大的安全漏洞 协议不应该改了。 文帅：对于未来手续费作为主要收入时，是否可能有矿工为了积攒手续费，而不乐意传播自己收到的交易？ 哲亮：不太可能。我刚才说了，收款方和矿工都有动力去传播交易。好处大于坏处。 文帅： 跟矿工单独签订交易，应该属于矿工倾向独占交易的一种。 哲亮：但是依然需要广播确认，以及，这个排除在双花之外的。 吉泽：我认为市场会改变一切，当 BSV 大范围使用，确实发现协议无法满足市场需求时，市场的力量或许会促成协议改变。 你怎么看？ 工会评估，成本和收益。协议的实现存在成本。 一切都是竞争。 在极限情况下，时间是终极货币。 去中心化并不是目标。它是一个用于实现特定目标的工具。没有理由，我真的认为没有理由为了去中心化而去中心化。实现一个去中心化的系统是需要付出代价的。 问自己，你想要达到一个什么目标？ 为何你要让这个系统没那么中心化？ 是为了更强韧吗？多强韧才算足够呢？ 是为了安全性吗？那是需要平衡的——过于去中心化比中心化更不安全。你要在保密性与更强的安全性和强韧性之间找到一个平衡。 每个新增系统都会增加整个系统的成本。如果你的节点数增长了1000倍，那么你花费这些成本的收益是多少？ 比特币是在罗马共和国的方式上实现的民主。在区块投票时，有时候100人有1票，但他们有更多的利害关系，他们有更多的投资。而那些投资较少的人可能30,000人才有1票。 并不存在一个简单的能让所有人都平等的体系。投资是一个很好的向导——而股权证明（PoS）不是，股权证明（PoS）是你拥有并想留存的东西，而投资是你愿意拿去承担风险的东西。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 竞争的本质 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-mining/forks-and-consensus.html":{"url":"chapter-mining/forks-and-consensus.html","title":"分叉与共识","keywords":"","body":"分叉与共识 共识规则决定了什么样的交易和区块是有效的，是比特币网络中的节点能互相独立工作并达成一致的基础。长期来看，为了演进比特币系统，添加新特性，修复 bug，共识规则并不总是一成不变的。但与传统的软件升级不同，比特币没有官方机构，其软件的升级，需要协调和考虑多数系统参与者的意见。 这篇文章，介绍升级共识规则的两种方式，软分叉（Soft fork）和硬分叉（Hard fork）。 兼容性 在开始之前，先介绍两个软件开发中的概念，向后兼容（Backward Compatibility）和向前兼容（Forward Compatibility）。 这里的 “前” 和 “后”，是根据英语的习惯描述的，以现在的软件为基准： “后”（Backward）指的是向后退，是过去 “前”（Forward）指的是向前进，是未来 Office Word 2007 可以打开 Office Word 2003 创建的 doc 文档，是向后兼容。Office Word 2007 可以打开 Office Word 2010 创建的 docx 文档，是向前兼容。 一般来说，软件做到向后兼容，比做到向前兼容要容易。 软分叉 软分叉的意思是，比特币协议发生了一些变化，但旧节点却不能发现这个变化，从而继续接受新节点用新协议挖出的区块。 新版本软件产生的交易或区块，可以被旧版本软件验证通过并接受，反过来也成立。旧节点将会在他们 不能完全理解 的新区块上继续添加区块。 软分叉不是真正的分叉，如果有节点没有升级软件，软分叉后的区块链看起来就像下面的样子。 软分叉很好理解，就像你使用 Office Word 2007 和 Office Word 2010 一样。 你能用 Word 2007 打开和编辑 Word 2010 创建的 docx 文档，反过来也一样 但你不能在 Word 2007 中使用 Word 2010 提供的新功能，就像软分叉后，旧版本软件无法知道新的共识规则一样 还记得 CLTV 时间锁么，由 BIP-65 通过软分叉激活。 新版本软件因为知道新的共识规则，会在验证交易时验证时间锁是否已经释放，但运行旧版本软件的节点并不会这样做。 这正是软分叉被诟病的地方，软分叉 放松了验证 。 一家公司里有一些审计人员，还有一些交易员。交易员想开展一项当前不被公司认可的新业务，审计人员会拒绝这种新交易。有一天，某个机智的交易员想出了一个方法，“我要做一些衍生品合约交易，但会在交易记录上写成买入土地。当你们看到的时候，就在脑子中把土地替换为衍生品合约，一切照常，审计人员不会发现的”。 这里的审计人员就是 拥有算力 的全节点（运行着旧版本软件），而交易员的行为就是软分叉。 硬分叉 硬分叉会带来区块链的永久分叉。 新版本软件产生的交易或区块，旧版本软件无法识别或验证通过，就像你使用 Word 2003 无法打开 Word 2007 创建的 docx 文档一样。 对某次硬分叉升级，如果绝大多数人都同意（都会使用新版本的软件），硬分叉后的区块链形如下图。 因为不存在分歧，所以旧链不会被继续延长（没有算力支持），硬分叉后仍只有一条链。 但如果双方矛盾不可调和且都有 算力支持 ，硬分叉后便会有两条链存活下来。 因为区块大小的争论无法调和，Bitcoin Cash（BCH）从 Bitcoin（BTC）的区块高度 478558 硬分叉诞生 因为发展理念的不同，Bitcoin SV（BSV）从 Bitcoin Cash（BCH）的区块高度 556767 硬分叉诞生 请注意，“学习笔记” 系列文章，一般使用 bitcoin 来指代协议，使用 “比特币” 来泛指 Bitcoin（BTC）、Bitcoin Cash（BCH）和 Bitcoin SV（BSV）这些不同版本的比特币（同一协议的不同实现）。 总结 软分叉和硬分叉是改变共识的两种方法 ，它们都是 “向后兼容” 的，否则新版本的软件将 “不认识” 过去的区块，无法从头验证整个区块链。 软分叉还是 “向前兼容” 的，旧版本软件会接受新版本软件产生的区块，只是不能完全 “理解” 而已，这在某种程度上放宽了共识的验证。 硬分叉不是 “向前兼容” 的， 没有分歧的硬分叉升级不会产生两条链（不会产生新的币）。 一个自由的社区，会在发展过程中不可避免的产生分歧。当分歧实在无法调和时，相较于陷入无尽的争吵和诋毁，停滞不前，通过硬分叉分道扬镳（获得算力支持并存活下来）可能是更好的选择。毕竟，各自按路线图好好发展，构建完整生态赢得更多用户才是最重要的，虽然这样的硬分叉会带来社区的割裂和短暂的混乱，但这是自由的代价。 精通比特币（第二版）译文 原文 有关共识和分叉 - 硬分叉和软分叉有什么区别？ (Mike Hearn) On consensus and forks 基于UTXO高度的激活 - 创世纪第3部分的路线图 2019年7月26日 解开是一件非常棘手的事情。有很多东西在十年之内就被搞砸了，而且有些东西被破坏得太厉害了，以至于它们根本就不能干净利落。比特币SV团队进行了大量的研究，广泛研究现有和原始代码，这是一个非常陡峭的学习曲线。但我们对我们现在需要实施的路线图充满信心。但是有一些务实的警告。 我举个例子。算术运算代码。原始BitCoin使用了一个允许任意大小数字的数字实现。也就是说，它不像许多系统那样限制在32位或64位数。也可以使用256位（和更大）数字，它们对加密函数非常有用。在比特币历史的早期，这个被改变并限制在32位数字以及引入可怕的CScriptnum类。删除直接在脚本中进行加密数学处理的能力（没有巨大的开销）对比特币来说是一个巨大的损失，这是我们明年2月将要解决的问题。但问题是如何？ 许多问题的解决方案 我们的下一个路线图文章将描述OP_RETURN即将发生的变化，因为这是我们希望比特币生态系统尽可能提前了解的变化。这个变化的机制就是这篇文章的内容，我们分别解释它的原因是因为它是一个我们将在很多方面重用的概念。我本来可以将它合并到下一篇文章中，但它会一次又一次地出现，所以值得给它自己的帖子...... 比特币的黄金法则 以向后兼容的方式转换算术系统是一件非常棘手的事情。我们可以建立测试，直到我们脸色发青，但我们如何确定我们已经涵盖了每一个边缘案例？是否可以确保所有情况都可以向后兼容？我们不知道。但我们当然关心，因为我们在比特币（GOLDEN规则）中生活和呼吸的规则之一，永远不会让可花费的比特币变得无法承受。决不。甚至不是偶然的。 谢谢P2SH 如果你看一下比特币的历史，这个问题可能没有我们想象的那么大。比特币历史上实际使用算术操作码的交易少于100个 - 我们可以看到。所以，我们不能只是编写测试来确保所有这些都是可花费的吗？可能（虽然不是在所有情况下）但更大的问题是支付脚本哈希交易。P2SH具有一个有趣的特性，即输出脚本的内容在区块链中不会显示，直到花费它为止。这与原始设计形成鲜明对比，原始设计中锁定脚本必须在创建时在区块链中公开发布。这导致在尊重'永远不会使可比的比特币不可靠'原则方面存在一些困难。因为我们不能假设P2SH脚本中有什么。我们必须假设它们中的一些包含算术操作码，因此确保我们需要为每个可能的使用和边缘情况编写测试以确保向后兼容性。许多边缘情况不会存在，实际上可能是最多的。但是我们无法知道哪个，所以我们别无选择，只能测试它们。 正如我之前所说，这很难，也许不可能证明这一点。 避开问题 解决这个问题的简单方法是，对于我们来说，除了算术运算代码的特定情况之外，还有许多功能对我们有用。甚至不要尝试向后兼容。我们只是接受比特币历史的一部分有一些破碎的东西。我们继续支持它，认为有一天，最终所有这些破碎的产出都将用完。也许这已经过去了几十年，但随着时间的推移，我们将能够弃用旧代码。 但是，如果我们继续支持旧规则，我们该如何解决？很简单，我们在某个时间点实施新规则。之后的一切都遵循新规则。之前的一切都遵循旧的规则。大多数比特币共识更改使用我们称之为“基于高度的激活”。也就是说，在区块链达到某个区块高度之后，新规则就会启动。但这可能会破坏遵循旧规则的旧交易。这给开发人员带来了巨大的负担，这种新变化有效地将他们锁定在一系列限制之内，这些限制看起来非常类似于比特币核心之前称之为“软分叉”的限制。软叉适用于numpties，我们不打算购买，因为当你试图取消10年的损害时，它们会受到不必要的限制。 因此，我们不是仅仅实现新规则，而是根据当前块高度，而不是在创建脚本时的块高度。更具体地说，您尝试花费的输入UTXO的块高度被挖掘成块。这是一种非常灵活的激活机制。这意味着使用算术操作码创建的所有输出将继续使用创建它们时存在的代码执行。如果它们有效，则它们始终有效，无论它们是针对哪个规则集设置的。幸运的是，生态系统中不需要进行大量的工具更改，因为很少使用算术运算代码。但这不是我们计划以这种方式激活的唯一变化。支付给脚本哈希本身将以这种方式弃用。在 2020年2月）新的将是无效的（严格来说，它们实际上将成为一个哈希难题，但这是另一个故事）。这是我们将如何使用基于UTXO高度激活的两个示例，以确保顺利且完全向后兼容的路径返回Genesis。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 分叉与共识 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-mining/orphan-block.html":{"url":"chapter-mining/orphan-block.html","title":"孤块，钢与铁","keywords":"","body":"孤块，钢与铁的关系 比特币的设计受到了生物学的启发。 孤块作为一个系统在比特币内部的竞争中起作用。比特币不是为了实现平等分配而设计的，它旨在创建一个竞争系统，让矿工和企业努力获得任何他们能得到的好处，这是一个内核具有竞争性的系统，它不适用于任何其他形式。 因为孤块的存在，比特币需要矿工在一定程度上保持低效率。这有助于对它们进行排序并确保它们正确地调整其资源，以确保不仅是投入到算力，增加网络的连接性同样是对比特币系统的重要方面的投资。孤块帮助矿工将投资分配到资源中。也就是说，孤块的建立可以激励矿工花更多的钱和资金来确保他们与其他矿工密切联系。 这都是事关矿工收益的。但是，就像所有商业上的事物一样，大多数人只看到了短期投入的沉没成本损失却忽视了其对整个系统的意义。 我建议阅读以下文字。 生物游戏 矿工互动这方面的游戏模型是 “猎鹿问题”。 这是基于 Jean Jacques Rousseau 关于两个猎人之间合作策略的假设（Skyrms，2004）。这些人可以联合捕猎雄鹿或单独捕杀兔子。回报最丰厚的是合作捕获雄鹿，它比捕野兔有更大的回报。狩猎雄鹿的要求更高，但需要相互合作。如果任何一个猎人单独追捕雄鹿，那么成功的机会可以忽略不计。狩猎雄鹿对社会最有益，因为这种活动创造了最佳回报。系统中这个游戏的问题更普遍的是它需要玩家之间更多的信任。 比特币通过引入不对称性改变了这一点。对于不同的行为而言，其成本会逐渐增加，并且与 “攻击” 相比，成本更偏向 “诚实” 策略。也就是说，我们已经引入了激励措施，使矿工更有可能采取行动来追捕雄鹿并使网络安全，而不是使他们叛逃或寻求小额收益。该系统对 “诚实” 的矿工予以奖励。 这个游戏有两个纯策略均衡，其中两个参与者（矿工）更喜欢低风险均衡而不是更高的收益均衡。该游戏既是帕累托最优又是希克斯最优，但次优和低效均衡对任一玩家造成的风险都较低。由于与其他玩家策略的收益差异小于最优解决方案的收益差异，因此更有可能选择此选项。说明这一点的另一种方式是均衡是收益主导，而另一种策略是风险主导。 这是这些游戏形式的问题。为了缓解风险回报困境，比特币引入了长期不对称性，随着时间的推移针对资源投入的不对称会变得更大。连通性的回报使得密集连接的系统的成本和风险位置低于预期。 矿工之间的策略包含了增加哈希率来阻碍连接性的相互矛盾的选择。我们在图 3 中显示了这一点，数字表示代表特定情况（采矿竞争市场）的支付数字，而广义关系采用以下形式： 结果不是关于将产生什么的明确陈述。 在这个游戏中，“鹿” 是 “创建一个近乎完整的小世界网络” 的愿望，而 “野兔” 是为了增加更多的哈希能力（即增加对 ASIC 的投资）。人们不希望自己在矿工之间创建一个更密集连接的网络，而是添加 ASIC 以增加矿工哈希率并最大化系统连接性的组合。在某些时候，更多的网络连接增加了矿工的利润，而另一方面，更多的哈希率作为投资更有效。 挖矿投资就像猎鹿问题一样 创建更密集连接系统的收益对于比特币中的矿工和用户都很重要，但是策略错位的风险导致次优均衡。所需要的是信令过程。信号将允许玩家与更优化的策略保持一致。拥有更多安全系统（更密集连接）不仅符合用户的利益，而且符合矿工的利益。对于经历这些事件的单个矿工而言，孤块是昂贵的（尽管不是整个网络的成本），并且做更好连接的矿工可以合理地期望更低的孤块率和更多的区块奖励。 随着猎鹿狩猎的收益与野兔狩猎的收益之间的比率减少，进入雄鹿狩猎的动机减少了。因此，将更多连接性变为任一矿工的主要目标的可能性就越小。 因此，不需要为矿工提供孤块的成本，就不太可能将玩家的策略从野兔改为雄鹿。 由于两个玩家都没有偏离的动机，因此这种策略的概率分布被称为游戏的相关均衡。 值得注意的是，该均衡的预期收益是 7（1/3）+ 2（1/3）+6（1/3）= 5，这高于混合策略纳什均衡的预期收益。 矿工可以轻松确定与每种策略相关的成本。这是通过利润和孤块的组合（以及通过具有孤块的个体矿工的相关损失）发出的信号来决定的。 矿工需要参与竞争。 每个矿工都需要做的更好，但不同于一个系统。对于许多开发人员和工程师而言，这可能是违反直觉的，但系统的设计使得每个矿工都能够更好地连接到整体矿工。他们竞争着却有更紧密地联系在一起，更密集地连接使得更低的延迟。如果矿工具有较低的延迟，该矿工可以获得比另一矿工多一点的增益。 相反，如果网络更有效，Sybils 的成本更低。这可能有助于家庭用户和树莓派机器，但不能帮助那些在游戏中使用皮肤的用户。比特币的设计不是为了让您在投票时没有任何兴趣而进行投票。那就是推特，它孕育着魔鬼和那些对系统毫无兴趣的人。 当我们提高比特币的效率同时，它允许更多的系统充当转发器并连接到网络，而无需在连接上花费同样多的成本。这使得那些不是矿工的人可以以较低的成本开始加入和伪装成节点。 一些微软研究人员在 “比特币和红色气球” 问题中正确地总结了区块链的问题（这适用于现在存在的许多问题，如以太坊）。 这些作者从未测试过该系统。他们没有调查比特币如何工作却假设网状网络。其他人完全没有理解比特币（再次关注网状结构），并提出了基于 Sybils 传播并接管 “私矿” 的不可行攻击。 挖矿不是发现区块；它是关于让你发现的区块给所有其他矿工。 这是一个至关重要的区别。 它不仅仅是对 ASIC 的投资来捕获哈希能力，还包括一系列其他部分。矿工需要意识到以下几个问题： 确保安全， 拥有良好的网络管理系统， 与其他矿工建立高带宽低延迟连接， 冗余， 密集的网络连接到许多地方，允许大量的区块和交易进入他们的系统和节点。 这就是使用非对称游戏创建的。 攻击者的成本远远高于诚实矿工的成本。矿工连接到所有其他节点的成本是系统的一部分。有一个最佳点，增加更多连接变得不那么有利可图。这可能是 98％或 99％或更高的连接性，并且将根据个人矿工成本而变化，但是这种成本与 ASIC 硬件和攻击的成本是不对称的。 通过 10GbE 网络，矿工可以轻松处理 4 GB 区块的连接。我家里就有一个。这没有什么特别的，任何体面的数据中心都具有更大的连接性。安装连接的 0.1％矿工的成本允许 1GB 的区块在 2 秒内在密集连接的系统中获得 1,000 名矿工以及矿工所需资金投入的 1％。 对于攻击系统的一组 Sybil 节点，此级别的连接将成本增加了 9 到 10 倍，使用网状网络和更低的连接需求。 这就是系统不对称的方式。 要攻击矿工，您需要将资金投入到需要长期资本投资的系统中。这不仅仅是购买一套 ASIC 矿工并连接到矿池。该矿池必须具有所需的基础设施，以允许矿池成员在不丢失区块的情况下获得收益，矿池矿工通常可以在矿池之间轻松切换。因此，寻求利用其地位的矿池很快就会成为破产的矿池。 攻击者需要能够拥有比网络其余部分更多的楞边（无序顶点或节点对，即节点之间的链接）。 更糟糕的是，它不只是拥有更多；要求在网络上具有更多的边缘。因此，如果我们有一个由 1000 名密集连接的矿工组成的网络，攻击者需要运行超过 500,000 个密集连接的系统才能充当 Sybils，以便能够像诚实的采矿节点一样具有相同的效果。 今天这种攻击的成本超过了 125 亿美元。它不仅运行了一些树莓派（UASF）节点，而且实现了密集连接的低延迟系统。这是一项重大投资，不是在一些虚拟机中，而是一个完整的密集基础设施，需要长期投资，因为其他矿工会看到它支持与你的节点的连接。因此，任何攻击网络的企图也不仅要求投资即时攻击，而且需要创造长期投资，获得并建立其他矿工之间的信任，发送区块，看起来好像在烧钱并寻求快乐，易于过滤的攻击之前，他们是采矿 “社区” 的称职成员，可以在几分钟内得到缓解。 矿工 Alice 和 Bob Bob 和 Alice 的矿工们说，如果我们取一个小样本作为网络的假设子集，我们给他们每个人分配了相同级别的散列能力，我们就可以开始探索比特币的连接性和延迟意味着什么。在这个例子中，我们将 Alice 和 Bob 分别占整个网络的 50%。这并不现实，但假设 Alice 和 Bob 是两组具有不同策略的矿工。 我们从　开始，她和　各有 1000 单位散列功率。Alice 在系统、基础设施和网络管道方面进行了投资，使她能够以低于 0.2 秒的延迟（即使是大数据区块）连接到所有其他矿工。 Bob 和 Alice 需要交换区块 Bob 已经决定不在他的网络基础设施上花费太多，并且有 3.2 秒的大数据区块延迟。这不是一个巨大的区别，但我们来研究一下影响。 我们平均有 600 秒的阻塞时间。Alice 和 Bob 之间的时间差是 3 秒（3.2-0.2）或 0.5%（3/600），作为 Alice 的增益。这意味着 Alice 实际上是一个 50.5% 的矿工，Bob 现在是一个 49.5% 的矿工。从一个相同的位置，Bob 现在正在输给 Alice 一小笔钱。 为了让 Bob 独自使用 ASIC 获得这种优势，他将需要花费更多。 如果 Bob 再安装 21 个 ASIC 单元，混合之后是这样的： 请注意 Bob 如何使用 ASIC 投资增加 2.1％并增加 0.5％，而 Alice 已经将当前条款投入到网络基础设施的较小投资中，现在系统的实际效果如下： 正如我们看到的，网络的散列率增加了，与增加散列功率的成本相比，扩展带宽的成本变得更低。这是比特币的不对称效应之一。 它是一种控制装置，如果系统变得更有效率，它就会被破坏而不起作用。比特币是一个精心构建的激励和控制系统。正如我多次提到的，它是一个使用选定的加密工具的经济系统；它不是一个简单的加密系统。 鼓励矿工增加系统的连通性，使孤块带来的损失对他们来说很低。如果将其作为整个系统的变更进行，则这不是一个收益。使系统更有效降低了系统中允许攻击的不对称性，并降低了作为小世界而不是简单网格连接的动机。 竞争，而不是社会共识 比特币并没有失败，也没有失去社会共识；它的设计避免了不会落入这种陷阱。没有一个建立在社会共识基础上的强大系统。原因就是激励。如果你不需要投资于你正在做的决定，你不想花时间去理解它们。这就是民主的失败，也是为什么它经常导致煽动。人们在游戏中没有皮肤，而且几乎没有自己的风险。 比特币功能作为参与者，矿工和系统中的企业在这场游戏中有着切肤之痛。他们都必须投资。他们都必须冒着失去一切的风险，这意味着他们总是需要认真评估正在做出的决定。 当然，情况并非总是如此。在比特币的早期，价值比太低了。这一点是不可持续的，永远不会形成一个全球现金系统，它不能超过一个游戏系统，这导致许多人误解比特币认为这是它的设计目标。 孤块就是是矿工投票的方式 最后一点我得记下来。这就是说，孤块也是矿工投票和接受费用、有效区块或他们作为紧急市场寻求强制执行的任何其他东西的手段。 这是矿工们能够诚实投票的唯一途径。 矿工用他们的 CPU 能力来投票，通过扩展有效区块来表示他们接受此区块，通过拒绝对无效区块进行操作来拒绝无效区块。任何必要的规则和激励措施都可以通过这种共识机制来执行。 最后总结下……（只为今天） 这将是一系列文章中的第一篇，这些文章旨在解释人们认为比特币存在的缺陷，以及这些缺陷实际上是如何增强比特币的增长和规模的。 比特币（现金）仍然钢铁般坚强。在过去的几年里，比特币一直是钢制的，其他国家也开始提高纯度，寻求 “完美”。Bitcoin Core 团队在隔离见证上已经朝着成为纯铁的方向迈出了一大步。这是 Bitcoin Core 团队的失败。像铁一样，它的强度不足以承受即将到来的一切。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 孤块，钢与铁 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-mining/myths-of-decentralization.html":{"url":"chapter-mining/myths-of-decentralization.html","title":"去中心化的迷思","keywords":"","body":"去中心化的迷思 去中心化的意义 很多人不明白去中心化其实是分两个步骤的：去中心，然后再统一形成共识。也就说要先去中心，然后再中心化。 一、先去中心化 BTC 软件的设计，就是将区块链完整地备份到每个节点的电脑上，这个软件或者说这个链或者说这个公开数据库一开始就是去中心的，这就完成了第一步 “去中心”。 二、再中心化 问题是去中心之后如何再把记账权统一起来，否则就是各记各的帐，乱成了一团。中本聪最终选择了 PoW 机制来实现记账权的统一，也就是说每 10 分钟，这个记账权就中心化到某个矿工身上，不集中没法记账，但是因为 PoW 是竞争性的，所以下一个 10 分钟，记账权就未必还在这同一个矿工身上了。 很多人就在这个地方产生了误解，认为权力都集中于矿工是巨大隐患。错，PoW 的设计就是要把权力在某一个时刻（出块的瞬间）集中在某个矿工身上，只不过每次集中到的未必是同一个人而已。换句话说， PoW 根本就不保障什么去中心化， PoW 保障的是 2 点： 从短期看，具体在某一个块上，权力必须集中在某个矿工身上以保证数据库写权力的唯一，重点是 “集中” 也就是 “中心化”； 从长期看，权力总是集中在对挖矿投资最大（同时也是效率最高）的人身上，因为他们算力比例必然最大。 如果你承认上面的分析，那你就可以很容易得出一个结论： PoW 机制从来不是为了什么去中心化，恰恰相反， PoW 的目的在于 “把写区块链的权力，归于对 BTC 系统投入最大的人，即最大的矿工获得最大的权力”，也就是说， PoW 就是为了中心化而生的，从来都不是为了什么去中心化。 政府无力去考虑大范围的影响。你可能会问，为什么中央计划总是失败。 任何个人、部门或其他机构都无法预测社会的走向，即使施行了军事管制，结果仍然是不可预测的。 以下讨论仅针对工作量证明（Proof-of-Work）的共识体系： 1）挖矿节点因为有算力，他们能够选择在哪个区块上搭建新区块，也可以选择作废哪个区块，他们用算力来维护共识，这就是在原共识框架内行使 “修复权”。需要注意的是比特币在 2009 年诞生时并没有什么共识，只是中本聪一人之识，随后越来越多的人加入，认可中本聪的愿景，于是才有了 “共识”。也就是说，比特币的 “共识” 是后来者主动认可的，而不是预先敲定的。具体请看以前写的一篇小文章。 2）开发者能够写代码，可以将自己的想法注入整个体系，他们维护整个体系的正常运转，出 bug 时需要他们来解决。从这个层面上来说，开发者拥有的是新建共识（中本聪、Core）或修复共识（比特币后续各维护开发团队）的权力。举个例子，ETH 的硬分叉就相当于是小神童（本身他就是开发者）强行新建并修复共识的行为。 3）非挖矿节点由于是跟随节点，他们本身本不能对网络产生任何影响，甚至还有可能因为硬件配置低而拖慢交易的广播，造成负面影响。由于非挖矿节点既无算力，也无写代码的能力，所以他们无法行使所谓的修复权。他们在既有共识体系内行使 “修复权” 的方式就是与开发者合谋，新建另一套共识体系，比如将工作量证明（Proof-of-Work）体系变更为权益证明体系（Proof-of-Stake），这可能是未来 ETH 会做的事；或者更改工作量证明本身的算法，比如现在的门罗币分叉。而这又和修复原共识体系根本不沾边了。 通过以上分析我们可以看出，在比特币这套共识体系下，获得话语权的唯一方式就是当矿工，你的话语权和你投入的资金规模成正比，这样普通用户才能相信你会为了长期的利益不作恶。否则用户可以随时用脚投票，让你的巨额投入血本无归。你不可能单单通过运行一个廉价的非挖矿节点就想拥有巨大的权力，这从来就不是一个可以自洽的逻辑。我并不反对个人依照自己的喜好去运行全节点，但是妄想能够依靠它就能保护网络就完全是个谎言了，希望大家都能想明白这个道理。 “去中心化” 这个词已经变成一种营销策略。账本可能是分布式的，但当讨论的协议却没有固定、是可改变的，然后还有一个被某组织控制的软件开发过程。没有任何加密货币存在一个分布式的开发过程。事实上，不存在一个没有权威或权力的分布式开发过程。确保分布式系统不受干预地成长的唯一办法是，在现有法律构架下运行，且开发人员不能改变协议。 世间并没有两个比特币，而是只有一个。而且只能有一个。事情的真相是，有的人在寻求权力，而开发人员能做到这一点的唯一方式就是控制和改变协议。 因此，他们可以这样做的事实意味着他们对系统拥有控制权。 这意味着他们对法律范围内的后果负有责任。 他们越是一边反驳这种说法，一边改变着与他们的比特币副本相关的协议，他们就越是展示出他们试图攫取权力和控制的双手。 比特币通过竞争解决了这个问题。作为商业验证者或矿工的实体通过竞争创建区块来证明交易的完整性。只要没有一个人控制超过 50％的网络算力，系统就可以保持稳定而不会被任意篡改。其要求是三方或更多方参与竞争。在任何具有三个竞争性矿工的实现中，只要任意矿工在任意时间持有不超过 50% 的网络算力，系统就是去中心化的。 现实是更多实体会更好。鉴于至少需要有三个竞争主体以及资本主义体系的性质，利润可能导致某些组织失败并破产，建议在任何时候都有三个或四个以上的组织在竞争，以确保不会出现某个个体的失败导致网络不稳定这种一损俱损的局面。 任意系统中只要拥有五个或以上挖矿实体，且没有任何一方控制超过 50％的网络算力，比特币就是去中心化的。随着系统的扩容，运营和攻击这些商业实体的成本显着增加。即使只有少数矿工，比特币作为一个分布式的货币系统仍然是去中心化的，它仍然能够提供其最主要的成果，即货币的稳定性。更重要的是，随着比特币的扩容，攻击网络的成本会显着增加。作为一个全球性的体系，任何政府都无法攻击比特币。 还有一点也要着重强调，如果某个别矿工破产，所有其他矿工的利润都会增加。这会导致使得竞争和利润动态地维持着系统的平衡。当一个矿工失去竞争优势时，另一个矿工就会取代他。这种均衡的结构允许足够的去中心化以保持稳定性，同时提供低成本的且几乎是瞬时的交易。 比特币扩容的成本超过了网络和系统架构的成本。比特币中没有垃圾交易这样的东西。任何愿意为交易付款的人都可以让该笔交易被存储下来。矿工尽全力竞争以尽可能多地包含交易，因为这是他们获取相较于其他矿工的盈利优势的方式，这是让他们保持竞争力的方法。随着时间的推移，矿工们所有的利润都将几近来自于交易费用。 当交易各方直接交易时，比特币是完全点对点的。这就是 SPV 的设计目的。没有必要拥有像 Lightning 那样的复杂系统。Alice 和 Bob 进行一笔交易；Bob 检查 Alice 的交易，确保它是有效的且没有被花掉；Bob 把它广播到矿工网络；矿工们竞争把将 Alice 的这个支付打包到一个区块中，从而获得一笔付款或交易费。比特币之所以是点对点的，不是因为网络运行于分布式的区块，而是因为用户之间相互交易。 没有上限的区块才是区块链正确地打开方式。比特币的使用越多，利润越多，规模越大，交易成本越低。比特币的激励在于它要成为全球互联网的主心骨。 达成此目的的唯一方式就是成为现金。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 去中心化的迷思 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-security/":{"url":"chapter-security/","title":"比特币安全","keywords":"","body":"比特币安全 本章主要介绍比特币安全相关的信息，包括冷钱包，热钱包以及硬件钱包的例子。 收发比特币一般都直接使用钱包软件。在了解了比特币系统和钱包的工作细节后，这篇文章将介绍： 选择和使用钱包软件时需要注意什么 如何安全的生成助记词 使用 热钱包 在日常生活中收发比特币 使用 冷钱包 和 观察钱包 来满足更强的安全性需求 硬件钱包 掌握这些内容，能让你在安全存储私钥的同时也可以方便的使用比特币。 First Things First 选择什么钱包软件，如何使用钱包，都是在考虑两个核心问题： 私钥的安全性如何 是不是方便易用。软件是否实现了我需要的功能，收发比特币时是不是易于操作有不错的用户体验 比特币钱包的种类很多，有运行在电脑桌面上的软件钱包，有安装在手机上的钱包 App，还有需要配合特定硬件使用的硬件钱包。 按按私钥是否联网，可以分为： 冷钱包，钱包中的私钥在 任何时候 都不曾接触网络 热钱包，私钥直接接触网络 在比特币系统中，私钥意味着一切。HD 钱包中的私钥都从种子（Seed）计算而来，种子从助记词（Mnemonic）和密语（Passphrase）计算而来，如果你指定了密语，在备份 HD 钱包时需要同时记录这两者。为了避免计算机和手机病毒窃取信息，你不应该使用任何电子设备记录助记词，一般都采用纸笔抄录的方式备份，或记录在更坚固的介质上。同时直接将密语记在脑子里，作为保证钱包安全的第二因素，在助记词意外泄露后避免资金损失。 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/CsI3Kod.png) 钱包安全涉及到三个部分： 安全的生成助记词 保证助记词备份介质的安全 在使用钱包软件时保护私钥 对于 [2] 如何保证备份介质的安全，这里只提供思路而不展开描述，套路很多，如何选择看你自己。你可以将助记词抄在一张纸上，存放在你认为足够安全的地方，这种方式虽然简单但无法抵御单点失败，一旦这个地方不再安全便有泄露助记词的风险。一般的，可以将助记词抄写到三张纸上，分开存放在不同的地方，每张纸都只记录一部分内容，至少需要两张纸才能知道所有的助记词。 在接收比特币时，需要提供收款地址。HD 钱包在生成地址时，根据路径衍生方式的不同，需要访问扩展私钥或扩展公钥。 在支付比特币时，需要依次完成创建交易、签名交易和广播交易三个 相互独立 的步骤。 符合 BIP-32、BIP-39 和 BIP-44 标准的 HD 钱包，会使用形如 m/44'/236'/0' 的衍生路径，使用路径 m/44'/236'/0'/0/x 作为收款地址，使用路径 m/44'/236'/0'/1/x 作为找零地址，所以对 HD 钱包而言： 只需要访问扩展公钥（xpub），就可以生成地址（收款地址和找零地址） 需要访问扩展私钥（xprv），才可以对交易签名 场景 需要网络？ 需要访问私钥？ 说明 生成地址 ✖ ✖ 创建交易 ✔ ✖ UTXO 需要从网络同步 签名交易 ✖ ✔ 广播交易 ✔ ✖ 显而易见，从头初始化一个 HD 钱包，或从助记词、密语和衍生路径恢复 HD 钱包，或直接导入扩展私钥（xprv）恢复 HD 钱包，才可以支付比特币。直接导入扩展公钥（xpub）恢复 HD 钱包，意味着你只能生成地址接收而无法签名交易支付比特币，这样的钱包称为 观察钱包 ，观察钱包中没有私钥。 你可以在 一直离线 的电脑或手机上生成冷钱包，只用来对交易签名，这台设备一直处于离线状态，所以你不用特别担心私钥通过网络泄露。联网的观察钱包可以实时从网络同步 UTXO 数据，更新钱包 “余额”，你可以在观察钱包中生成地址接收比特币，组合 UTXO 创建未签名的交易。 在需要支付比特币时： 用观察钱包生成一笔未签名的交易，将交易数据保存为文件或二维码 通过 U 盘或扫描二维码转移未签名的交易数据到离线设备（二维码方式的安全性更高） 用冷钱包对交易签名 通过 U 盘或扫描二维码转移签名后的交易数据到联网设备 广播交易 整个发送过程冷钱包一直处于离线状态，私钥也没有接触网络。 一个要注意的点是，在保障钱包安全性的同时，不应完全忽略使用体验。在对安全性要求不那么高的场景，例如用于日常支付的零钱钱包，为了方便完全可以直接使用你信赖的热钱包软件而不用过于担心，就像你不太担心丢失钱包而损失银行存款一样。对于大额比特币的 “存储”，可以考虑使用冷钱包方案，牺牲一些使用体验换来更高的安全保障。 另一个要注意的点是，你应该只从软件官方网站和手机官方应用商店这样的可信渠道下载钱包。如果可以的话，记得验证安装包的哈希和 GPG 签名。 下面将详细演示 Bitcoin SV（BSV）钱包的使用方法，对于 Bitcoin（BTC）和 Bitcoin Cash（BCH）钱包，原理都是相同的。 热钱包 由于热钱包的私钥直接接触网络，所以安全性上会稍显不足，但热钱包简单方便，将其作为日常使用的零钱钱包，再合适不过。你可以根据自己的喜好，在官网的 钱包推荐列表 中挑选。 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/xlK6Seo.png) 我常用的钱包有： 打点钱包，轻量易用的手机钱包，无需下载 App，关注官方微信公众号便可直接使用 Simply Cash，简洁优雅的手机钱包，支持冷钱包功能 MoneyButton，操作体验优异的在线钱包 IFWallet，简单好用的 HD + 托管 “双核” 手机钱包 ElectrumSV，功能强大的桌面钱包，支持冷钱包功能，兼容主流的硬件钱包 以打点钱包为例。 三个功能已足够日常使用 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/NYDKYYV.png) 可以支付 BSV 到地址或微信好友，也可以发送 BSV 红包 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/JKmRs3a.png) 记得备份助记词 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/4rJACZr.png) 你可以通过下面的视频了解打点钱包的更多细节。视频由热心网友 “简美小视频” 制作，非常不错，分享给你。 冷钱包 在 “存储” 大额比特币时需要处处小心谨慎，避免私钥泄露。 安全的生成助记词 如果你担心钱包软件在生成助记词时作恶，可以选择自己生成，通过导入助记词的方式在离线设备上恢复冷钱包。 https://iancoleman.io/bip39/ 是一个颇受欢迎的工具，源码开源在 GitHub 上。你可以将项目代码下载下来，拷贝到 离线电脑 上运行，避免信息泄露。选择要生成的助记词个数，每点一下 “GENERATE” 按钮就可以生成一组新的助记词。 助记词是从熵计算出来的，所以你也可以通过抛硬币或掷骰子的方式生成一个足够随机的熵，从而计算助记词。 你甚至能通过抛硬币或掷骰子的方式直接生成助记词，但因为 BIP-39 助记词的最后一个单词包含校验和，所以过程要麻烦的多，我写了一个 小工具 来解决这个问题，你可以 离线运行 它，原理在助记词一节中详细介绍过，这里只简单说一下。 BIP-39 助记词的最后一个单词其实由两部分确定： 熵的低 $M$ 位，$M$ 取决于熵的长度 熵 SHA256 结果的高 $N$ 位，$N$ 取决于熵的长度 对应关系为： 熵的长度（二进制位） 助记词的个数 M（二进制位个数） N（二进制位个数） 128 12 7 4 160 15 6 5 192 18 5 6 224 21 4 7 256 24 3 8 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/e9wIAzF.png) 假如我想用自己的方法选取 24 个助记词： 选择助记词语言 使用自己认可的方法先确定前 23 个助记词，填到 [2] 里 抛硬币或用其他方法得到一个 3 位的 随机 二进制串，填到 [3] 里 点 “Calculate” 按钮计算最后一个助记词 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/aLiSkp9.png) 同样的，自己生成助记词的套路有很多，如何选择看你自己，不论使用何种方法，都需要保证： 整个生成过程都处于离线环境 选取方法 足够随机 如何使用冷钱包 为了方便截图演示，这里事先用工具生成了一组助记词，指定的密语是 satoshi，使用的衍生路径是 m/44'/236'/0'。 cry devote two glare orchard below box fatigue box document jar night 这个 HD 钱包的扩展公钥（xpub）是： xpub6CbEfGaUsev7P1pDhNKm1YsL9xRNHTDPsS4u9AHsdNnHwvokk6ULWUByqdULY5SH889Bqdknkn6erGCyQreRLns2vrLnbfWSZM3z682jijX 请务必注意！对于真实使用的 HD 钱包，暴露这些信息将会带来灾难性的后果 ！ ElectrumSV 在 离线电脑 上恢复冷钱包，菜单 File --> New/Restore。最后一步指定的密码会被用于加密本地的钱包文件，只对当前钱包文件有效。 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/Eb1hwwS.png) ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/1fDJqLL.png) ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/nZ4WL7i.png) ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/BA9bYTK.png) ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/AGqUAfn.png) ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/KW4LdQx.png) ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/2FdQ1DB.png) ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/DaYHR2r.png) 恢复好冷钱包后，对比一下钱包生成的地址和工具生成的是否一致。 从菜单 Wallet --> Information，查看钱包的扩展公钥。 在 联网电脑 上导入扩展公钥恢复观察钱包，菜单 File --> New/Restore。 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/bRWXpeF.png) ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/FIqmcAI.png) ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/IXo16ge.png) 从提示可以看出，观察钱包不能支付。在恢复完成后，对比一下观察钱包生成的地址和冷钱包生成的是否一致。 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/vxdnLST.png) 至此，钱包恢复完毕。 接收 BSV 时，只需使用观察钱包就可以生成收款地址，虽然观察钱包联网，但因其不包含私钥所以不会有致命风险。 支付 BSV 时： 用观察钱包生成一笔未签名的交易 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/kIMNFxk.png) 将未签名的交易数据保存为文件或二维码。你能看到，观察钱包无法签名交易，未签名的交易也无法广播 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/PDc2zGa.png) 未签名的交易数据文件，内容如下 { \"hex\": \"0100000001f2d53311d7299e2be6db46c1d2f6543bac00f067bb643d694ed0dee9ec6f8d30000000005701ff4c53ff0488b21e037fc3c84080000000a8d961a0e0af5920601522cad94590c447d739bf63ec8f2ec752743c953c8fe2021d1c7fbb4b663975ef24ac1e6c6fa18880168f930c8e86a19929d33e478e56e700000100feffffff30750000000000000170740000000000001976a9148fdb3f6131ad653d40de981ab7eda7d2dd71995b88acdab20800\", \"complete\": false, \"final\": true } 在冷钱包上，从文件加载交易，菜单 Tools --> Load transaction --> From file ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/nuKBBHp.png) 用冷钱包对交易签名 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/JoAy8DA.png) 将签名后的交易数据保存为文件或二维码 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/SgnhKAc.png) 签名后的交易数据文件，内容如下 { \"hex\": \"0100000001f2d53311d7299e2be6db46c1d2f6543bac00f067bb643d694ed0dee9ec6f8d30000000006a4730440220636e8c8ad021d40d1089a5caa54e4ce9c83854f04018e4a1397516676d95909002203fb9d1d71b08744b2973f0af53f8fdbde1a549f33b7b22252a0c6276fe7ddeda412103b7d4f78bcf09c86cde4e2bcf1a8f31d5a0498105a53df3517c5f64002a87b9c8feffffff0170740000000000001976a9148fdb3f6131ad653d40de981ab7eda7d2dd71995b88acdab20800\", \"complete\": true, \"final\": true } 在观察钱包上加载签名后的交易文件并广播 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/uCkvSEk.png) 注意，广播交易时除了直接使用钱包软件，还可以借助第三方服务或 API。 Blockchair WhatsOnChain.com BitIndex API 至此，全网都会收到 这笔交易，支付完成。 必须要指出的是，使用 ElectrumSV 生成的助记词（New -> Standard wallet -> Create a new seed），是 不符合 BIP-39 规范的，请务必注意。 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/qLhzYhg.png) ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/bo392hV.png) Simply Cash 使用 Simply Cash 作为冷钱包，过程也是类似的。 在 离线手机 上恢复冷钱包并核对地址。 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/kN8MSeC.png) ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/QjZe6v6.png) 在 联网手机 上恢复观察钱包并核对地址。 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/wXxwjVw.png) ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/wEuifgr.png) 支付 BSV 时： 在观察钱包中生成一笔未签名的交易 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/Bn6Jv3N.png) 这个二维码解析之后的内容为 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/1zkhtKL.png) 用冷钱包扫描二维码加载未签名的交易并签名 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/CgDC0Zs.png) ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/wPapYWD.png) 这个二维码解析之后的内容为 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/87rEQnK.png) 用观察钱包扫描二维码加载签名后的交易并广播 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/LaMXyOY.png) 至此，全网都会收到 这笔交易，支付完成。 你可以通过下面两个视频了解 Simply Cash 的更多细节。视频由热心网友 “简美小视频” 制作，非常不错，分享给你。 硬件钱包 热钱包足够方便但存在一定的安全隐患，适合 “存放” 小额零钱用于日常支付。冷钱包足够安全但支付时多有不便，适合 “存放” 大额且不经常使用的比特币。 知名的硬件钱包厂商有 Ledger、TREZOR 和 Keepkey，借助精心设计的软硬件，硬件钱包能在方便使用的同时兼顾较高的安全性。网上介绍和比较硬件钱包的文章非常多，这里不再赘述，你可以从 这篇文章 开始了解。 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/eNYoQxL.jpg) 硬件钱包的安全性一直以来都备受关注，虽然厂商会采用各种方式降低产品被攻破的可能（如安全芯片、防暴拆、开源等），但事情没有绝对。硬件钱包从设计生产到装配、运输、交货会涉及更多环节，选择信任什么同样看你自己。 一个地址只用一次 为了保证安全性和保护个人隐私，一个比特币地址只应被使用一次。 当郭达和蔡明都要向你支付比特币时，你应向他们提供从未使用过的不同的收款地址。 在支付比特币时，大多数 HD 钱包也都会使用找零地址来满足这样的需求，以 ElectrumSV 钱包为例，默认设置会勾选 “使用找零地址” 的选项。 ![Imgur](https://aaron67-public.oss-cn-beijing.aliyuncs.com/G14MtjW.png) 当郭达付款给蔡明并存在交易找零时，让我们看看不同的设置会带来怎样的效果。为了方便识别，蔡明的收款地址用红线标注。 不使用找零地址 使用找零地址 使用多个找零地址 这是 ElectrumSV 提供的一个特性，使用多个找零地址 “打散” 面值较大的单个找零。 通过上面三笔交易你能清楚的看到，不使用找零地址能直接确定蔡明的收款地址，而使用找零地址会让交易活动变得难以追踪。 总结 了解和掌握如何安全的收发比特币十分重要，这关系到资金安全。 钱包的安全性受多重因素共同影响，其高低取决于解决方案中最脆弱的部分。深入了解比特币协议的细节和系统的运作方式，也有助于你设计出更适合自己的钱包方案，例如你可以在收发比特币时结合多重签名技术来提升安全性。 让钱包一直处于离线环境从不接触过网络能有效避免私钥泄露，但这会给支付带来一些麻烦。相较于一概而论，针对不同的使用场景选择不同的钱包方案，找到安全性和易用性的平衡点才是更明智的选择。 钱包方案 比特币额度 支付频率 易用性 安全性 热钱包 小 高 高 一般 硬件钱包 大 中 高 高 冷钱包 大 低 一般 极高 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币安全 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-security/security-policy.html":{"url":"chapter-security/security-policy.html","title":"安全指南","keywords":"","body":"安全指南 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 安全指南 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-security/hot-storage.html":{"url":"chapter-security/hot-storage.html","title":"比特币热钱包","keywords":"","body":"比特币热钱包 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币热钱包 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-security/cold-storage.html":{"url":"chapter-security/cold-storage.html","title":"比特币冷钱包","keywords":"","body":"比特币冷钱包 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币冷钱包 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-security/hardwallet-storage.html":{"url":"chapter-security/hardwallet-storage.html","title":"比特币硬件钱包","keywords":"","body":"比特币硬件钱包 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币硬件钱包 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-security/secure-split-key.html":{"url":"chapter-security/secure-split-key.html","title":"安全拆分密钥技术","keywords":"","body":"安全拆分密钥技术 比特币继续令人们趋之若鹜，但人们也依然对钱包里和交易所中的比特币的安全性心存疑虑。近来随着据称在过去 6 年利用价值 40 亿美元的比特币疯狂洗钱的 BTC-e 所有者 Alexander Vinnik 被捕，当年的 MtGox 幽灵黑客再次引发轰动，上述安全问题也再次成为人们关注的焦点。此人落网后让人们开始怀疑，他或其他相关人员是否要对 MtGox 热钱包私钥和 85 万比特币的失窃承担责任。为了比特币的进一步发展，需要增强消费者和虚拟货币业务经营者的信心，让他们相信私钥不会被窃取。 nChain 相信利用自己的两项正在申请专利的安全发明，可以解决这一问题：（1）确定性密钥生成技术；（2）安全拆分密钥技术。这两种技术可以用来保护数字钱包，避免再次出现类似于 Mt. Gox 事件的黑客攻击。但是这些发明能做的远不止这些；它们可以保护任何数字化数据、资产、通信或受控资源，而且随着我们的世界和设备变得日益数字化，它们的潜在用途会越来越多。 自成立以来，nChain 公司一直致力于各种各样支持区块链发展的研究和发明。现在公司很高兴把详细的工作成果分享出来 ——首先是上述两项发明，它们不仅可以防止私钥面临的安全问题，从更广泛的角度来看，还可以增强任何关键和敏感数据的数字化存储的信心。 发明 1: 确定性密钥生成 第一项技术包含于一个正在申请的名为“确定一个用于安全的信息交换和分层确定性密钥的公共秘密”的专利。我们更简单地称其为“确定性密钥生成技术”。完整描述参见 PCT 申请，编号：PCT/IB2017/050856. 从本质上来说，该技术改进了网络上一对节点或交易双方之间的安全通信。概括来说： 网络上的一对节点（即交易双方），各自拥有私钥和公钥，交换各自的公钥，同时保留私钥的秘密。 他们还交换了一条信息。 然后他们彼此之间达成一个基于该信息的确定性密钥。该密钥是“确定的”，因为多次执行密钥生成算法均将生成与之相同的密钥。 然后每个节点确定： 自己私钥的更新版本，基于其现有私钥和确定性密钥； 其他节点公钥的更新版本，基于其他节点的现有公钥和确定性密钥。 这可以通过对现有私钥和确定性密钥进行简洁的数学推导处理而实现。 然后，每一对节点根据其自己更新的私钥和其他节点的更新公钥来确定一个公共（即共享）的秘密。由于确定性密钥基于共享信息，因此属于两个节点共有，相同的公共秘密可由两个节点确定，但需要借助不同的更新私钥和更新公钥的组合。那么该公共秘密可用作保护节点之间通信的基础。 发明的优势和用例 该技术可以在不需要存储公共秘密的情况下实现双方之间的安全通信，因为公共秘密可以按照需要由各方基于共享信息单独确定。重要的是，该信息无需按照与私钥相同的安全级别进行存储，甚至在某些情况下可能是公开的。 另一个重要的优势在于，利用该技术还可以生成 多个 基于每个节点单一主私钥且对应于多个安全私钥的公共秘密。通过基于双方预先商定的流程确定一系列连续的确定性密钥，可以具体做到这一点。因此，尽管各方只需安全地存储单一的私钥，但这些多个私钥依然可以保持安全。这不仅减轻了庞大的安全负担，还可使用户生成源自基差或主钥的分层密钥。根据用户意愿，它可以生成各层密钥具有逻辑关联的“子钥”。例如，虚拟货币业务运营商可以生成代表和保护相关账户或与特定组织或个人有关的实体的密钥。因此，确定性密钥可以安全生成，并以这种方式反映出它们所使用的环境或背景。 该技术的应用多种多样，甚至不局限于比特币或区块链环境中的使用。随着数字化世界中日益增长的数字资产、数据云存储、创新数字通信模式以及物联网设备的预期爆发，这项技术的潜在用例可谓不计其数。基本上，该创新成果可以为 任何 需要保护敏感数据、资产、通信或受控资源的环境提供重要的安全优势。各种具体实施包括： 公开显示不会被重新使用的比特币地址； 确保商家 PoS 销售系统的安全； 安全传送信息； 确保文件安全归档； 保护智能预言机； 安全控制物联网设备。 为了说明该技术是如何建立起来以提供进一步创新的，以下是一个关于该技术如何被用于保护 数字钱包（对于比特币或任何其他数字资产）的示例。公钥 / 私钥对经常用于数字钱包。但是，如果钱包用户负责存储他们的私钥，则当私钥、用户本身或他们的硬件无法使用时，可能会出现问题，因为这会导致钱包内的资金无法使用。 相反，私钥存储在钱包提供者终端，则需要对服务提供者及其安全机制具有一定程度的信任。如果服务提供者的系统被黑客攻击，若干私钥就会落入未经授权的人员手中。然后资金就可能被窃取或破坏。因此，私钥必须以一种既能确保不被未经授权方获得，又能在必要时进行复制的方式存储。 发明2: 安全拆分密钥技术 为了解决上面提到的问题，nChain 推出了另一项发明——安全拆分密钥技术：如何以一种既能确保不被未经授权方获得，又能在必要时复制的方式存储私钥（例如用于数字钱包）。基于确定性密钥生成技术创建，第二项发明名为“结合钱包管理系统阻止区块链系统密钥存储和转移中的多方损失”，完整描述参见 PCT 申请，编号：PCT/IB2017/050829. 概括来说，nChain 的安全拆分密钥发明可以通过以下方式保护数字钱包或其他类型的资源： 将密钥（或用于密钥的助记种子）拆分成多个份额，并且可以从两个或以上的份额中恢复或重新生成。这可以使用一种称为 “沙米尔秘密分享方案（4S）” 的加密算法来执行，该算法将密钥拆分成不同的部分或份额，然后分发给不同的各方。 这些份额可用于在必要时重建密钥。每个个体份额本身都毫无价值或用途，除非与一个或多个其他份额结合在一起。重建密钥所需的份额数量根据情况需求而有所变化。在某些情况下，可能需要所有份额，而在其他情况下，可能只需满足一定数量即可。 在网络（即交易双方）的两个或多个节点上确定一个公共秘密，然后使用公共秘密生成一个可用于加密一个或多个份额或有关份额信息的密钥。 利用公共秘密在两个或多个节点之间传输至少一个密钥份额。这两个步骤可以利用前面提到的技术以及上述确定性密钥生成发明来执行。双方之间的份额传输必须以一种安全的方式进行，因为任何未经授权截获多个份额都可以使截获者重建密钥。 因此，密钥或其助记的不同份额务必在各方之间安全传输，然后存储在单独的位置。 密钥不会以完整形式存储于任何地方，直至需要的时候，届时它可以从指定数量的份额中重新生成——即借助当初用于拆分它的 4S 算法。任何一方都不能单方面复原私钥，甚至连用户本身也不行。即使用户去世、丧失行为能力或丢失自己的密钥，另外的合法一方——律师或近亲也可以利用其他两个份额获得资金 。 或者，即使钱包提供商被黑客攻击，密钥以及资金依然保持安全。 所以，例如，数字钱包提供商可以按照如下的 “2/3” 方案（即重新生成密钥的阈值是两个份额）使用该技术： 用户通过钱包提供商注册，创建新的钱包来存储其资金或其他数字资产（如比特币）。 生成一个公钥 / 私钥对，并关联至用户的钱包。 私钥通过 4S 拆分成多个份额。 利用上述技术发明将私钥的一个份额安全传输给用户。 私钥的另一个份额由钱包提供商保留，并存储在服务器上。 另一个份额通过安全传输发送至远程位置进行安全存储。 钱包提供商可以销毁已经不再需要的完整私钥的任何或全部副本。当为了获得用户后续授权而需要私钥时（例如，由于用户现在希望进行交易），则利用用户提供给钱包提供商的份额，再加上钱包提供商自身保留的份额，可以重建密钥。 即使丢失了一个份额，依然可以利用剩余的两个份额重建密钥。 因此，nChain 创建的解决方案可以保护数字钱包（实际上包括任何其他类型的受控资源），从而避免因自行存储私钥或信任第三方（例如钱包提供商）而引发的风险。利用该技术（结合确定性密钥生成技术），再也不会发生类似 MtGox 的黑客攻击；黑客将无法获取用户的完整密钥，也就无法窃取他们的比特币或其他资产。 这两项正在申请专利的发明——确定性密钥生成和安全拆分密钥技术——将促使更多消费者和服务供应商相信比特币以及更广泛的所有数字资产、通信和受控资源的安全性。这仅仅是 nChain 在其开发技术解决方案以实现区块链指数级增长的使命之旅中，将要完成的多项激动人心的发明的开端。 nChain 的上述两项发明的 PCT 专利申请信息如下： 确定性密钥生成技术 （“确定一个用于安全的信息交换和分层确定性密钥的公共秘密”）- PCT/IB2017/050856) “安全拆分密钥”技术（“结合钱包管理系统阻止区块链系统密钥存储和转移中的多方损失”）- PCT/IB2017/050829) new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 安全拆分密钥技术 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-client/":{"url":"chapter-client/","title":"比特币客户端","keywords":"","body":"比特币客户端 本章将介绍比特币稳定协议的重要性，开放 BSV 许可的意义，以及 Bitcon SV Node 挖矿节点的参考实现。本章还将介绍 SPV 轻节点的意义，以及在 BSV 链之上的客户端 Planaria 和 Tokenize，它们以 BSV 链为基础，在上面扩展了更多的功能。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币客户端 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-client/stable-protocol.html":{"url":"chapter-client/stable-protocol.html","title":"稳定的协议","keywords":"","body":"稳定的协议 如果我们考虑一个不稳定的协议，情况只会变得更糟。如果允许协议进化，就像比特币的竞争对手 Core 币 (BTC) 发生的那样，那么我们将看到一个场景：网络碎片化，除非所有用户运行相同的版本。在一个拥有 10 亿人的彩票网络中，它比比特币本身更加重要。如果各方都不升级，你将以增强协议的分叉而结束，并永不再连。网络碎片非常快。 对这个问题，有一个答案: 您可以手动控制，这就是开发团队的权力。 你不仅允许他们控制协议，还允许他们控制软件升级。你允许他们强迫你更新软件。一旦他们被授予这样的权力，你生活中的一切权力都让渡到他们身上。这就是为什么比特币（Bitcoin）被劫持并创造了一个 Core (BTC) 币。 一群与无政府主义和犯罪集团有着紧密联系的人在追逐权力。1984 双关语的真实含义是，他们会告诉你他们是如何让你自由的。而他们这样做，是为了降维控制、是为了获得权力，以更新和改变协议。这就是 BTC (Core)的真相之路。 它与比特币没有任何关系。 只有一个稳定的协议才能分散权力。原因是，权力来自于改变协议的能力。一旦你移除了改变协议的能力，你就移除了那些企图改变协议的人的权力。 一个货币系统最重要的方面就是其稳定性。 为此，并且为了使比特币发挥其全部力量，我们致力于移除区块上限，使人们为其支持的任何级别的容量进行付费。作为一套基于市场力量的经济系统，比特币便可以成为全球性现金。 比特币将与原始协议保持最大的一致并将被锁定，企业和开发者可以在其上建立起完整的全球金融生态系统。 协议的设计是旨在提供一种系统和组织的功能，它始终是一种经济功能。比特币首要且最重要的功能就是现金。 比特币是货币，其最终目标是使协议像它所象征的全球性管道系统一样枯燥。 当 “我们” 作为一个行业终于开始关注到并解决真正的问题时，那么我们才会开始取得进展。只有这样，我们才能在欺诈和浪费不断兴起的浪潮中取得立足之地。 在信息安全领域，所有那些关于新型攻击的新闻，无论是零日攻击还是其它，对于未打补丁的系统和那些位于我们白名单里的应用程序仍然有效，一些糟糕的做法会导致绝大多数的攻破和入侵行为。 当我们设想对于关键的基础设施进行攻击时，那种认为这些系统是正常的且不需要打补丁的想法是完全错误的，正是这种想法使它们容易受到攻击。这些系统处于危险之中是因为其没有基本控制和更新，而不是新型攻击手段的增加。比特币的需求与此是一致的，即锁定基础协议，打打补丁，密切监控以防需要进行更改。 为什么？因为比特币是货币，这让它成为了一种关键的基础设施。 有人告诉我说，“老式攻击手段”并不重要，也永远无法用来攻击任何东西。这是信息安全行业的问题，也是比特币发展中的一个问题。老式攻击手段是有效的。新型攻击手段是要花钱的。创建和部署高级长期威胁（APT）和零日攻击都很昂贵。它们是众所周知的核武器，用完即废。这些手段可能会被使用，但是其使用是受到极大的控制和限制的。每个系统都存在着成千上万种常规的攻击手段，利用的都是陈旧的漏洞。 比特币要值得信赖，要确保这个结果，它需要被看成是乏味的。银行的前脸曾经使用希腊和罗马式的经典的建筑形式，这被用来表示其稳定性。这正是比特币所缺乏的。我们不需要 “酷” 的项目。开发人员想要这些是因为这可以为他们的简历增光添彩。这个世界和货币市场想要的只是乏味，稳定和健全的货币。他们想要的是一个预期在未来的 20-30 年都具备稳定性的一成不变的平台。 所以，比特币要成为管道系统： 当我们作为比特币的专业人士开始明白商业的安全性和发展是和商业有关的时候，我们将开始取得进展。 当我们开始明白没有绝对的安全且无法阻止所有风险时，我们可能会开始在战斗中得胜。这意味着，只需要让基本协议稳定下来，只有在出现严重问题时才能进行更改。 当我们开始将所有问题，争议和安全性都视为基于风险的经济计算，其中一些是被接受的而不是所有这些都可以被修复的，我们将开始创建安全稳定的系统。 如果我们不是把开发比特币的基础视为一个点对点电子现金的稳定平台，而是将其视为“酷酷的”、有趣的弄潮儿，那我们就偏离了创建可扩容和安全系统的道路，将我们置于被攻击的境地，并且失去了比特币旨在提供的重点。 比特币作为一个平台而不是要创造完美的东西，它是要创建一个可以向世界提供健全货币的系统，以及一个可用于构建不可篡改的全球性账本的平台。 它是要创建一个能够作为全球货币体系而生存下去的坚韧的系统，就像现金一样。如果你的目标是完美的东西，那你注定永远失败。 要构建这样一个平台，你要将它固定下来。它必须是健全的、稳定的和可预测的。这看起来很乏味，但这样才是一个理想的系统。当大多数人认为比特币很乏味、很不酷并且仅仅是现金时，那比特币就成功了。 Peer to Peer foundation 的帖子声明如下： 传统货币的根本问题在于维持其运作所必需的信任。人们必须信任中央银行不会使货币贬值，但法定货币的历史充斥着对这种信任的破坏。人们必须信任银行持有我们的资金并能够进行电子转账，但他们仅凭借部分准备金制度，就可以将我们的钱借出，从而创造出一波又一波的信贷泡沫。我们必须将我们的隐私托付于他们，相信他们不会让冒名者榨干我们的账户。他们高昂的管理费用使得微支付成为妄想。 我们的愿望是创造和实现一种无法被贬值和操纵的稳定货币。但是一种去中心化的迷思却曲解并重构了这个目标。比特币之所以是作为一个分布式系统创建的，是为了首次实现稳定的电子货币。这个故事的本源已经被曲解成说比特币是为了创建一个分布式的系统。再次说明，该系统之所以是分布式的，目的是创建第一个稳定的电子货币，而不是数字黄金，不是作为一套结算系统，而是作为数字现金。 比特币的主要和核心目的是提供稳定的货币单位。稳定性是指我们参考了类似于黄金的稀缺性，但该系统却依然适于交易。特别是，该系统交易成本非常低，而且它除了货币本身之外并没有其他内在价值。比特币的主要目的不是去中心化，而是被用作货币。这是一种低成本，大容量的交换系统。 ​ 比特币提供的系统设计在扩容后是具有更改抗性的。稳定性是货币的一个重要方面。货币实际上是一种度量工具。就像我们在测量距离时一样，当货币被广泛采用，并被当作是度量的通用体系时，它才能发挥最大的价值。我们没有很多版本的单位 “米”，我们也不应该有很多版本的货币。正如“米” 本质上是不会变的，货币也是一样。这就是比特币去中心化的原因。不是为了去中心化而去中心化，而是通过难以改变来实现稳定的货币体系。这方面性质（稳定性）是比特币扩容后就能带来的。 稳定是货币的根本，黄金值钱是因为它不会明天变成银，后天变成铜。 比特币有意限制了它自己能做什么以及能够被如何改变，但是人们并没有理解到这一点。这一切都是有目的的。 比特币是被设计成稳定货币的，因此除非是为了一些基于安全原因而需要做的替换或者更改，比特币不应该添加新的操作码。比特币中保留下来的几个有限的字符是非常必要的。如果这些被浪费了，未来比特币作为协议将被极大地限制住。其中一些已经被浪费用来实现一些基于时间的功能，这些功能本来可以通过更有效地使用 nLockTime 来实现。 与 Core 错误的说辞相反，通过软分叉来添加新的操作码并不是原来的设计。软分叉并不是比特币的一部分，并且它破坏了系统的竞争性。 比特币从版本 0.1.0 开始就不该再改变了 这部分是说明上面那句话的意思。比特币的设计不是创造一个理想化的社会主义乌托邦，而是创造稳定的全球货币。要做到这一点，我们需要一个不会无故变更的系统。 我们已经看到了开发人员颠覆了这一切。目前人们的想法是通过添加花里胡哨的功能来抢先进行实验并期望得到最好的结果。 这可能是许多在硅谷开发应用的工作方式，但这不是货币成功的方式，这是目前的关键问题之一。 在比特币现金中，我们在愚蠢地尝试着毫无顾忌地添加额外的操作码，原因是这会带来流量。恰恰相反，我们需要的不是这些。金融机构甚至是上市 ETF 的概念来源于稳定性。现在，比特币无法展现出其稳定性，因为人们在持续不断地尝试改变它。 BSV 就是比特币，我们将努力将其恢复到 0.1.0 版本的实现并锁定该协议。保留操作码的原因应当明晰。它们是创建稳定且可用作金融体系的脚本系统所必需的。要做到这一点，我们需要能够创建可以持续一年，五年甚至十年的合同。有些金融工具可以使用一百多年。如果比特币是货币，它必须能够处理这些事情，而这需要稳定性。 在完全重新启用现有脚本代码的情况下，比特币没有做不到，只有想不到。一个缺乏远见的开发人员并不需要改变整个系统和协议来迎合他。 现在，开发人员为改变比特币所做的一切都是实验性的，这会将应用都赶跑。 比特币必需是一个稳定的系统才能成为货币。我们已经投入了算力，我们唯一的目标就是将其用于扩容和稳定比特币。 比特币是被明确设计成不允许人们任意改变脚本结构的。 比特币的主要的成果就是一个稳定的系统。当你被告知我们需要发展、需要集成新东西、需要成长时，现实情况是这其实是说比特币协议的扩容并在该协议之上进行发展。比特币是一个经济系统，它不该是变幻无常的。 不幸的是，比特币中有很多已经添加的东西（包括上面添加的 OP_CODES，如 CLTV 和 CSV），现在只能保留了。P2SH 是这些可怕的破玩意儿之一。 这些都无法移除。这与写了一个糟糕的脚本并损失了少许自有资金不同。我们刚刚提到的任何对协议的新增更改都是永久性的。比特币不可能再通过改变来逆转这些变化。 黄金的原子结构是确定的。 如果添加或移除一个原子，它不再是黄金。一些改变（P2SH）在比特币中类似于向黄金中添加了一个中子，这是可行的，但最终的系统会更不稳定。 有种想法是比特币是残缺不全的，是时候抛弃这种想法了，也是时候开始扩容了，让它成为其设计的目标——稳定的货币。 比特币的核心设计在 0.1 版本发布时就已确定，并且在其整个生命周期中保持不变。 这是被人们误解的事情。比特币竞争系统的性质旨在打造稳定的货币。这是比特币如何扩容的核心。比特币的某些方面是需要修复的，它们存在于第一个版本中，但协议本身并不需要被修复。 为了成为稳定的货币，比特币无需改变。我再说一遍。比特币需要一成不变才能发挥其作用，才能有价值。矿工将更改和改进比特币挖矿的核心软件。他们不会作为一个整体去做这件事。他们是为了获得竞争优势而去做这件事，他们不会披露他们对软件所做的所有更改。再次说明，这也是一件好事情。更高的效率总是一件好事情。成功的关键秘诀在于遵循一点，比特币是要成为一个稳固的系统的，它不是开发人员所认为的玩物，因为开发人员对于货币知之甚少。 任何货币体系都必须展现其稳定性。这才是货币获取人们信任的方式和原因。人们知道，10 年或 20 年后，他们的货币将依旧如故。现在，Core 和 ABC 的开发人员已经将协议改了个底朝天，这是反稳定性而行之的行为。正是因为这个原因，BSV 才会出现，并继续朝着比特币原先的协议稳定的方向努力。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 稳定的协议 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-client/open-bsv-license.html":{"url":"chapter-client/open-bsv-license.html","title":"Open BSV license","keywords":"","body":"Open BSV license BSV 的授权许可如下： https://github.com/bitcoin-sv/bitcoin-sv/blob/master/LICENSE Open BSV License Copyright (c) 2019 Bitcoin Association Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: 1 - The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. 2 - The Software, and any software that is derived from the Software or parts thereof, can only be used on the Bitcoin SV blockchains. The Bitcoin SV blockchains are defined, for purposes of this license, as the Bitcoin blockchain containing block height #556767 with the hash \"000000000000000001d956714215d96ffc00e0afda4cd0a96c96f8d802b1662b\" and the test blockchains that are supported by the un-modified Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Version 0.1.1 of the Bitcoin SV software, and prior versions of software upon which it was based, were licensed under the MIT License, which is included below. The MIT License (MIT) Copyright (c) 2009-2010 Satoshi Nakamoto Copyright (c) 2009-2015 Bitcoin Developers Copyright (c) 2009-2017 The Bitcoin Core developers Copyright (c) 2017 The Bitcoin ABC developers Copyright (c) 2018 Bitcoin Association Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Bitcoin SV(客户端实现)的 Open BSV license 协议由 MIT 协议衍生而得，该协议版权属于 Bitcoin Association。但这并没有限制大家在此基础上继续自行开发客户端，只需要更改遵守以下两点即可： 1，需要保留上述版权说明 2，只允许在区块高度 556767 上哈希值为 000000000000000001d956714215d96ffc00e0afda4cd0a96c96f8d802b1662b 的链(即 BSV)上使用 这份许可杜绝了 BTC/BCH 借鉴 BSV 的扩容方案，同时保持了今后继续分叉的可能性，如果再次出现分叉，只要该分叉决策符合现在(PoW 矿工投票累积工作量)的决策方式即可。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 Open BSV license |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-client/bitcoin-sv-node.html":{"url":"chapter-client/bitcoin-sv-node.html","title":"Bitcoin SV 客户端","keywords":"","body":"Bitcoin SV 客户端 官网：https://bitcoinsv.io/ Github：https://github.com/bitcoin-sv/bitcoin-sv Bitcoin SV 节点系统配置要求 以下是基于我们使用比特币节点软件进行的内部测试和扩容的过程而做出的系统配置需求推荐。比特币 SV 将继续按计划扩容到创世协议。这也意味着这些要求会随着时间的推移而变化。 对于只运行一个跟随 PoW 工作量最高链并只处理少量其他任务（例如处理 RPC 请求）而不挖矿的监听节点，我们建议至少达到以下配置： 4 核 CPU 6GB 内存 10M+ 的网络连接（上下行速率） 我们不建议将上述配置用于任何生产环境中。* 请注意，如果交易量持续突增，上述配置可能会出现问题。 这可能导致你的节点落后于当前最长链，或者直接因内存不足而中止服务。 对于运行一个预计要处理一定数据量，并保持与当前最长链实时同步的监听节点，我们建议至少达到以下配置： 8 核 CPU 16GB 内存 100M+ 的网络连接（上下行速率） 这可能适合那些希望在主网上发布他们新产品的初创公司。 随着他们的应用程序和主网上数据量的增加，对这一层节点的配置需求也会加大。 对于运行预计要处理大量数据、需要对交易进行索引、甚至进行挖矿操作的监听节点，我们建议至少采取以下配置。 8-12 核 CPU 32GB 内存 1G+ 的网络连接（上下行速率） 我们已经在挖矿节点和侦听节点环境中看到上述配置能够处理 STN 测试网络上连续 2GB 大小的块，交易数超过 100 万交易(这还需要参照使用下面的一些附加配置建议)。 这个配置应该能让您在主网上轻松处理各类交易，直到矿工们提高最大处理区块的上限(截止至 2019 年 8 月该上限为 512 MB )。 配置可能因您的个人需求，特定环境，以及应用程序或实例的需求而发生变化。 如果您是矿工，建议您花时间确保您的节点与其它矿机实现最高连接。 一些附加建议 - 矿工尤其要注意 随着比特币 SV 上的应用和交易量不断增加；以及伴随着链上存储交易（op_returns）的爆发式使用，您的比特币 SV 节点可能在达到内存池的上限时无法处理或被大量的计算请求淹没。这会造成节点将丢弃交易，优先让更高交易费用的交易通过，随后增加计算量或者更糟糕地，直接停止运行。 虽然这不是比特币理想的运行方式，但这却是我们在短期内必须面对的问题；SV 节点团队将专注于对扩容有更大影响的更高优先级的任务。 解决方案是提高以下的默认值，以允许节点在高负载情况下依旧保持高效。这些情况包括重组，即要求节点返回并重新考虑最有可能被看到的交易或区块。重组，可能是导致您的节点从 1-2GB 内存使用增加到 3GB 或更多的原因，如果这内存量对您的系统来说太多，操作系统可能会选择结束 bitcoind 进程，或者您的节点将崩溃并显示错误代码“Out of Memory(内存不足)“。 由于重组和孤块是比特币生态系统的一部分，我们应该有所预期而不是恐慌（更多内容请点击这里）；最好为这种情况提前做好准备。根据我们在测试网络和在主网上进行压力测试时看到的数据量来看，bitcoind 中默认的设置实在太小了。 考虑到这一点，我们建议您在比特币节点上增加一些默认设置。 首先，您的内存池容许上限值应设置为 6GB 或更高。这样设置让节点知道应该为存储未确认的交易分配多少内存。这可以通过在 bitcoin.conf 文件中添加以下内容来实现。 maxmempool = 6000 这种限制性内存设置（默认为 300MB），是为维持小区块的功能，而从 BTC 那继承的费用优先级处理的结果。在比特币 SV 中，我们并不需要这个。对于小额交易，存储交易的开销是当前实际交易大小的 5 倍。对于大额的交易，这种费用会急剧下降。SV 节点团队正在积极努力删除所有处理费用优先级的代码，并为加快内存池处理，为交易传播、验证和内存分配带来急需的改进。 最终我们将得到一个更快速，内存费用更低的内存池。 除了增加内存池容许上限外，我们还建议增加签名和脚本缓存。这项设置将告诉节点，我们可以在缓存（内存）中保留多少兆字节可接受的交易；通过减少耗时的重新计算签名和脚本的调用，从而提高效率。我们建议将这些设置为 250MB 或更高以提高性能。这可以通过在 bitcoin.conf 文件中添加以下内容来完成。 maxsigcachesize = 250 maxscriptcachesize = 250 请注意，添加上述的三个设置将在节点上增加 6.5GB 的额外内存要求，这只是为提升 bitcoind 效率的操作。 最后，我们建议将 maxorphantx 添加到您的 bitcoin.conf 中。此值指定可以在内存中保留多少个孤立交易。这对您的节点接受子交易有所帮助，即使其父交易尚未在区块链中得以确认。这同时意味着节点将记住该子交易，直到它的父交易被确认或超过 20 分钟后过期失效。这可以通过在 bitcoin.conf 文件中添加以下内容来完成。 maxorphantx = 10000 这样的结果是，假设平均交易大小是 400 字节，内存仅增加 4MB。将此值设置于此，而不是更高 (例如 10 万) 的原因是，如果您在最极端的情况下保存 10 万笔 100KB 的交易，那么您需要额外的 10GB 内存。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 Bitcoin SV 客户端 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-client/nodes-on-top.html":{"url":"chapter-client/nodes-on-top.html","title":"Nodes On Top","keywords":"","body":"Nodes On Top new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 Nodes On Top |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-client/spv.html":{"url":"chapter-client/spv.html","title":"SPV","keywords":"","body":"SPV 中本聪在比特币白皮书中描述了 “简单支付验证”（SPV）的高级设计原理。通过使用 SPV，比特币的区块大小可以安全地移除上限限制，用以支撑十亿数量级的用户便捷地使用比特币进行交易而不用担心网络拥堵。 在一个 SPV 钱包，如果我们知道了交易路径，并且知道交易的存在，结果要么就是交易未被花费， 或者商家可能发现一个双重花费。 根据定义，“点对点” 是指个人或其他各方之间的直接交换。这样，希望从商家 Bob 那购买商品的消费者 Alice 将直接向 Bob 发送交易。Bob 可以对其进行验证，并将其发送到区块链进行清算和结算。这个过程是点对点的。网络中的矿工或节点充当分布式中介。没有人需要直接信任中间人，这与任何当前系统都大不相同。 系统中的用户仅需要维护一个区块头的副本即可与交易进行比较。目前，区块头的大小小于 50 MB。大家平时拍照的相片文件就会超过这个大小级别。而从现在开始的十年之后，区块头大小的增长将只是线性的。因此，我们拥有一个系统，该系统可以按摩尔定律按指数比例扩容，但占用的资源却是线性的。 网络节点或矿工将为用户提供最长的工作量证明链。用户可以实施贝叶斯系统以确保他们拥有最长的链。他们不会只查询一个矿工，而是查询多个随机节点。这样，可以非常简单地在无需太多带宽的情况下确保它们具有最长的路径。 只要诚实节点控制网络，这种验证在系统中是可靠的。要注意，重要的是比特币网络中的矿工在法律范围内行事。挖矿是一项投资。今天，即使是小型矿工也在这个系统上投资数亿美元。更重要的是，矿工受地理位置限制，不能轻易移动，因此他们受法律规定的约束，如果有不诚实的矿工作恶他们可能会遭受损失。比特币从未被设计为在现实世界之外起作用的系统。实际上，在白皮书中提到 “诚实” 一词 15 次的原因是，它直接与诸如 英国的 2006 年《欺诈法》之类的行为有关。 结果是，一旦比特币达到一定的规模，它就会受到法律的管辖。从理论上讲，矿工的包容性和作为攻击者的游戏因矿工面临的损失而被最小化。中本聪在白皮书的早期草稿中写道，51 攻击只能逆转一笔交易进行双花。之所以如此，是因为比特币并非旨在成为一个在法律控制范围之外发挥作用的系统。它是一个支持诚实交易并允许捕获和隔离可能显示为与犯罪活动有关的交易的系统。在小世界网络中，现有的矿工将能够在几秒钟内确定交易是否 “双花”。具有大量算力的攻击者只能与其它网络节点一起工作，他们很快就会注意到这一点。 客户 SPV 钱包 SPV 用户应维护他们收到的交易的副本。交易规模很小，并且不会占用太多空间。当向用户付款时，他们应该维护已发送给他们的交易的副本，以便他们既可以针对特定区块的 Merkle 树进行验证，又可以简化向下一个对等方的付款。 如果我们假设已经使用输入交易在下图中与 Tx3 关联的足够久的区块中向 Alice 付款，那么她现在可以将此类信息保存在区块路径中，以简化花钱时的验证。 场景扩展，我们可以看到 Alice 可以节省她希望在自己的计算机上花费的所有输入交易。通过签名或满足输出脚本的其他条件，Alice 现在可以将她的币转移到新的输出中，以便向 Bob 付款。 Alice 向 Bob 发送了 Tx1 和 Tx2 的副本，这是她在以下交易中花费的对 Tx3 的输入，以便向 Bob 付款。通过一并发送的 Merkle 路径，Bob 可以非常快速地验证每个交易的哈希值，并确保它遵循块头并进行验证。如果输入交易存在于区块链中，Bob 可以信任它们。当然，他可以选择自己再次验证输入交易。他刚刚从 Alice 那里收到了 Tx1 和 Tx2 的副本。 为了验证交易并确保它存在于 Merkle 路径中并验证到块标题，Bob 只需要将每个交易的哈希作为 Alice 给他的付款交易的输入即可。为此，Bob 计算两个交易的哈希值： 哈希（Tx1）; 和 哈希（Tx2）。 有了这两个值，再加上 Alice 刚刚提供的 Merkle 路径，Bob 可以轻松快捷地计算出完整的区块头值，并确保区块头中的路径正确。如果他保存的标头中的哈希和 Merkle 树匹配，则 Bob 可以肯定地知道 Alice 给了他有效的交易。他知道区块链中交易的存在已经由比特币矿工进行了验证，并且现在有工作量证明来定义链中交易的存在。 SPV 系统如下图所示： 客户 SPV 钱包 * 请注意，Alice 不仅在系统中维护她的私钥。她将保存 Merkle 路径和她要使用的输入交易。Alice 不需要维护对区块链的访问就可以花钱。正如 Alice 知道她是唯一可以花费她的硬币的一方一样，她甚至可以采取行动进行有效的交易，尽管她仍然没有以任何方式连接到区块链。Alice 不必担心任何变更交易或输出的有效性，因为 Bob 无法更改它们。如果 Bob 试图更改交易以使更改不被合并，则整个交易将无效。结果是 Bob 要么将他从 Alice 那里收到的付款提交给区块链进行结算，然后将零钱支付给 Alice，要么他没有收到付款， 请注意客户的 SPV 钱包的以下功能： TX –预加载的完整交易数据，其中包含 Alice 可用的未使用交易输出（UTXO）。完整的交易数据以及 Merkle 路径构成了 Merkle 证明 Alice 正在花费的交易有效。散列完整的交易将给出 TXID，这是新交易输入数据的一部分。请注意，仅提供 TXID 是不够的，因为 Bob 必须能够验证 TXID 确实是该交易的哈希值。Bob 只有在 Alice 向他提供完整的交易数据时才能这样做；因此，她必须将其存储。如果 Alice 不存储此类信息，则 Bob 将需要在区块链上对其进行检查，这将增加流程的延迟。当然，Bob 可以为非 SPV 交易收取费用，因为他必须去矿工并下载完整的交易，而矿工可以对需要快速响应所选查询的商户进行同样的操作。 私钥/公钥 –进行交易时，钱包必须有权访问一组私钥以签名 TX 输出，并指定公钥以指定更改地址。 Merkle 路径 –包含 TX 的每个交易的 Merkle 路径。商家的销售点钱包将使用 Merkle 路径来验证 TX 是否有效。请注意，钱包提供的 Merkle 证明不能防止 “重复消费”，但可以作为防垃圾邮件攻击的快速失败机制。 最少的处理 – SPV 钱包需要签署未使用的交易才能花费。这样做要求脱机钱包能够实现 ECDSA 签名，或者换句话说，具有执行椭圆曲线点乘法和计算哈希函数所需的足够处理能力。 块标题（可选）–客户钱包可能希望包含块标题，以验证是否已处理了向销售点 SPV 钱包的付款。这样做还需要在与销售点钱包交互之后存储 TXID 和 Merkle 路径。 维护隐私；确保可伸缩性 作为商人，Bob 将交易发送到区块链，而不是 Alice。与她自己发送邮件相比，她拥有更多的隐私权。Bob 和 Alice 已经在交换，因此 Bob 知道 Alice（他可能需要寄送她的货物）。当 Bob 发送交易时，由于他可能是进行许多交易的商人，因此他的 IP 地址是公开的，而不是 Alice 的。Alice 无需使用 Tor 即可吸引注意力；她可以在知道只有 Bob 看到她的交换的情况下进行交换（在这里，Bob 和 Alice 可以使用加密的频道）。因此，Alice 的露面要少得多，并且可以在全世界范围内维护她的隐私。 链上分析和记录 IP 地址不会透露 Alice 的交易。Bob 拥有唱片，但不是公开的。 在接下来的文章中，我将开始详细介绍如何实现这种解决方案以及如何帮助扩展比特币。实际上，没有 SPV 的实施，比特币既不能点对点也不能扩展。 Bob 可以快速检查 Alice 用来支付他的币的有效性。他可以检查它是否在 UTXO 中设置为未使用的交易，并且可以在 Alice 递给他的路径后迅速验证区块链中的输入位置。币所在的区块越深，更改路径所需的工作量就越多，因此 Bob 接受它的安全性就越高。如果 Alice 仅花了她的薪水并在经过一个小时左右的验证后就收到币，那还是很安全的。Bob 不需要下载整个区块链。即使他运行自己的节点，也不会给他带来任何好处。只有矿工才能更改区块链。当 Bob 收到 Alice 的 UTXO 时，他可以检查它是否有效，以及她是否已正确地将输出硬币配给了 Bob，这是他验证付款本身所需的全部。下一个， SPV 是高效交换比特币上的交易的方式，并允许同行在没有第三方的情况下采取行动。没有它，通过实现所有系统都必须作为一个完整的网络节点运行的要求，将失去系统的简单性，并且系统将无法扩展。通过运行 SPV，用户可以快速而简单地验证自己的交易，并且可以通过存储最少的信息来进行验证。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 SPV |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-client/tokenized.html":{"url":"chapter-client/tokenized.html","title":"Tokenized","keywords":"","body":"深度解析 BSV 智能合约平台 Tokenized 的设计哲学和商业展望 刚刚过去的多伦多大会吸引了行业内外的注意力，大会发布了很多目前 BSV 上的应用进展。短短半年的时间，BSV 上的应用如井喷一般涌现出来，令人目不暇接。新概念，新应用出现的速度已经远远超过了我学习和研究的速度，感觉如果不能努力学习跟上技术潮流，就会被时代给抛弃，总有一种来自内心深处的紧迫感，用一个比较币圈的词来形容我现在的心情，就是 FOMO（fear of missing out）。 在多伦多大会之前，我就在业余时间研究 Tokenized，包括白皮书和源代码。中间有很长一段时间，他们的网站都在停机维护，github 的 master 分支也没有更新，让人一度以为该项目搁浅了。其实不然，如果你关注他们的 develop 分支，和一个 curtis 分支，你会发现他们的开发进程一直没有停止，只是在默默地打造产品，准备在多伦多大会上一鸣惊人。果然，多伦多大会上，伴随着各个新应用的涌现，以及 Satoshi Vision 扩容路线的进一步清晰，BSV 在短期内实现爆发式增长，市值跃居第 8。多伦多大会的录像，建议大家多看几遍，里面的新东西非常的多，让人大开眼界。从 Token 系统的实现，到内容分享的模式，再到结合传统邮箱协议的身份认证 Paymail，再到供应链 EDI，再到链上游戏实现等等等等。之后有机会会继续分享里面的有趣内容。今天主要分享大家最为关注的智能合约平台 Tokenized，由于这是一个相对比较庞大和复杂的系统，限于篇幅限制，这里用比较科普性质的描述，来简单介绍一下这个平台的理念，在 BSV 上的实现方式，以及可能的商业模式展望。 智能合约的思考 提起智能合约，我们的第一印象就是 ETH 上用 Solidity 写的那些程序。ETH 的理念是 Code is Law，代码即法律。换句话说，如果代码规定了怎样的执行逻辑，那系统就会一丝不苟地执行，排除一切人治的因素，实现所谓的去中心化自治组织。但是，在以太坊上尝试了那么多项目之后，人们发现，现实世界的复杂程度远远超过计算机语言或者代码可以描述的范围。以太坊是希望成为去中心化的裁决中心，人们预先指定好裁决的代码，把裁决的规则交给代码去做，这里的裁决包括但不限制于链上资产的归属权。但是以太坊的思维在这里过度的依赖代码规则的完备性，而忽视带有主观思维的人在其中的作用，而且现在并没有一种程序具备高等智能，可以像人类一样拥有发散性的和主观性的思维（人工智能还差很远，而且严格来讲，人工智能已经超出了代码的范畴，进入了智能层次，也就和人本身在系统中的作用一样）。 以太坊这种代码即法律的理念在实施起来是非常困难的。实际上，以太坊上很多的复杂智能合约依旧离不开人治，比方说依赖于外部信息导入的预言机，借贷关系的清结算，投票选举等等都是需要依靠人来做出决策影响系统状态的代码。最为嘲讽的是，当时的 DAO 出现 bug，早期投资者损失惨重的时候，以太坊的社区怎么处理的呢？如果按照以太坊的理念，代码即法律，就算代码有 bug，也应该严格遵循代码的处理结果，这样才叫真正践行了什么叫做代码即法律。历史我们都知道，有小部分人真正坚守代码即法律的核心思想，接受了被攻击的结果，产生了 etc（etc 才是真正的以太坊），而以 V 神为主导的开发团队为了保护早期投资人的利益，选择从被攻击高度硬分叉，修复了 bug，背离了代码即法律的根本理念，产生了现在的 ETH。另外，由于 ETH 过度依赖代码的去中心化和不可篡改，需要所有的节点都在虚拟机中执行一遍代码（无论是否与自己有关），加上十几秒级的出块时间，很多节点来不及执行合约，永远追不上最新高度。这些极大的限制了以太坊的扩容能力，使得以太坊和 btc 一样，又贵又慢。 分析了以太坊现在面临的困境，我们来重新审视一下智能合约本身。CSW 说过，code is not law，law is law。代码不是法律，法律本身才是法律。我们永远不要忽视一点，那就是系统与人之间的关系。我们希望借助区块链技术来服务人类，来提高生产效率，降低建立信任的成本，提高各个参与方的透明度，智能合约只是我们实现这一目的的一个工具，我们需要明确这一基础，不能本末倒置。现实中有各种各样的复杂场景可以使用区块链技术来解决，我们是区块链技术的使用者，而不应该去反过来拿着代码去强制要求现在的场景按照代码的要求来设计。正确的使用落地路径，是遵循现在的法制社会信用社会的运行规则，尊重现实，尊重与人之间的交互。 智能合约的一个最常见的场景，就是需要将现实社会的资产映射到数字世界，实现资产数据化，方便确权和交易流通。从公司的股权，到房产地产，再到飞机票电影票，再到内容版权，一切现实中抽象或具象的资产，都可以通过某些规则来映射到区块链网络中，从而让这些资产可以使用区块链的优势，去信任，易确权，易流通，同时透明公开，并间接跨平台跨行业统一链上信息等等。但是这些现实应用的实现，必须依赖一个组织来保证确权的过程，以及在遭遇侵权时的强制维权。一个不可篡改的账本只能保证记录是公开的，但是保证不了其资产的拥有者本身。如果资产所有人遭遇到暴力胁迫，或者欺诈勒索等非法伤害，而迫于无奈暂时交出其链上资产，代码是没有办法帮所有人去追回损失的。以太坊那样的代码即法律逻辑，无法处理现实世界的这些复杂情形，代码只能保护数据本身，保护不了使用数据的人，只有真实世界的法律可以保护使用者。因此，如果执法机关无法接入到合约中，来按照法律来修改合约状态，那么现实中的资产也很难在链上得到保证。Tokenized 的设计，首要需要面对的问题就是如何接入监管和执法机关，以及接入适用的法律条文，原因很简单，Tokenized 的目标并不仅仅是什么 IXO 这么无聊的资金盘游戏，而是真实世界那纷繁复杂的，难以统一化难以被代码化的资产。 商户发行 token 的目的不仅仅是为了炒作，它更基本的逻辑是在商户和用户之间建立一个经济激励系统。这个经济系统能够同时给商户和他们的用户带来双赢（win-win），比方说一个积分系统，商户可以使用积分来进行推广，降低推广费用，而用户可以积攒积分来换取更多商品和服务。因此，设计一个 token 系统，必须能够允许各种各样的经济激励模式可行。我们知道，在以太坊上经常使用发行的代币标准 erc20（标准化 token，如 BNB，HT 等），以及 erc721（特异化 token，如加密猫）就可以实现两种不同模式的经济激励。当然，tokenized 的设计需要允许实现各种复杂的经济激励模型，以方便 token 系统能够运转起来。以太坊的上述模型比较简单，参与方只有发行方（开发者）和使用者，而 tokenized 的系统，为了支持真实世界的复杂情形，模型的参与方可以有用户，合规监管者，执法者，比特币矿工，以及发行方等。 之所以单独提及发行方，因为信任发行方是 token 系统的信任基石。这个是任何 token 系统都不能绕过的根本问题，比如 erc20 发行的 ICO，投资者需要信任发行方的项目，需要信任他们会按照他们的白皮书来运作，也需要信任他们不会卷款跑路。以太坊只能帮助发行方发币，但是无法解决信任发行方的问题，也无法阻止或者惩罚发行方违背契约，事实上不止以太坊实现不了，目前没有代码可以解决这些现实中的问题，现代的社会解决这个问题依靠的是法律和法院。我们现在就生活在一个需要无时无刻不在信任别人的社会中，从我们的衣食住行等基本需求，到医疗养老安全等社会需求，都需要我们信任别人，包括信任政府。因为信任是契约的基石，而契约，则是现代社会的基石。当然，也无可避免地存在背信弃义的行为，作假的商家可以背信弃义，ICO 发行方也可以背信弃义，甚至政府也可能背信弃义，这不是信任带来的问题，而恰恰是不够信任，无法鉴别作假，作假成本太低导致的。而区块链技术的存在，不是杜绝背信弃义的行为，也不是让人们无需信任他人，而是通过技术手段提高透明度，增加作假时掩盖的成本，增加作恶的难度，保存作恶的证据，让人们可以更容易地信任别人，信任发行方，信任政府，降低获取信任的成本。因此，tokenized 系统作为 token 系统的一种，也需要信任发行方可以履约，同时引入监管和执法，来惩罚违约的情形。打个比方，发行电影票 token 的商户需要保证他们的电影票可以兑换成观影服务，发行飞机票 token 的商户需要保证 token 的持有者可以乘坐飞机，发行房产 token 的政府，需要保证合法的 token 持有者拥有房产。无法否认，这一切都离不开我们对发行方的信任。 之后就是关于经济自由的论点的思考，区块链还有一个重要的特性，就是免许可（permissionless）。免许可的含义就是任何人都可以参与到这个系统里，不需要别人的同意。比如中国想使用 Tokenized 协议来发行某种产权证明，那么不需要征得美国人的同意。协议本身是免许可的，任何人都可以作为主体发行属于自己的 token。但是免许可不代表无法无天，因为 token 的最终目的是映射真实世界的资产，真实世界的资产就要在真实世界的框架下运行，虽然任何人都有发行任何 token 的自由，但是如果你希望你的 token 能够获取到主流社会的支持，那么你的 token 就要在监管和执法的框架下运行。发行自由和使用自由是两个方面，就好比支持言论自由，不代表支持诽谤侮辱攻击他人的言论。 总结一下我对智能合约的看法，智能合约应该是依托于区块链技术，为现实世界的合约提供执行的透明性，系统的简洁性，历史的可靠性，监管的便利性，以及免许可，跨平台，去信任等各种优势的一个工具，智能合约只是工具，不是目的。而对 token 的看法，就是现实社会中的各种资产的数字区块链化表示，具备流通的便利，鉴权防伪的简单高效，手续费低摩擦，清结算高效快速等特点。token 运行在合约的框架下，需要同时满足链上的技术属性以及真实社会中的法律和监管属性。 Tokenized 的设计方案 基于刚才提到的通证系统和智能合约的要素，Tokenized 就需要设计和实现这样一个系统。而实现方案，简单来说就是利用 BSV 区块链的各种优势，将 token 资产以及操作写入到比特币的交易中，并利用比特币的公私钥地址系统来进行鉴权（authentication）和授权（authorization），使用自动代理节点来执行智能合约的二层网络解决方案。 这里分析一下为什么要在 BSV 上做，以及为什么只能在 BSV 上做。首先是得益于基础设施的稳定性。BSV 的核心思想就是稳定协议，要让基础设施像磐石一样稳定坚固。试想一个 token 系统，如果上面运行了大量的有真实社会的价值的合约和数字资产，经常频繁的更改协议是绝对不可取的，如果出现像这次 bch 硬分叉升级所遭遇的 3 小时网络瘫痪的问题，那造成的经济损失和信任损失是不可估量的。其次，需要 PoW 来保证基础区块链的公平性。目前不存在比 PoW 这种直接将电力能源转化成熵减（分布式系统达成一致的稳定态）的更为高效的方案，所有 PoS 或者 DPoS 等变种要么有严重的中心化问题，要么不是免许可链，要么流动性堪忧。再次，由于大部分的 token 都是价值相对低廉的积分系统，因此在交易时的手续费低廉和清结算实效性上有更强的要求，像以太坊那样昂贵的 gas 费以及十几秒的确认时间对于微支付是及其不友好的，因此需要借助于小额支付的 0 确认稳定而可靠。最后，因为真实世界的 token 是一个非常巨大的市场，最终应用一旦普及，链上交易量一定会爆发，为了避免交易爆发导致的手续费暴涨，需要一个巨大容量（无上限）的区块链系统来容纳那么多的交易。满足上面条件并坚定地实施扩容路线的区块链系统只有 BSV，其他的链不是太慢就是太小就是太贵就是太折腾。 Tokenized 技术上的实现简单地讲，就是定义了一系列的概念和操作，并将数据置入交易的 OP_RETURN 的空间内，并使用一个或多个自动代理节点来运行智能合约，由这些代理节点执行智能合约的代码，并将结果发布到链上。所有的步骤和中间数据都是公开在比特币交易历史中可供校验的。这样的设计有很多好处，首先对底层区块链而言，没有额外的负担。矿工或比特币客户端不需要对这些交易进行特殊的计算，不像以太坊那样需要在虚拟机中执行代码，对他们来说，这些 token 合约交易只是普通的比特币交易，而且是微型交易，只需要按照比特币的交易确认流程来处理就可以，以后可以和比特币的交易一样进行并行交易校验，极大的提升处理性能（以太坊的机制很难实现并行校验）。其次，由于我们前文提到，token 系统需要信任发行者，在 tokenized 的系统中，智能合约的执行节点由发行者或发行者所委托的机构来运行，执行节点也只运行和自己业务相关的智能合约，不需要消耗计算资源来运行其他人的合约，而普通用户则不需要运行执行节点，只需要运行可以构造 token 交易以及解析 token 交易的客户端钱包即可，并且由于历史记录可以公开查询，客户可以轻易发现 token 发行者作恶，并可以使用法律手段申请维权，这样一方面节省了运算资源，一方面可以将 token 世界和显示世界连接起来。再次，由于 tokenized 借助比特币的地址系统来进行身份认证和确权，因此天生集成了地址系统非对称加密的特性，可以使用签名机制来确保资产和相关操作不会被第三方伪造，同时私钥既保证了发行者的发行权，也保证了用户的持有权。最后，通过一些灵活多变的操作定义，可以更方便的实现资产的监管和执法，比如冻结，没收，解冻等操作，预留给监管一些机制可以保证监管者有权利进行执法。 在系统地了解 tokenized 的设计之前，需要对里面的一些常用的概念，以及这些概念在区块链中的表现进行定义。 首先是合约（contract）。合约的含义是，预设了一些资产，给定一些条件和条款，对一些给定的操作进行运算和处理，并返回最终的处理结果。因此，tokenized 的智能合约在设计的时候，考虑的内容和传统世界合约所考虑的内容是类似的，重点是条款和条件的约定，以及甲方乙方以及第三方监管等各种角色的分配，角色的任务和职责等。Tokenized 支持两种类型的合约，静态合约和动态合约。静态合约就是那种不需要一个执行节点来执行运算并长期维护，在发布之后就可以独立工作的合约，比如保密协议，用户协议，现金欠条，雇佣合同等静态内容。而动态合约则需要发行方来运行维护执行节点，由各个参与人不断提供数据输入并由代码计算结果的合约，常见的如 token，股权，票证，会员卡等合约。而此处的智能合约指代的就是动态合约。动态合约由发行者拟定合约内容（定义合约的各个方面，以及哪些内容可以修改），并向执行节点发送一个 Offer 合约的指令，并由执行节点返回一个合约构造（contract formation）的返回交易，才算创建合约成功。如果没有合约构造交易，则合约无效。另外，发行者也可以向执行节点发送修正案，修正案所可以修正的内容取决于合约的定义，如果合约中规定有些字段不可修改，则无法修改合约的这些字段。 权限标志（Authorization Flag），这个就是上文中提到的合约条款的一部分，归定了哪些字段是否可以被修改，哪些字段可以被谁修改等条款，此条款在合约或资产被创建的时候，随着 Offer 函数被定义好，之后就按照这个条款执行。 比特币交易（transaction）。Tokenized 系统使用的是标准 P2PKH（Pay to Public Key Hash，也就是我们常用的最简单的交易脚本格式）格式的交易。而 token 指令和数据被称为负载（payload），装载一笔交易最后一个输出的 op_return 中。注意，这里一个操作只能由一个交易完成，一个交易也只能表示一个操作。 操作（actions）。操作也可以理解为动作，就是负责将 token 的状态进行改变的一个过程。Tokenized 使用一种称为请求与响应（request and response）的机制来执行动作（除了 message 和 registry）。关于操作，这里有两个重要组件，Requester（请求者）和 Responser（响应者）。所有希望执行操作的角色，包括用户和发行者以及监管者等作为请求者，而执行合约的节点作为响应者。所有动作必须发送给合约对应的地址，而这些动作是否合法以及是否能生效，取决于执行节点使用合约地址对外发送的响应，只有正确响应了的动作才合法，执行节点也可以根据各种条款或监管来拒绝这次操作。请求和响应各是一笔交易，请求的交易接收方为合约地址，而响应的交易发送方为合约地址。操作的类型有很多，包括但不限于发行合约，修改合约，静态合约，定义资产 token，修改 token，token 转账和结算，投票选举等治理，执法操作如冻结资产，没收资产，解冻和恢复资产，注册白名单，黑名单，以及发送消息等等，具体的操作类型可以参考官方的定义或者白皮书。 资产（token），资产 token 是一个用来指代现实世界的资产的一个数据模型。资产可以被一个或多个合约来进行操作，资产本身只是代表所有权，但是可以衍生为身份，投票权等等一切抽象资产。每一个 token 在链上都是唯一的，资产的定义，使用合约地址加一个 AssetId（Asset ID = Asset Type + base58 (Asset Code + checksum)）来确保资产的唯一性。资产的本质是对现实生活中某项权益的等价替代物，如果 token 资产丧失，对应的现实中的权益也应该丧失。现在的 Tokenized 协议支持的资产包括：优惠券（Coupons），用户积分（Loyalty Points），会员卡（Membership），普通公司股（Common Share），票证（Admission Ticket），稳定币等法币（Currency）。 资产转移（transfer），区别于比特币交易，这是 token 那一层网络的概念，指的是 token 所有权的交换，将 token 转送给其他人。转移 token 或发送 token，可以指定一个或多个接收者，转移了 token 就等同于转移了 token 所赋予的权利。另外 token 的转移要根据合约的条款来执行，比如 token 的转移需要支持身份验证 kyc，支持反洗钱 aml 等等。Tokenized 不止支持简单的 token 发送，还支持通过智能合约来进行 token 和比特币（BSV）的原子交换，token 与 token 之间的原子交换等等功能。 治理（governance）。Tokenized 智能合约平台支持选举，投票等政治治理方式。前文提到的权限标志（authorization flag）是一种治理方式，定义了合约和 token 的定义权，解释权和修改权等权限。当然也可以实现各种变种的投票选举。比如相对阈值投票，绝对阈值投票，选区投票（如美国大选），加权投票等等花式投票方案。投票有这样几个过程，首先管理员需要给出提案，以及预先定义好票数的分派，然后由各个成员进行投票，最后由执行节点进行票数统计并宣布投票结果。每一步操作都是一笔智能合约的交易。 执法（Enforcemence）。执法就是指监管部门在发现违法或违规行为后，按照当地的法律法规对资产进行强制性地管理。执法的主体可以是第三方监管，也可以是发行者，甚至可能是多数投票者，取决于合约和资产的定义。执法操作包括资产冻结，资产解冻，资产没收，资产归还等。和前面的操作一样，需要由执法者向合约执行节点发送执法命令（Order），并由执法节点返回执法结果来完成执法。链上执法的情形和现实社会中的执法情形是相似的，不同的是，链上执法的过程和步骤透明公开，受到所有人的监督，这也就反过来监控执法者，避免执法者滥用权力和违规执法。 预言机（oracle）。预言机或者叫做 “神谕”，是一个将现实生活中的某个场景条件转换为数据，导入到区块链系统中，并用自己的签名来为其信用做背书的一个角色。比如一些赌博合约，需要依赖某场球赛的结果，或者依赖美国大选谁获胜，再比如一些依靠某地法律的合约，法律的某修正案是否通过会影响这个合约的状态和执行，这时就需要一个大家都信任的角色将这些真实世界的事件结果导入到区块链中。只要可以获得别人的信任，任何人都可以成为预言机，甚至可以通过提供信用背书来盈利，合约也可以引入外部的可信预言机来影响合约的执行。比如在 token 系统中常见的预言机有第三方 kyc，第三方征信，第三方反洗钱系统等，都可以作为合约执行的某个条件之一。 注册表（register）。注册表也是一种操作，可以预先指定一个列表，然后合约在执行过程中会根据这个列表的结果进行决策，列表在合约启动之后可以自由增删改。常用的注册表有白名单，黑名单，可信任网站，可信任证书或敏感内容等等。 消息（message）。消息可以由一个地址发给另一个地址，作为聊天或者记录聊天的工具。同时消息也是执行节点在收到请求后返回处理结果的一个重要手段，根据不同的操作，对请求的地址返回操作结果，就是以成功消息或拒绝消息而存在的。 其他注意事项。 由于每一步操作以及其返回值都是一笔比特币交易（类似于以太坊收取 gas 费），所以操作都是付费 BSV 的。作为发行者或者执行节点，不用预留比特币来进行计算（与以太坊不同，以太坊的合约需要预留 gas 费用才能推动合约执行）。用户在发起请求的时候，所构造的交易必须预留足够用来返回的金额（返回时的矿工费）发送给合约执行节点，如果金额不足，则执行节点则不会返回结果，请求的操作也不会生效。这样的模式可以有效避免垃圾请求消耗掉节点预留的比特币，同时免除对合约计算步骤的计费（以太坊根据合约的计算类型收取不同的 gas），因为合约执行节点的性能要强大很多。这样既降低了发行方的成本，也降低了使用方的成本。 另外，token 操作交易一定是发往合约地址或者来自合约地址，这是为了保证使用比特币的 address 来进行权限认证。 一个操作只能用一笔交易来完成，同样一个交易也只能代表一个操作，这是为了保证操作的原子性（要么执行，要么不执行）。 action 必须位于最后一个输出。 如果一个交易非法，并且没有正确设置资金返回地址，则资金和消息返回给管理员。 所有的资产转移操作必须明确资产的 id，并且该资产是正确创建过的。 资产转移之前，必须要求拥有资产（即合约执行节点返回过资产转移成功的交易）。这一系列操作可以 0 确认完成，也可以链下构造再统一上链。 其他注意事项请参考官方文档： Tokenized 注意事项 关于更多的技术方面的细节，我以后会陆续写一些技术性的文档，说明如何搭建和构造节点，如何发币等等。 商业模型分析和展望 为了了解 Tokenized 的强大之处，以及应用场景，我们可以通过官网给出的一个示例来加以说明。 飞行积分示例 这里有一个航空公司，称为 TokenAir，他们有一套可以通过增加飞行时间来累积的积分系统。而我们的 Bob 是一个需要经常坐飞机的销售，因为经常坐飞机，所以他积攒了 400 万飞行积分（frequent flyer point，后文简称为 FFP）。他并不打算使用这些积分来消费，而是决定把这些积分赠送给他的姐姐 Dianne。 根据航空公司的智能合约，使用 token 进行消费必须通过 kyc 认证，如果 Dianne 没有经过 kyc 认证，那么 Bob 无法将积分送给她。而这个 kyc 认证是一个第三方提供的身份验证服务，有点类似我们的支付宝授权登录这样的实名服务。Dianne 在这个第三方预言机中成功注册了自己并通过了认证，并且向这个预言机发送请求，要求预言机发送一个签名消息的交易证明自己的身份。在获得了这个消息之后，她就可以从 Bob 那里接受 FFP 了。 Bob 此时构造一个 token 转移的请求给航空公司，请求转移 200 万个 FFP 给 Dianne 的地址。航空公司收到这个请求后，会通过身份预言机之前发出的签名交易，来判断 Dianne 是否通过了身份认证，如果签名合法，那么航空公司的执行节点会通知 Bob，token 转移成功，而 Dianne 则会在钱包里看到自己多了 200 万 FFP。 Dianne 就要拿着这些积分进行消费了。接下来我们来看一下 tokenized 如何实现一些复杂的消费逻辑。 Dianne 希望从航空公司预定一系列的服务套餐，这个套餐包括 3 张去斐济的商务舱机票，1 张超额行李的优惠券，6 张休息室的休息门票，7 晚的酒店家庭房入住券，21 张早餐券，一张 spa 优惠券，3 张高尔夫券，3 天的儿童俱乐部游玩权限，3 张豪华晚餐美食的享用券（之所以写这么多乱七八糟的套餐赠品，正是为了体现 token 系统的细粒度和跨平台优势。试想对比一下传统酒店服务的各种纸质优惠券）。而麻烦的是，这些服务套餐仅仅用 200 万 FFP 并不够，需要额外支付 0.2324 个比特币来补齐费用。 这个场景构成了一个复杂的多输入，多输出的消费模型。我们来看下 tokenized 如何实现这个模型，并保证 Dianne 能够精确计量和消费这些服务。 Dianna 在预定之前，从航空公司的节点上获取了一个交易模板，只要她按照这个模板正确填入自己的签名，并正确发送比特币的余额就可以成功下单。这些都可以由钱包的软件来实现，Dianne 需要做的就是查看一下套餐的内容，查看一下自己的比特币和 FFP 余额，然后选择是否订购这个服务即可。 交易模板里面规定了套餐的服务，以及需要的花费，并留出了签名的空白来给客户端填写，客户端只需要自动化填写好这些签名，补齐比特币，并构造交易来花费 FFP 和比特币给航空公司就可以快速完成订单。 航空公司如果收到了这笔订单交易，就需要由执行节点来完成结算，将对应的 token 发送给 Dianne。于是执行节点校验了这笔交易，发现合法并且满足要求，就将对应的各种服务券发放给 Dianne（这里为了叙述简单，结算过程稍微做了简化），然后 Dianne 就可以在钱包中看到机票酒店以及一系列服务的服务券了。 官方的文档只是描述到这里，我们可以接着畅想，在 Dianne 拿到各种服务券之后，应该如何去消费。而那些对应的提供商如何去校验 Dianne 确实拥有这些权利。 Dinanne 在到达目的地之后，在享受服务之前，将对应的 token 发送给服务提供者，服务提供者在确认 token 真实可信并已经花费之后，给她提供对应的服务。并且可以直接确信 token 是无伪造的，同时还可以确信 Dianne 不会拿着同样的优惠券消费两次服务。 分析了上述的案例，我们来总结一些使用区块链 token 系统给发行方和用户带来了怎样的优质体验。 首先对于航空公司和斐济的这些服务提供商来说，他们建立可靠网络系统的成本被大大降低，无需花费大量的精力在票证和优惠券的系统防伪造，防双花，防入侵等安全措施上，可以更为专注地设计他们自己的 token 系统。 另外，极大的降低了航空公司和这些服务商之间进行数据交换的成本，以前需要独自开发各种各样的适配系统，为了支持一个新服务就需要单独开发一套新的数据交换系统，以至于系统过于复杂臃肿，难以维护和管理。现在有了区块链这个超级跨界平台，各个服务商就可以专注于打造自己的系统和合约，而接入其他生态伙伴也会因为区块链的平台开放性而变得简单。 因为历史记录真实可信，而且永不丢失，这给商家提供了很便利的会计统计工具，用来计算盈亏，调整相应的商业对策。 对于用户而言，一套钱包 app，就可以涵盖如此之多的服务，不用手里拿着各种各样的实体票券来进行消费，省心省力，不怕服务丢失，而且票证真实可信，不怕别人伪造或者顶替自己。 用户也可以精确地计算自己消费了哪些服务，还有哪些服务没有消费，甚至没有消费的一些票券 token 还可以转让给别人（如果满足合约）来进行收益最大化。 还有，用户的消费记录被记载在区块链上，天然就可以作为可信的发票凭证，用来进行个人报税或者报销凭证也是最为便利不过了。 通过上面的分析，我们可以直观地了解到tokenized和BSV结合能够产生的奇妙化学反应，以及一些新兴的消费和服务模式，还有更多的可能和更大的空间等待我们去探索和实现。区块链应用落地，指望不上其他的山寨altcoin，只有像BSV这样务实又贴近监管，贴近主流社会的解决方案才是正道。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 Tokenized |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-client/planaria.html":{"url":"chapter-client/planaria.html","title":"Planaria","keywords":"","body":"Planaria Bitcoin SV 的开发哲学 —— 变形虫框架 Source 之前的心路历程的第二篇由于需要收集和准备的材料很多，加上工作限制时间有限，之后再发布。 前言 与币圈其他的浮躁气氛不同，现在 BSV 的社区是一个非常有创造力，非常有活力的社区。在分叉后不到半年的时间里，各种应用如雨后春笋一般涌现出来。我早期研究比特币的时候，设想了很多比特币支付功能以外的扩展应用，可惜受限于区块容量，脚本制约等等因素无法实现，而 BSV 在回归中本聪版本的比特币的路上，开放了很多限制，让曾经无法实现的想法得以实现，也极大的促进了生产力的提升。有点类似中国的改革开放，放开限制，让资本、技术、开发者自由加入，充分竞争，成就了中国经济的奇迹。 目前 BSV 的应用大多集中在信息的上链存储，得益于巨大的区块容量（以后还将坚定不移的扩大，直到 Unlimited），链上的储存成本之低已经碾压所有主流公链，之后随着区块进一步扩大，这个成本还会降到更低。如果上传一篇文章到链上，只需几分钱的矿工费，就可以让你的文字永存于世上。按照 1sat/byte 的费率计价（如果矿工接受，这个费率可以更低），上传 1M 的内容上链大概需要 0.01 个 BSV，按目前的价格 500 人民币的币价来算，大概需要 5 块钱。乍一看 5 块钱 1M 的成本跟 AWS S3 这样的中心化云服务储存桶相比简直是高的可笑，但是加上以下我说的这几个条件，这个成本就会变得非常合理而且难以置信的低。 数据需要绝对安全的保存，不允许篡改或毁坏，安全级别达到 11 个九（99.999999999％） 数据要保存 100 年以上 数据可以随用随取，读取数据成本很低（参考 AWS Glacier 查询归档数据的成本） 一次付费，永久保存（无需续费） 不需要注册和身份认证，免许可，任何人都有上传的自由 综合以上的分析可以知道，区块链技术在信息安全存储的方面具有所有传统中心化云存储所不具备的安全优势和成本优势。正是这种成本优势，才能引入大规模的商业应用，才能在此基础上构建更多功能复杂的应用。 Unwriter BSV 社区的开发者有很多大牛，其中我最佩服的就是 Unwriter，不止因为技术层面，更是因为立场和思想层面。unwriter 是一个匿名的开发者，从未接受 BCH 或 BSV 社区的捐赠，是一个保持经济中立的独立开发者。他的目的很纯粹，就是利用区块链的技术，来实现伟大的产品。而在 BCH 和 BSV 分家之后，他写了一篇文章叫做《The resolution of the Bitcoin Cash experiment》，表明了立场，开发者才是一条公链项目最大的财富，开发者才是资本家。 The application developers are the “capitalists” of the “nation” of Bitcoin. And THEY are the ones who determine the “wealth of the nation”. 公链的价值来源于应用，而应用不是凭空产生的，是开发者开发出来的，最能吸引开发者的公链，最能吸引应用。作为开发者，最不希望的就是把自己的应用建立在一个根基不稳定的系统之上，如同 BCH 这种半年一大改的链，没有人希望之前的开发成果随着一次可有可无的升级而全部重构。 这篇文章对我的影响很大，我本身也是开发者，对分叉当时 ABC 的所作所为看在眼里，记在心上，这也是我全面支持 BSV 的很大的一个影响因素。 英文原版如下： The resolution of the Bitcoin Cash experiment​medium.com 还可以参考中文版《深度解析比特币现金实验》（这里感谢黄酥酥的翻译）： Sina Visitor System​www.weibo.com Unwriter 的最重要的作品就是 BitDB，这是一个曾经开发在分叉前的 BCH 上的持久层框架，它能够将比特币区块链映射成一个 MongoDB 的实例，支持通过 MongoDB 的查询语句来查询区块链。一句话概括，就是这个框架将区块链当做数据库来使用，在分叉之后，Unwriter 放弃在 BCH 开发，将所有的项目转向 BSV。 在 BitDB 的基础之上，衍生出来了很多变种的数据库应用，挑几个举举栗子（日后有时间会逐个总结一下这些数据库应用的使用方法和应用场景） BitDB 变种 Genesis（创世纪）：一个用来支持标准地址查询全量交易的数据库，可以看做一个全量区块链浏览器 A Bitcoin SV Exclusive BitDB node​medium.com Babel（巴别塔）：一个专门用来存储和查询链上应用数据的数据库，可以看做 Genesis 的一个子集，只关心数据体不关心交易内容。 A BitDB Node for Data-Only Bitcoin Applications​medium.com Chronos（克罗诺斯 —— 时间之神）：一个专门使用时间戳来操作和查询数据的数据库，查询规范与前两个不太一样，专门用来处理时间相关的应用。 An Ephemeral BitDB for Dealing with Time​medium.com Meta（元）：一个对区块元数据进行操作和处理的数据库，只关心区块，不关心区块内部的交易。 A BitDB for Bitcoin Block Metadata​medium.com Bitsocket（比特套接字）：一个监听区块链事件，由事件触发业务逻辑的推送消息总线框架。 A Programmable Bitcoin Push Notifications API​medium.com Planaria（变形虫）：一个支持自由定制规则的储存框架，在此基础上可以实现所有的程序逻辑，这也是本文要重点说明的理论基础。 Opening up a whole new dimension to programming Bitcoin powered state machines​medium.com 变形虫 Planaria 上文中举例的各种特殊的数据库应用都可以归为具有某种特定实现的变形虫。变形虫这个框架阐述了如何基于比特币的存储功能，来实现几乎所有的应用程序的哲学逻辑，也是论证 Bitcoin Maximalist 一直在信仰的比特币可以实现世间万物的逻辑基础。 有些人说 ABC 和 BSV 没有什么本质区别，都是大区块币，这些人恰恰只能看到表象，看不到本质。ABC 和 BSV 的核心分歧在于中本聪比特币本身的设计是不是完备的，ABC 认为比特币的设计是老旧的，功能残缺的，需要各种炫技的新技术（无论有没有用），需要半年一次的迭代更新，一次一次进行底层的修改来追赶热点。BSV 则认为，比特币的设计已经很完备，底层逻辑无需改变，需要放开各种无谓的限制，让应用在基盘之上自由生长。之前关于 CTOR 的问题就有人论证过，使用比特币已有的脚本操作码就可以实现这个功能，而 ABC 却不惜以分叉为代价来强行加入这个本就可以实现的功能作为底层的一部分，彻底破坏了矿工按照交易体积来计价收费的逻辑，强行把比特币变成以太坊（按照不同的操作码进行 gas 计价，再乘上 gas 单价来算出手续费）。 我认为之所以 Unwriter 在变形虫的框架文档中介绍了很多看似是哲学以及毫不相干的内容（又是状态机，又是薛定谔的猫），实际上就是在证明比特币可以实现图灵完备，可以实现复杂的智能合约。 最近我希望通过 BSV 的基础设施来实现一些小的功能应用，所以一直在研究现有的框架，变形虫就是研究的一个重点，说实话，现在我也不敢完全宣称了解了其中的全部思想，但就以我粗浅的理解来看，Unwriter 所描述的，正是 CSW 所说的 MetaNet 万链归一的可能性，从理论到实际使用，都没有背离最初支持 BSV 所希望的愿景。 文章如下：我尽量以自己的理解来简单阐述一下 Planaria Introduction​docs.planaria.network Bitcoin SV 的开发哲学 无极生太极，太极生两仪，两仪生四象，四象成八卦，八卦演万物。 看似是玄学的话，却是计算机最基本的事实。我们现在所有复杂的计算机程序，应用，图片，视频等等等等归根结底就是 0 和 1 的组合，换句话说，所有的数据都可以被划归成 0 和 1，也就是文件。 Everything is a file. If you think about it, everything runs on a file. And all applications are just files, which make use of other files. Once you see it this way, you’ll realize that Planaria can be used to build all kinds of full fledged Bitcoin-powered computation backends. Below I’ve listed some interesting technologies that are all built on files just to help with imagination. But think about it. EVERYTHING IS A FILE. 这里的文件不是简单意义上的储存在硬盘上带后缀的 “文件”，而是一切数据的统称。存在内存里的，缓存里的等等等等。对数据进行的处理称为操作，操作依赖代码，代码本身也是文件。 BSV 区块链可以低成本存储文件，而利用变形虫框架可以对文件进行增查删改。很多人质疑这一点，文件一旦上链不就永不可更改了吗？这点没有错，但是如果跳出这个上链的文件本身来看，上链的文件只是这个文件在一个固定的时间戳的快照，快照是永不更改的，而文件是可以更改的。类比一下，我们活着其实也是被时间定格在一个个的快照中，过去的自己没有办法更改，但是现在的自己可以改变，我们随时随地可以产生新的快照，已经产生的快照作为我们的历史被定格，未来却是可以改变的。上一秒的我和这一秒的我还是同一个我吗？ 这种文件通过快照来更新自己的模式我们并不陌生，Git 就是一个最直观的例子。通过 Git 系统，也可以对文件进行增查删改，而且 Git 存储文件与传统文件存储不同的地方是，Git 记录了一个文件的所有变更历史，可以追踪溯源回滚等，传统文件存储用新状态替换掉旧状态，没办法保留历史。Git 通过一次次的提交（Git commit）来修改文件的最新版本，最新版本就是最新的状态，而一次次的提交被 Branch（分支）定格在历史中，这种模式和比特币的文件管理简直是天作之合，比特币的文件管理从安全性和身份管理上甚至更为优越，还自带了价值传递的功能，不夸张的说，比特币 BSV 的文件系统可以看做一个超级 Git。 Unwriter 在文中，将比特币称为发动机（motor），将比特币看做动力源，源源不断的由矿工提供交易和事件（驱动力）。并对这种动力源进行了一些要求： The rotation logic (Bitcoin's algorithm) is deterministic and secure (powered by Proof of Work), making it the perfectly stable piece of technology to power all kinds of useful machines. 简单解释一下，这种动力源要可预测（比如汽油的燃烧产生的动力，是可控的），动力源要安全（由 PoW 保证），动力源要稳定。这样就可以驱动机器去运转。 Unwriter 将应用程序称为机器（machine），机器需要动力源来驱动，而相同的动力源可以根据机器的构造不同，产生不同的效果。比如同样品质的汽油，在不同的车上的能耗比不一样。有了一个稳定的动力源，就可以以它为基础构造各种各样的机器，来实现各种各样的功能。 有限状态机（Finite State Machine） 文中阐述了使用 BSV 构建有限状态机。什么是有限状态机？这是一个计算机的术语，用于描述一种具有有限个状态，并能在这些状态中进行切换的机器（或程序） 有限状态机 （英语：finite-state machine，缩写：FSM）又称 有限状态自动机 ，简称 状态机 ，是表示有限个 状态 以及在这些状态之间的转移和动作等行为的 数学模型。 比如 unwriter 在文中说明的地铁闸机，闸机有两种状态，一种是锁定（人不能通过），一种是解锁（可以通过），而输入的动力源种类也有两种，一种是刷卡，一种是推动。闸机可以根据输入的动力源来切换自己所处的状态。如果闸机锁定，此时刷卡，闸机就会变成解锁状态，而如果此时推动，则继续锁定。 将一个有限状态的数据作为机器，给其一定的动力源作为输入（input），就会产生一定的输出（output），输出取决于输入和机器的处理逻辑，这就是计算机函数（function）或者方法（method）的基本形态。 将 BSV 的链上交易作为动力源，将已经上链存储的数据作为机器，就可以推动任意的程序来运转，这就是 BSV 智能合约的理论基础。 无限状态机（Infinite State Machine） 上文提到的有限状态机已经可以帮助我们事先几乎所有的应用程序，但是比特币可以实现的远不止这些。下文脑洞略大，但并非胡说八道，有研究和理论的基础。 Unwriter 用薛定谔的猫（同时是生和死两种状态的叠加）来形容这种状态机，这也是这篇文章让人最难于理解的地方，这种同时具有多个甚至可以相互矛盾的状态的现象不止是理论，而且真实存在。量子物理的世界就充斥着这种矛盾和和谐。 薛定谔的猫是什么问题，大家想必都有所了解。这里我们还是针对状态机来说明。 we can build applications that are NOT constrained by resources. 我们可以构造出一种不被文件资源所限制的应用 We can build machines that: 我们可以构造出满足以下条件的状态机： are running and not running at the same time（在同一个时间处于运行与关闭的叠加态）. don't have to exist nor run today, yet can be regarded as \"running\" today（并不需要现在就在运行，却可以被看做一直在运行）. can have multiple parallel states that even contradict with one another（可以同时具备多个平行的状态，甚至状态之间互相矛盾）. never die, even when they are not alive（从来不会死，即使从来没有被启动过）. can interact with one another in non-deterministic ways（可以和其他的状态机之间以一种 “不可预测” 的方式交互）. can interact with one another in combinations which even its original inventors never foresaw（可以和其他状态机相互组合，产生连原作者也无法预料到的神奇现象）. spawn other such machines without external intervention（可以在没有外界影响的情况下，孵化出其他的状态机） Unwriter 说实现这个需要彻底放开所有的脚本限制。在我看来，这种类型的程序，更像是无法预测状态的程序，量子力学有提到，这个世界是测不准的，存在大量的真随机。而所有生物的产生和演化更符合上述提到的测不准现象，这就有可能在比特币系统上衍生出原始计算机生物，进而随机地衍生出高等计算机生物（人工智能），之前记得在那里看到过，人脑也是没办法用计算机模拟的，因为人脑是测不准的。而无限状态的程序提供了这样一种衍生出全宇宙可能（抱歉这里脑洞太大，已经逼近我的理解和认知的边界了）。 而 Unwriter 提到的同时是死和活两种状态的程序，可能是有一部分 serverless service（无服务器服务）的意思，一个程序只要部署上链，不需要你运行它（此时是死的），但它的状态又时时在改变（又是活的），直到你下次运行它，才能确定它最终的状态。就像只有打开盒子看到猫才能确定薛定谔猫的状态，而打开盒子就破坏了这种同时死同时活的状态。 Planaria 概括 一个比特币应用程序的框架，具有以下特点 透明性：数据都是从区块链上获取到的，绝对安全可信 便携性：变形虫框架利用了 docker 这种优秀的容器技术，让部署变得更加简单 共享性：区块链本身相当于一个超级云平台，平台上的应用之间可以相互共享数据 可定制化：对变形虫的定制没有限制，你可以实现任何想实现的程序 用户友好：变形虫框架将 raw 交易进行封装，将用户可读的数据展现出来 2. 独立可定制的 CRUD（增查删改）数据库 使用 MongoDB 作为可读实例 提供 CRUD 的 api 读写分离，MongoDB 只读，而写操作需要构造比特币交易上链 由区块链事件驱动数据更新 自带权限认证功能（比特币交易本身即是权限认证），鉴权秘钥无需服务器保管 由比特币作为动力源驱动的有限状态机 输入： onmempool，onblock，onrestart 三个 api 方法，来监听不同的区块链事件，来进行相应的处理 处理逻辑：数据的 CRUD 状态存储：Planaria and Planarium 两个组件，一个爬行区块链，一个提供查询 输出：通过 zeroMq 消息队列，将结果推送到消息订阅者 4. 无限状态机（理想状态） 实现真随机和测不准的程序。实现无需长期运行的 serverLess 程序。实现人工智能。脑洞略大，此处需要继续研究实现方案） 变形虫的开发范式 基于区块链开发的应用，和传统的 Server Client 类型应用在一些认知上有些差异，理解这些差异正是理解区块链颠覆式创新的核心。 分布式鉴权系统 传统的身份认证，需要用户在服务器上存储账号密码（密码 hash），并由中心服务器进行权限校验，再授权相应的操作。 而区块链应用，操作即交易，交易即鉴权。能发起相应的交易，自然有权限。直接的结果就是，服务器不再保存秘钥，而将秘钥交还给用户手中，由用户自己保管，破解了中心化系统长久存在的秘密泄露威胁。 读写解绑 传统服务器，读写全部都是由中心服务器进行，如果服务器被攻破或内部人员作恶，则可能产生一些违反用户意愿的数据篡改，数据删除等行为。变形虫框架将写权限完全归还用户，用户通过构建特殊格式的交易来写数据库，而中心服务器只负责监听区块链，提供给用户数据。这样，就算中心服务器宕机，用户写入数据，修改数据的功能还能完整保留下来（能发交易就能改），这可能就是 Unwriter 说的又死又活的状态吧。 3. 独立应用 传统的应用，如果应用的开发者或者维护者停止了应用维护，则用户就算想要接着使用，都没有办法改变现状。典型的就是 360 云盘这样的，强制给用户一个截止日期，然后就清空所有云盘中的数据，停止对外提供服务。 而通过 Planaria 构造的程序，代码和用户数据都被部署到了链上，用户不需要再关心开发者或者维护者的态度，这个程序会永远存活下去。任何人都可以随时随地执行这些程序，让这个应用永远活下去。用户的数据也永远保留在链上，不会丢失。 4. 比特币作为消息总线 传统的应用，生态都是封闭的，最直观的例子就是微信和支付宝各自的生态闭环。在其生态内，可以共享生态内的资源，而跨生态之间的合作就会变得很麻烦。 而比特币应用共享同一个区块链系统，在其上可以开发出各种应用之间的业务合作，让消息的共享，价值的流动更加通畅，可能会爆发出更多更好玩的应用。 同时，由于比特币的开放性和免许可性，应用之间的通信可以免受各种和谐政策的影响，点对点发送，自由无限制。 5. 透明计算 和以太坊的智能合约相同，任何人都可以下载，执行，校验程序的执行过程和执行结果。不一样的是，以太坊的所有节点无论愿意与否，都要全部执行一遍智能合约，导致以太坊的可拓展性非常差，又慢又贵。而变形虫程序，只有关心合约的人需要下载合约来执行，其他人可以无视与自己无关的程序。加上比特币的 UTXO 结构，在拓展性上远胜于以太坊的账户模式，这个问题以后专门写文章讨论。 6. 代码永恒 长期来看，所有中心化的程序都会死亡，所有生物都会死亡，只有基因永存。而这个基因，就是被记录到区块链上的代码，代码永恒。当你下载代码执行的时候，相当于你承载了这个基因存活了下来，人类归根结底也是基因的载体。 结语 这篇文章主要从理论方面介绍了 BSV 区块链上的可能性，BSV 的理想不是什么 IXO 这么肤浅和浮躁的目标，BSV 的目标是改变商业模式，改变互联网模式，改变人类模式。很多人现在在看 Metanet 的笑话，但是 who cares，haters gonna hate。在你们沉浸在无休止的谩骂和诋毁的时候，BSV 正在建设基础设施，而这些基础设施就是以后让你们的山寨币归零的最强大的机器。 昨天出了个事，这里有必要提一下，币安的赵长鹏宣称要下架 BSV。且不说作为交易所无法保持中立的立场对不对，就这个幼稚的想法就很可笑。市场是开放的，你 Binance 下架 BSV，最高兴的是谁？不是 Core 党，也不是 BCH 党，而是火币和 OKex，你做交易所的不是在跟社区竞争，而是在跟其他交易所竞争，拜托你搞清楚对象。况且 BSV 社区压根不 care 你 binance 上架还是下架，当初上架不也没人给你们上币费吗？BSV 现在正在做的就是建设，就是真正脚踏实地地做应用，真正到了人人都在用 BSV 的时候，根本就不愁交易所上不上架的问题好吗？你下架，伤害的只有你自己，你不想挣的手续费有的是人想挣。做事情没必要做的太绝，免得以后没得台阶下。 得益于现在的文章上链应用已经非常的成熟和好用，我的所有文章都会先上传到 BSV 的区块链上，花上个几分钱就能永久留存著作权，真的是非常棒。欢迎转发本文，但是用作商业应用，请和我联系，我已经保留了最硬核的著作权证据，也将身体力行去享受着 BSV 应用带来的便利性。欢迎大家来我链上的文章打赏。 On-chain text and file sharing​www.bitpaste.app 变形虫 Planaria 是 Unwriter 大神基于 bitdb 在 BSV 链上开发的一个可编程化的持久层框架，关于变形虫的特点和编程思想，可以参考我之前的文章，强烈建议先看完前文再阅读本文。 Bitcoin SV 的开发哲学 —— 变形虫框架 这篇文章从纯技术的角度总结一下使用变形虫框架进行开发所需要的注意的一些点和踩过的一些坑。 Unwriter 大神在变形虫的技术支持文档中已经很详细的写了如何去部署和搭建一个节点，以及如何去调用节点提供的接口来实现应用程序的功能。我自己也照着文档去尝试着搭建节点，在搭建的过程中也遇到了一些坑，也遇到过各种各样的异常情形不能成功运行节点，也为了解决这些异常去详细地研读过源代码。现在将一些心得和学习记录总结出来分享。 一般使用 Planaria 实现一个 BSV 的链上应用需要以下的一些步骤： 搭建一个变形虫的实现节点（machine），根据业务逻辑，编写变形虫的 Planaria（面向区块链的爬虫）和 Planarium（面向人类的接口），决定变形虫如何去爬行区块链，如何规范化地将链上数据存储为可读数据。这是一个变形虫开发的重点，之后专门学习总结如何编写 planaria.js 和 planarium.js。 客户端使用比特币的 SDK 构造特定格式交易来生成应用数据，广播这些交易让数据上链。然后由变形虫去监听这些数据并储存到 MongoDB 中提供给客户端使用。构造交易也是应用开发的重点，可以借助各种已有的库，比如 bitcoinj-sv，比如 money button 维护的 BSV.js，或者使用 unwriter 大神封装好的 datapay.js 客户端使用刚才搭建好的节点，或者使用第三方已经提供的节点，使用 bitquery 查询语句调用节点的 api，从节点的 MongoDB 中获取链上数据或者监听区块链事件 客户端获取到数据或者监听到事件之后，采取相应的动作，此处的开发就和一般的应用没有区别了 节点搭建和部署 如果想定制化的开发变形虫，指定变形虫的特征和行为，就需要自行搭建节点，自行编写 Planaria 和 Planarium。 因为搭建和维护一个节点目前需要相对较高的成本，如果应用本身不需要定制化的变形虫，可以使用 unwriter 已经公开的一些 endpoint。这些已经实现了和部署了的节点包括 genesis，chronos，babel，c 协议，以及新出的 file-server 这些变形虫的变体节点（这些变体节点的功能在之前的文章有说明），可以根据自身的需要去调用这些公开 api。如果不清楚具体需要哪一种功能，可以调用 genesis，具备全量的且相对原始的数据。 已经公开注册的变形虫节点 目前版本的变形虫需要将 BSV 全节点和变形虫节点置于同一台服务器（这是代码在配置上的原因，Planaria 在代码中共用了 MongoDB 的 HOST 和 bitcoind 的 HOST），应该会在后续的版本上优化。我开始的时候将 BSV 全节点和变形虫节点搭建在两个不同的服务器上，结果吃了不少亏，研究了源码才发现这个问题。 另外为了部署方便，变形虫采用的是 docker compose 进行自动化的容器化部署，首次部署时我采用的操作系统是 Ubuntu 18.04，但是在启动 Planaria 容器后一直报异常，深入到 docker 内部查看 npm 的异常日志发现了如下的错误信息，大概是在 build zeromq 的时候出现了问题，照理说 docker 容器应该是可以跨平台使用的，我目前还没有很好的解决掉这个问题，不知道底层的原因是什么。后面更换了操作系统 Ubuntu 16.04，一切正常，我把错误日志贴出来，希望知道原因的朋友多指教。 13592 silly saveTree `-- zeromq@4.6.0 13592 silly saveTree `-- prebuild-install@2.5.3 13592 silly saveTree +-- expand-template@1.1.1 13592 silly saveTree +-- minimist@1.2.0 13592 silly saveTree `-- pump@2.0.1 13593 warn planaria@0.0.1 No description 13594 warn planaria@0.0.1 No repository field. 13595 warn optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.8 (node_modules/fsevents): 13596 warn notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.8: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"linux\",\"arch\":\"x64\"}) 13597 verbose notsup SKIPPING OPTIONAL DEPENDENCY: Valid OS: darwin 13597 verbose notsup SKIPPING OPTIONAL DEPENDENCY: Valid Arch: any 13597 verbose notsup SKIPPING OPTIONAL DEPENDENCY: Actual OS: linux 13597 verbose notsup SKIPPING OPTIONAL DEPENDENCY: Actual Arch: x64 13598 verbose stack Error: zeromq@4.6.0 install: `node scripts/prebuild-install.js || (node scripts/preinstall.js && node-gyp rebuild)` 13598 verbose stack Exit status 1 13598 verbose stack at EventEmitter. (/usr/lib/node_modules/npm/node_modules/npm-lifecycle/index.js:301:16) 13598 verbose stack at EventEmitter.emit (events.js:182:13) 13598 verbose stack at ChildProcess. (/usr/lib/node_modules/npm/node_modules/npm-lifecycle/lib/spawn.js:55:14) 13598 verbose stack at ChildProcess.emit (events.js:182:13) 13598 verbose stack at maybeClose (internal/child_process.js:962:16) 13598 verbose stack at Process.ChildProcess._handle.onexit (internal/child_process.js:251:5) 13599 verbose pkgid zeromq@4.6.0 13600 verbose cwd /planaria 13601 verbose Linux 4.15.0-1035-aws 13602 verbose argv \"/usr/bin/node\" \"/usr/bin/npm\" \"install\" 13603 verbose node v10.10.0 13604 verbose npm v6.4.1 13605 error code ELIFECYCLE 13606 error errno 1 13607 error zeromq@4.6.0 install: `node scripts/prebuild-install.js || (node scripts/preinstall.js && node-gyp rebuild)` 13607 error Exit status 1 13608 error Failed at the zeromq@4.6.0 install script. 13608 error This is probably not a problem with npm. There is likely additional logging output above. 13609 verbose exit [ 1, true 上面两个问题给我开始的部署带来了很大的麻烦，希望后续版本可以改进这些问题。下面说一下节点所需要的配置： 至少 2G 的内存 至少 300G 的硬盘储存空间（unwriter 写 200G，肯定不够用） 这些配置是为了支撑一个 BSV 的全节点，加上 docker，以及运行在 docker 上的 Planaria 和 Planarium，其中还要运行一个 MongoDB 的服务器。如果机器性能太差，则在同步区块和读写数据库的时候会消耗大量的时间，更可能在 BSV 突如其来的大区块冲击下被搞垮，这也就是为什么 BSV 不提倡使用家庭电脑运行全节点，搭建节点就是为了商用。只是学习和了解的话建议直接使用公开节点 api。 而我的节点搭建在 AWS 上，考虑成本和性能，加上为了研究和学习使用，采用了如下的配置： T2 Medium 的 EC2 实例类型（2 vCPUs，4GB 内存） 1000GB 的 EBS 磁盘（Megnetic Standartd） Ubuntu 16.04 的操作系统 更低的配置我测试过，效果很不好，同步区块校验交易效率很低，读写性能也很受限制，上面的配置的成本每个月大概 100 美元（如果要推广商用，这个成本还要翻 N 倍），所以再次强调，full node is about business。所以如果要开发区块链应用，那么应用的收益至少要能涵盖这个成本，这就是资本主义竞争的残酷，树莓派节点只会拖慢网络，不会服务用户。 机器准备好了之后，就可以开始搭建节点了。英文好的可以直接参考 Unwriter 的文档 Run a Node 安装 bitcoin sv 全节点客户端 BSV 全节点没有可视化客户端，只能通过命令行来安装和运行，这也一定程度上避免了个人运行全节点来浪费资源。 首先从 bitcoinsv.io 的网站下载客户端软件（版本 0.1.1）： 官方下载镜像 然后下载名称为 bitcoin-sv-0.1.1-x86_64-linux-gnu.tar.gz 的压缩包到你的程序目录文件下。 解压客户端文件 tar -zxvf bitcoin-sv-0.1.1-x86_64-linux-gnu.tar.gz 然后在根目录建立 bitcoin 的数据文件夹，准备编辑启动配置 bitcoin.conf。 cd ~ mkdir .bitcoin cd .bitcoin/ vi bitcoin.conf bicoin.conf 是比特币客户端的配置文件，变形虫节点的运行需要依赖 BSV 节点的 index 和 zeroMQ，因此要对其进行相应的配置，我的配置如下： dbcache=4000 # Must set txindex=1 so Bitcoin keeps the full index txindex=1 # [rpc] # Accept command line and JSON-RPC commands. server=1 # Default Username and Password for JSON-RPC connections # Planaria uses these values by default, but if you can change the settings # When you run 'pc start' rpcuser=YOURNAME rpcpassword=YOURPASSWORD # If you want to allow remote JSON-RPC access rpcallowip=0.0.0.0/0 rpcbind=0.0.0.0 # [wallet] disablewallet=1 # [ZeroMQ] # ZeroMQ messages power the realtime Planaria crawler # so it's important to set the endpoint zmqpubhashtx=tcp://0.0.0.0:28332 zmqpubhashblock=tcp://0.0.0.0:28332 # Planaria makes heavy use of JSON-RPC so it's set to a higher number # But you can tweak this number as you want rpcworkqueue=512 # Support large mempool maxmempool=4000 # Support large pushdata datacarriersize=100000 # Long mempool chain support limitancestorsize=100000 limitdescendantsize=100000 addnode=104.215.14.250 addnode=13.231.139.183 addnode=13.231.20.63 addnode=13.231.92.219 addnode=54.95.24.226 addnode=52.195.19.127 最后的几个 ip 是我手动添加的距离比较近的 sv 节点 ip，因为 BSV 和 bchabc 在网络层没有做隔离，在首次同步的时候经常会链接到分叉前的 abc 的节点，在同步到分叉高度后就会因为不兼容而无法继续同步，所以我手动添加了一些节点来帮助我同步数据，更快地找到组织。寻找这些节点也很简单，打开 blockchair 的节点接口，就可以查看现有的的节点了，选取 \"version\": \"/Bitcoin SV:0.1.0 (EB128.0)/\", 这样的节点 ip 添加到 conf 中。 blockchair nodes 然后切换到 bitcoin-sv 的 bin 目录下，启动客户端，可以用 deamon 模式也可以 nohup 挂载。 cd bitcoin-sv-0.1.1/bin/ sudo nohup ./bitcoind & ./bitcoin-cli getinfo 如果 bitcoin-cli 成功返回以下结果，说明全节点启动成功 { \"version\": 100010100, \"protocolversion\": 70015, \"blocks\": 581047, \"timeoffset\": 0, \"connections\": 36, \"proxy\": \"\", \"difficulty\": 85497465595.02908, \"testnet\": false, \"stn\": false, \"paytxfee\": 0.00000000, \"relayfee\": 0.00001000, \"errors\": \"\", \"maxblocksize\": 128000000, \"maxminedblocksize\": 32000000 } 安装 docker 变形虫框架依赖多个组件运行，unwriter 为了方便人们部署变形虫，将这些组件整合在容器中，这样就具备了便携性和跨平台的特性。 安装 docker 请直接参考 docker 的官方文档或者在网上搜索安装方法，这里不赘述。 Ubuntu 下安装 docker 的官方文档 安装 docker compose docker compose 是用来将多个容器进行管理和协调的工具。安装同样不赘述。 Install Compose on Linux systems 安装 node 虽然变形虫等框架是运行在 docker 内，docker 内集成了 nodejs 等环境，但是如果使用 Unwriter 提供的 Planaria Computer（后文简称 PC）工具来管理各个组件容器（这样可以不用直接跟 docker 打交道），就需要在机器上安装 PC 所需要的 Node 环境。 Planaria Computer 提供了一系列命令和 cli 工具来轻松管理，发布，下载，部署，维护变形虫节点，因此我们安装 PC 之前需要安装其运行的 NodeJs 环境。 ubuntu 下安装 nodeJs 很简单，可以用 nodesource 的源来安装 # Using Ubuntu curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash - sudo apt-get install -y nodejs 安装后执行 node -v 如果返回 v12.0.0 就说明安装成功。 安装 Planaria Computer 与启动变形虫 npm install -g Planaria 安装好之后，就可以开始创建变形虫的状态机（machine）了。 先给 Planaria 创建一个文件夹，作为变形虫节点的数据文件夹： mkdir Planaria cd Planaria/ 然后创建第一个状态机 pc new genesis 这里为了简单起见，我们创建了一个 genesis（创世纪）的状态机，如果要创建自定义状态机，则执行下面的指令（推荐学习者使用 genesis 的状态机，获取全量数据并方便后面的 bitquery 查询）： pc new machine 注意，如果创建的是 Genesis 这种已经定制好的状态机，则不需要编写内部的 js 代码，如果创建的空的状态机，则需要编写 js 代码来实现自定义的状态码，这部分技术之后总结。 我们创建好了一个 Genesis 的状态机之后，PC 会生成一个文件夹，名称叫 genes（基因），这里储存了全部的状态机，每一个状态机有一个独特的比特币地址作为文件夹名称，正是因为变形虫采用地址作为状态机的基因（特征标志），状态机理论上就可以有比特币地址那么多的个数，而且同一个地址的状态机可以更新换代，这就涉及到另一个关于 Bitcom 协议的概念了，后文会说。我们进去其中一个状态机的文件夹之后就可以发现如下的几个文件： -rw-rw-r-- 1 1001 1001 100 Apr 26 16:32 .env -rw-rw-r-- 1 1001 1001 169 Apr 26 16:32 package.json -rw-rw-r-- 1 1001 1001 4599 Apr 26 16:34 planaria.js -rw-rw-r-- 1 1001 1001 514 Apr 26 16:32 planarium.js -rw-rw-r-- 1 1001 1001 0 Apr 26 16:32 README.md .env 中放置了这个状态机地址和对应的私钥，是证明状态机所有权和用来修改状态机的权限秘钥，建议如果自定制了协议，请务必备份好.env 文件，这是协议和状态机所有权的标志。 package.json 是常见的 nodejs 依赖管理，如果你的变形虫代码逻辑需要依赖一些其他的 nodejs 的库，可以在这里面进行编辑。 planaria.js 是面向区块链的爬虫逻辑，里面需要编写如何解析原始交易，并提取其中的信息储存到 MongoDB 中。 planarium.js 是面向应用的展示层逻辑，将 MongoDB 的数据读取出来，加工成应用需要的格式，返回给应用。 README.md 是你的自定义协议或者状态机的一个说明文档（markdown 格式），在公开发布此状态机的时候会上传此文档，作为描述状态机功能和使用方法的文档。 然后启动所有的变形虫（genes 文件夹下所有的变形虫实现都会被启动）： pc start 然后程序会问你一些问题，你根据实际情形来进行配置。 Storage Path： docker volume 所挂载的文件路径。推荐用默认 Memory in GB： 需要为容器预留的内存，推荐 2G，我这里设置的 1G 域名：这个域名是为了发布变形虫之后，提供给外界使用的，可以直接用 ip 地址 Join the Planaria network：如果你想运行一个私有的节点，选择 No，如果你想公开协议或者公开节点，选择 Yes Port: 变形虫的对外端口，默认 3000 BITCOIN_USER： BSV 节点 rpc 的用户名，上文有写 BITCOIN_PASSWORD： BSV 节点 json-rpc 的密码，上文有写 上面的配置在 Planaria 根目录下的.env 中可以随时修改。然后就会看到代码开始启动两个 docker 容器 (interPlanaria/Planarium 和 interPlanaria/Planaria）。之后就会看到容器启动成功。但是容器启动成功并不等于变形虫已经启动成功，需要通过日志来查看。容器的日志可以通过 docker 命令来查看，但这里我们有 PC 工具，不用和 docker 打交道，直接执行 pc logs write pc logs read write 指的是 Planaria 容器的日志，read 指的是 Planarium 的容器，如果容器里发生任何错误或异常，都可以从日志中获取到信息。如果容器内部没有异常，正常启动，就可以看到容器对外开放了 3000 端口。此时从外部浏览器访问服务器的 3000 端口（http://XXX.XXX.XXX.XXX:3000/），就可以显示如下的画面： 有几个 Gene，就有几个状态机显示在这里，点击 query 进去，就会发现和以下公开的 genesis 数据库一样的 bitquery 查询界面： genesis 的 query 界面 在自己搭建的 query 中执行默认查询语句，能正确返回结果，说明已经搭建完成了。 然后就可以愉快地使用bitquery玩耍链上数据了。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 Planaria |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-client/bitquery.html":{"url":"chapter-client/bitquery.html","title":"BitQuery","keywords":"","body":"MongoDB# BSV Planaria 框架技术总结二 Bitquery 此文是变形虫技术总结的第二篇，阅读此文之前建议先阅读关于变形虫的前两篇文章。 Bitcoin SV 的开发哲学 —— 变形虫框架 BSV Planaria 框架技术总结一 节点搭建 前面的文章说过变形虫是一个持久层框架，通过 Planaria 组件爬取区块链上的交易数据，提取并加工所需的数据后将数据存储到 MongoDB 中，然后由 Planarium 对外提供接口给应用程序来调取数据。在搭建好数据库之后，我们下一步关注的重点就是如何对数据库进行读写。前文已经介绍过，变形虫与传统数据库最大的区别就是读写分离，不能直接写数据库，只能通过客户端发起链上交易来修改状态机，因此向变形虫写数据本质上就是构造交易，这将在下一篇文章中总结。本文的重点就是如何高效优雅地从变形虫中读取数据。 Bitquery 简介 Planaria 使用一套简单高效的查询语言，称为 Bitquery，类似于 SQL 语言，可以将变形虫中的数据进行各种图灵完备的组合和处理，输出各种形态的数据。由于变形虫的开发目的是一个可以满足一切基于比特币链上数据需求的持久层框架，因此必须具备一种专为链上交易数据服务的查询语言，bitquery 也就因此而产生。 bitquery 查询语句本质上是一个 json 对象，之所以是这种形态是为了适应 MongoDB 的查询。这里有必要提及一下，变形虫框架为何内置数据库采用的是 MongoDB 而不是类似 mySQL 的关系型数据库。照理说，链上交易数据是充分结构化的，各个交易之间，地址之间有很强的关联性，查询交易更适合使用关系型数据库，这样连表操作更为方便，性能也更好。但是对于变形虫而言，它关注的重点并不是交易本身，而是交易上携带的千变万化，各行各业的杂乱无章的非标准数据，这些数据没有统一的范式，也没有统一的关联性。在这种情形下，NoSQL 的优势就会凸显出来，将一个个非标准数据看做一个个” 文件 “，不强制要求文件内容的格式，更加符合变形虫的需求目标。我有一种设想，以后的变形虫甚至可以在内部同时集成关系型和非关系型两种数据库，关系型数据库专门处理关联性高的交易数据，提升关联连表查询效率，而非关系型数据库处理各种应用的非标准数据，提升拓展性和兼容性。两种内置的数据库组件各司其职，将变形虫的性能发挥到极致。 bitquery 示例如下： bitquery 基于两种非常强大的技术，MongoDB Query Language（MongoDB 查询语言）和 JQ（一个基于栈操作的图灵完备的 json 处理语句）。查询语句如上图所示分为 3 部分，第一部分是协议的版本号，目前是 3，第二部分是基于 MongoDB 的查询语句，筛选出数据，第三部分是返回结果处理语句，对第二部筛选出来的结果进行整理和包装，处理成应用程序需要的样式。 第二部分查询语句主要基于 MongoDB 的查询语句，但是与原生的 MongoDB 查询略有不同，针对 Planaria 做了一定的适配，选取了部分查询功能，使用 json 对象的各个成员来标记搜索条件。 第三部分处理搜索结果，第二步返回的结果是一个 json，可能包含我们不需要的数据，或者不是我们所希望的数据格式，需要将其整理成我们需要的格式，这时候就需要用到 JQ，变形虫内置 JQ 的处理组件，可以直接帮我们把数据在服务器端就处理好，不需要客户端自行进行数据的处理。 query 字段（q）可以包含下列成员（后文会依次详细说明）： find：同 MongoDB 的 find 条件语句。 aggregate：对应 MongoDB 的聚合语句。 project：对应 MongoDB 的 project 操作符 sort：对应 MongoDB 的排序操作符 limit：对应 MongoDB 的个数限制操作 skip：对应跳过操作，通过 limit 和 skip 可以实现翻页 db：选择 db，目前有 c（已确认交易库）和 u（未确认交易库） response 字段（r）包含一个 f 成员，就是后处理 function，里面是一个 JQ 表达式，用于处理 query 返回的结果。 Genesis 数据储存格式 目前我运行的是一个全量的 Genesis 数据库，因此在这里详细说明一下返回值的字段含义，如果不知道这些字段的含义，也就无从写 query 语句和 Jq 表达式了。没有节点的同学可以直接访问 Unwriter 的公开 endpoint: genesis 公开 Endpoint 打开后会看到默认的查询语句如下： { \"v\": 3, \"q\": { \"find\": {}, \"limit\": 10 } } 这语句的意思是取最近的十条记录，没有其他条件。然后我们会看到下方有一个巨大的表格，里面填充了各种数据，并且有一些奇怪的表头名称。为了方便描述，我们修改一下查询语句，因为默认查询语句经常会查出一些巨大的交易数据体（二进制图片等数据），在本文有限的空间下没办法展示出来，我们采用如下的查询： { \"v\": 3, \"q\": { \"find\": { \"out.h1\": \"6d02\" }, \"limit\": 1 } } 转换成 get 请求如下： GET /q/1FnauZ9aUH2Bex6JzdcV4eNX7oLSSEbxtN/ewogICJ2IjogMywKICAicSI6IHsKICAgICJmaW5kIjogeyAib3V0LmgxIjogIjZkMDIiIH0sCiAgICAibGltaXQiOiAxCiAgfQp9 HTTP/1.1 Host: genesis.bitdb.network key: 1KWqy2WbNpEPC7hwvfJbvXy2vekS2LwGim Cache-Control: no-cache Postman-Token: 6445346e-1444-8450-4cb5-088197fe921e 这个语句的意思是取出最近的一条 memo.sv（一个 BSV 链上微博）的交易数据，原理我们后文介绍。 可以看到这个查询语句返回了一系列数据，填充在表格中，我们将其 json 源码（从 postman 直接请求）贴下来，如下： { \"u\": [ ], \"c\": [ { \"_id\": \"5ccfe65cd7faee16774712b0\", \"tx\": { \"h\": \"15ec948360c54b0864fed10addc9370e7acf70624bae3e46f0db16ba33728e60\" }, \"in\": [ { \"i\": 0, \"b0\": \"MEQCIGbAWT8cYm+sHj+/kJI6Ir7HznAZl+uI/Op1w119nyBWAiAmaWlVHAw7F1lPjkremq5YfDyuGr2bMQC7Ft2/uUwor0E=\", \"b1\": \"A+8emT7UM3oOjjqstBg4sjn2I4wnIPPwY7ARQ6VkrGue\", \"str\": \"3044022066c0593f1c626fac1e3fbf90923a22bec7ce701997eb88fcea75c35d7d9f20560220266969551c0c3b17594f8e4ade9aae587c3cae1abd9b3100bb16ddbfb94c28af41 03ef1e993ed4337a0e8e3aacb41838b239f6238c2720f3f063b01143a564ac6b9e\", \"e\": { \"h\": \"175553b769f70d93b6c3961e8bdefe20ab274f6bbb8bbbcbfbbe205fb347a610\", \"i\": 0, \"a\": \"1Gt8ZMCxkGbkTQfMuPnUZWx8y9ydWfuQA1\" }, \"h0\": \"3044022066c0593f1c626fac1e3fbf90923a22bec7ce701997eb88fcea75c35d7d9f20560220266969551c0c3b17594f8e4ade9aae587c3cae1abd9b3100bb16ddbfb94c28af41\", \"h1\": \"03ef1e993ed4337a0e8e3aacb41838b239f6238c2720f3f063b01143a564ac6b9e\" } ], \"out\": [ { \"i\": 0, \"b0\": { \"op\": 118 }, \"b1\": { \"op\": 169 }, \"b2\": \"rjVo4QocscdXU/oca7cRtfhv+8E=\", \"s2\": \"\\ufffd5h\\ufffd\\n\\u001c\\ufffd\\ufffdWS\\ufffd\\u001ck\\ufffd\\u0011\\ufffd\\ufffdo\\ufffd\\ufffd\", \"b3\": { \"op\": 136 }, \"b4\": { \"op\": 172 }, \"str\": \"OP_DUP OP_HASH160 ae3568e10a1cb1c75753fa1c6bb711b5f86ffbc1 OP_EQUALVERIFY OP_CHECKSIG\", \"e\": { \"v\": 26870, \"i\": 0, \"a\": \"1Gt8ZMCxkGbkTQfMuPnUZWx8y9ydWfuQA1\" }, \"h2\": \"ae3568e10a1cb1c75753fa1c6bb711b5f86ffbc1\" }, { \"i\": 1, \"b0\": { \"op\": 106 }, \"b1\": \"bQI=\", \"s1\": \"m\\u0002\", \"b2\": \"QSBCaXRjb2luZXIgaW4gdGhlIHN3YXJtIG9mIHNwZWN1bGF0b3JzLi4uCgpodHRwczovL2kuaW1ndXIuY29tLzRNU0xZVW8ubXA0CgojQml0Y29pbg==\", \"s2\": \"A Bitcoiner in the swarm of speculators...\\n\\nhttps://i.imgur.com/4MSLYUo.mp4\\n\\n#Bitcoin\", \"str\": \"OP_RETURN 6d02 4120426974636f696e657220696e2074686520737761726d206f662073706563756c61746f72732e2e2e0a0a68747470733a2f2f692e696d6775722e636f6d2f344d534c59556f2e6d70340a0a23426974636f696e\", \"e\": { \"v\": 0, \"i\": 1, \"a\": \"false\" }, \"h1\": \"6d02\", \"h2\": \"4120426974636f696e657220696e2074686520737761726d206f662073706563756c61746f72732e2e2e0a0a68747470733a2f2f692e696d6775722e636f6d2f344d534c59556f2e6d70340a0a23426974636f696e\" } ], \"blk\": { \"i\": 581188, \"h\": \"000000000000000005cf5c75cdd7f55b5e772e0d751dd0f4a60076702af5768f\", \"t\": 1557128792 } } ] } 然后我们根据上面的返回值，介绍一下返回值的各个字段含义。原版的文档请参考如下链接： Bitdb Indexer 根路径的 u 和 c 代表两个不同的数据库 collection，u 是 unconfirmed tx，未确认交易，存在于内存池中。c 是 confirmed tx，已经确认的交易，存在于区块链中。 然后列表中的每一个对象都是一个交易，里面记载了交易的详情。 对于交易层面而言，其结构如下： { \"tx\": { \"h\": [交易 HASH] }, \"blk\" { \"i\": [区块高度], \"h\": [区块 HASH], \"t\": [区块时间戳] }, \"in\": [ INPUT1, INPUT2, INPUT3, ... ], \"out\": [ OUTPUT1, OUTPUT2, OUTPUT3, ... ] } 对多输入多输出的交易，in 和 out 分别是这笔交易输入 input 和输出 output 的列表。 然后我们说输入输出脚本的层面，也就是上面 input 和 output 的每一个具体的对象，建议看这部分之前先了解比特币脚本的工作原理。 这是从上面的 output 中摘取出来的一个输出脚本 { \"i\":0, \"b0\":{ \"op\":118 }, \"b1\":{ \"op\":169 }, \"b2\":\"rjVo4QocscdXU/oca7cRtfhv+8E=\", \"s2\":\"\\ufffd5h\\ufffd\\n\\u001c\\ufffd\\ufffdWS\\ufffd\\u001ck\\ufffd\\u0011\\ufffd\\ufffdo\\ufffd\\ufffd\", \"b3\":{ \"op\":136 }, \"b4\":{ \"op\":172 }, \"str\":\"OP_DUP OP_HASH160 ae3568e10a1cb1c75753fa1c6bb711b5f86ffbc1 OP_EQUALVERIFY OP_CHECKSIG\", \"e\":{ \"v\":26870, \"i\":0, \"a\":\"1Gt8ZMCxkGbkTQfMuPnUZWx8y9ydWfuQA1\" }, \"h2\":\"ae3568e10a1cb1c75753fa1c6bb711b5f86ffbc1\" } 我们知道，一个标准的 P2PKH（Pay To Pubkey Hash）交易的输出脚本（也称为锁定脚本）如下所示： OP_DUP OP_HASH160 ae3568e10a1cb1c75753fa1c6bb711b5f86ffbc1 OP_EQUALVERIFY OP_CHECKSIG 这个脚本可以根据空格拆成 5 个数据或者操作码块，在校验比特币交易时，5 个块依次进栈参与运算。我们按照顺序将其依次标记为 0，1，2，3，4。 然后我们介绍上面的 json 的字段： i：指这个输出（或输入）在交易中的标号 index，是第几个输出，0 是第一个 b0 b1 b2 b3 b4：是上述 5 个块的 base64 编码，如果是操作码，比如 OP_DUP 或者 OP_HASH160，则储存其操作码编号，比如 b0 对应 OP_DUP，其操作码编号是 118，因此 b0 对应的就是 op:118。如果不是操作码，是数据，则储存数据的 Base64 编码。（比特币操作码编号一栏） s0 s1 s2 s3 s4：是上述 5 个脚本块的 UTF8 字符串，由于标准脚本只有 s2 是数据，其他都是操作码，因此此处只返回了 s2，操作码不储存成字符串 h0 h1 h2 h3 h4：是上述 5 个脚本串的十六进制（hex）编码，同样由于标准脚本只有 h2 是数据，是会变化的，因此此处只返回 h2，操作码不储存 hex str：脚本原文 e：edge，边界，对于输入脚本，edge 储存了输入脚本的来源交易，对于输出脚本，edge 储存了这个 utxo 将花向何处 e（输入脚本中）：h 表示这个输入的来源交易的交易 hash。i 是作为来源的 utxo 在上一笔交易中的 index。a 是来源交易的发起人地址。 e（输出脚本中）：v 是输出的金额 satoshis，i 是位于输出的位置 index，a 是输出花出去的目标地址（如果该输出已经被花费） 根据上面的解释，我们可以套用相同的模式来解析第二个输出： { \"i\":1, \"b0\":{ \"op\":106 }, \"b1\":\"bQI=\", \"s1\":\"m\\u0002\", \"b2\":\"QSBCaXRjb2luZXIgaW4gdGhlIHN3YXJtIG9mIHNwZWN1bGF0b3JzLi4uCgpodHRwczovL2kuaW1ndXIuY29tLzRNU0xZVW8ubXA0CgojQml0Y29pbg==\", \"s2\":\"A Bitcoiner in the swarm of speculators...\\n\\nhttps://i.imgur.com/4MSLYUo.mp4\\n\\n#Bitcoin\", \"str\":\"OP_RETURN 6d02 4120426974636f696e657220696e2074686520737761726d206f662073706563756c61746f72732e2e2e0a0a68747470733a2f2f692e696d6775722e636f6d2f344d534c59556f2e6d70340a0a23426974636f696e\", \"e\":{ \"v\":0, \"i\":1, \"a\":\"false\" }, \"h1\":\"6d02\", \"h2\":\"4120426974636f696e657220696e2074686520737761726d206f662073706563756c61746f72732e2e2e0a0a68747470733a2f2f692e696d6775722e636f6d2f344d534c59556f2e6d70340a0a23426974636f696e\" } 上面的输出是一个 op return 输出，也是变形虫关注的重点。根据上面对字段的解释，我们可以看出，这个输出脚本有三个块，OP_RETURN，6d02，以及后面的数据。 OP_RETURN 6d02 4120426974636f696e657220696e2074686520737761726d206f662073706563756c61746f72732e2e2e0a0a68747470733a2f2f692e696d6775722e636f6d2f344d534c59556f2e6d70340a0a23426974636f696e 这其实是一个标准的 memo.sv 协议的 op return 格式。开头的 OP_RETURN 是操作码，所以 s0,h0 没有储存，h1 是 6d02 的 hex，6d02 声明了后面的内容属于 memo.sv 协议，再后面的内容就是 hex 化的数据体，关于 bit 协议的声明（6d02 的来源和改良方案），可以参考 bitcom 协议规范，Ifwallet 的 bibodeng 对此专门有讲解： Unwritter 发布的 Bitcom 协议是什么？ 至此，我们详细介绍了变形虫中储存交易的格式，之后就是通过操作 MongoDB 以及 JQ 来查询和处理我们所需要的数据。 查询语句 然后我们研究 Bitquery 的 query 部分，查询体。 query 部分的本质是查询 MongoDB，而且由于 Planaria 只可读，在使用它的时候我们只需要关注读取语句（当然如果你要自定制 planaria.js，需要研究 MongoDB 的写入操作，这不在本文的讨论范畴内，以后专门写）。因此我们需要先对 MongoDB 的 find 操作的一些基本概念进行介绍，官方文档如下： MongoDB 的 Find 操作 find 语句传入一个 json 对象，json 对象中的每一个字段名代表要指定的字段名，字段的值代表搜索条件，多个字段可以并列，相当于 SQL 语句中的 and 条件。 这里由于篇幅不够，详细的操作无法全部说明，就挑一些官网的典型示例来说明一下。 匹配相等，index 为 5，姓是 Hopper db.bios.find( { _id: 5 } ) db.bios.find( { \"name.last\": \"Hopper\" } ) 匹配范围或正则表达式 db.bios.find( { _id: { $in: [ 5, ObjectId(\"507c35dd8fada716c89d0013\") ] } } ) db.bios.find( { birth: { $gt: new Date('1950-01-01') } } ) db.bios.find( { \"name.last\": { $regex: /^N/ } } ) 匹配多个条件（相当于 and） db.bios.find( { birth: { $gt: new Date('1920-01-01') }, death: { $exists: false } } ) 匹配多个条件之一（相当于 or） db.col.find( { $or: [ {key1: value1}, {key2:value2} ] } ) 匹配非（相当于！） db.col.find({\"likes\":{$ne:50}}) 6.aggregate 聚合函数（相当于 count） 聚合需要一些聚合操作，这些操作又称为管道 pipeline，MongoDB 将这些管道内的操作（称为 stage）处理完成后，将结果聚合在一起。管道的操作列表及其说明参照下文： Aggregation Pipeline Stages 例如，数据源如下 { _id: 1, cust_id: \"abc1\", ord_date: ISODate(\"2012-11-02T17:04:11.102Z\"), status: \"A\", amount: 50 } { _id: 2, cust_id: \"xyz1\", ord_date: ISODate(\"2013-10-01T17:04:11.102Z\"), status: \"A\", amount: 100 } { _id: 3, cust_id: \"xyz1\", ord_date: ISODate(\"2013-10-12T17:04:11.102Z\"), status: \"D\", amount: 25 } { _id: 4, cust_id: \"xyz1\", ord_date: ISODate(\"2013-10-11T17:04:11.102Z\"), status: \"D\", amount: 125 } { _id: 5, cust_id: \"abc1\", ord_date: ISODate(\"2013-11-12T17:04:11.102Z\"), status: \"A\", amount: 25 } 使用聚合操作将它们聚合并算出个数 db.orders.aggregate([ { $match: { status: \"A\" } }, { $group: { _id: \"$cust_id\", total: { $sum: \"$amount\" } } }, { $sort: { total: -1 } } ]) 管道的操作是，首先选取 status 为 A 的，然后将它们按照 cust_id 字段进行分组，并统计出每组的 amout 总和，最后按照总和倒序排列。最后的返回结果如下： { \"_id\" : \"xyz1\", \"total\" : 100 } { \"_id\" : \"abc1\", \"total\" : 75 } 7.project，或 projection 操作，指定返回的字段，指定返回则设置为 1，指定不返回则设置为 0 例如： const cursor = db .collection('inventory') .find({ status: 'A' }) .project({ item: 1, status: 1 }); 在 inventory 表中选取 status 为 A 的记录，并返回_id，item，和 status，3 个字段。 8.sort 操作，指定排序方式，按照哪个字段排序，正序为 1，倒序为 - 1 例如： db.orders.find().sort( { amount: -1 } ) 在 orders 表中选取全部，并按照 amount 倒序排列。 9.limit 操作，指定返回的限制个数 按照 query 查找，并限制返回 number 个 db.collection.find().limit() 10.skip 操作，指定跳过的个数 offset function printStudents(pageNumber, nPerPage) { print( \"Page: \" + pageNumber ); db.students.find() .skip( pageNumber > 0 ? ( ( pageNumber - 1 ) * nPerPage ) : 0 ) .limit( nPerPage ) .forEach( student => { print( student.name ); } ); } 上面是一个配合 limit 使用的翻页逻辑，跳过前 offset 个记录 至此，我们已经简单介绍了 query 部分可能涉及到的一些查询操作，更多高级用法请参阅 MongoDB 的使用规范和文档，本文不赘述。 query 部分示例与详解： { \"v\": 3, \"q\": { \"find\": { \"$text\": { \"$search\": \"hello\" }, \"out.h1\": \"6d02\", \"out.b2\": \"hello\" }, \"skip\": 5, \"limit\": 10, \"sort\": { \"blk.i\": 1 } } } 上述的查询条件简单说明：搜索字段中是文本类型且带有 hello 的，而且 out.h1 字段等于 6d02，而且 out.b2 字段等于 hello 的所有记录，跳过前 5 个，限制取 10 条记录，并根据 blk.i（区块高度）正序排列。 JQ json 后处理语句 在上一步获取到查询结果后，MongoDB 返回的是一个 json，如果我们希望对这个 json 进行一些后处理，就可以使用 bitquery 提供的另一个强大的工具，JQ 后处理。 JQ 是一个轻量级，图灵完备的堆栈式命令行 Json 处理工具。官方网站如下： JQ 官网 bitquery 集成了 JQ，并将其写在请求 json 的第三个部分，r.f 字段。如下所示 { \"v\": 3, \"q\": { \"find\": { \"out.h1\": \"534c5000\", \"out.s3\": \"GENESIS\" }, \"limit\": 20, \"project\": { \"out.$\": 1, \"_id\": 0 } }, \"r\": { \"f\": \"[.[] | .out[0] | { token_symbol: .s4, token_name: .s5, document_url: .s6} ]\" } } f 的一长串值就是 JQ 表达式，上述示例的含义就是取出所有 query 返回值中的 out [0]，然后将其中的 s4 拆出来作为字段 token_symbol 的值，将 s5 拆出来作为字段 document_url 的值，并返回一个新的列表。 查询结果如下所示： { \"u\": [{ ... }], \"c\": [{ \"token_symbol\": \"TEST\", \"token_name\": \"TEST\", \"document_url\": \"bitcoinfiles:b86b4bcbab7cd787b1c893ca101250c8c467dbba4df229b118218bd8a9e85a92\" }, { \"token_symbol\": \"VOTE\", \"token_name\": \"An Election\", \"document_url\": \"bitcoinfiles:a90e59ef7ca66b25b6ba98d028198ae222a8229804c4b0b3bc0b1bafe104738a\" }, { \"token_symbol\": \"WuCash\", \"token_name\": \"Wu Tang Cash\", \"document_url\": \"http://wu.cash\" }, { \"token_symbol\": \"bb23n\", \"token_name\": \"bb23\", \"document_url\": \"bb23n.com\" }, { \"token_symbol\": \"DBOOK01\", \"token_name\": \"Digital Book Example\", \"document_url\": \"https://digitalbookexampletokenurl.com\" }, { \"token_symbol\": \"\" \"token_name\": \"\" \"document_url\": \"\" }, { \"token_symbol\": \"MTT\", \"token_name\": \"MyTestToken\", \"document_url\": \"\" }] } jq 的使用方法 unwriter 简单概括如下： 所有 jq 表达式都是基于堆栈的，因此从左向右阅读 所有的表达式都假设传入一个 json 对象，并最后输出一个对象 管道表达式类似于 unix 的管道，它将处理结果从左到右依次传递下去 我们这里受篇幅的限制，简单描述一下一些常用的 jq 语法，英文好的朋友可以直接参照 JQ 官网提供的手册来学习语法，当然也可以参考下面的中文博客，介绍的很详细，并且可以使用里面的 jq play 在线校验表达式。 jq 常用操作 我们这里列举几个比较常用的语法： 获取 object 下某个字段的值，也可以在其后增加？，表示如果不存在也不会报错 .key, .foo.bar, .[\"key\"] .key?, .foo.bar?, .[\"key\"]? 获取所有的值 .[] $ echo '{\"url\": \"mozillazg.com\", \"name\": \"mozillazg\"}' |jq .[] \"mozillazg.com\" \"mozillazg\" 构造新数组，比如将上面所有的值组成新的数组 [.[]] $ echo '{\"url\": \"mozillazg.com\", \"name\": \"mozillazg\"}' |jq [.[]] [ \"mozillazg.com\", \"mozillazg\" ] 切分数组，选取数组的某一项 .[1] .[0:2] $ echo '[{\"name\": \"tom\"}, {\"name\": \"mozillazg\"}, {\"name\": \"jim\"}]' |jq .[1] { \"name\": \"mozillazg\" } $ echo '[{\"name\": \"tom\"}, {\"name\": \"mozillazg\"}, {\"name\": \"jim\"}]' |jq .[0:2] [ { \"name\": \"tom\" }, { \"name\": \"mozillazg\" } ] 使用多个 filter，依次执行 如下面依次执行选取 url 的值，选取 name 的值，所以打印了两个值出来 , $ echo '{\"url\": \"mozillazg.com\", \"name\": \"mozillazg\"}' |jq '.url, .name' \"mozillazg.com\" \"mozillazg\" 管道操作符，类似于 unix 的管道操作，熟悉 linux 操作的一定不陌生 Pipeline (Unix)) 相当于对管道前后的条件依次过滤，最后输出结果，如下面的语句，就是先选取 json 原文，然后再从中过滤出 url 的值 | $ echo '{\"url\": \"mozillazg.com\", \"name\": \"mozillazg\"}' |jq '.|.url' \"mozillazg.com\" 我们这里做一个简单的 bitquery 操作示例（unwriter 的网站给出的），并稍微解释一下，更高级和深入的用法还需要多加研究 jq 的文档。 { \"v\": 3, \"q\": { \"find\": { \"out.h1\": \"6d02\" }, \"limit\": 10 }, \"r\": { \"f\": \"[{ block: .blk.i?, timestamp: .blk.t?, content: .out[1].s2 }]\" } } 上述的 jq 表达式的意思是将每个结果的以下 3 个数据提取出来，构成一个新的对象列表。细心的朋友可能运行上述 bitquery 表达式会报错，我们仔细研究一下，发现确实有问题 (unwriter 大神也会犯错哈)。query 部分返回的直接是个数组，在数组中选择.blk 就会直接报错。这点我们通过变形虫执行上述命令的日志可以看出来错误原因： Query = { find: { 'out.b1': 'bQI=' }, limit: 2 } before transform = [ { _id: 5cd041b74171e816cb23c05b, tx: { h: 'a1d58e3053bb0aea6c208eca40ba6299fc9e770fb74cfacac4cf90dcc92efbaa' }, in: [ [Object] ], out: [ [Object], [Object] ], blk: { i: 581226, h: '000000000000000008c75b2424d2f4975015c2fc5add0af997e9e332a9b42898', t: 1557152175 } }, { _id: 5cd041b74171e816cb23c17a, tx: { h: '0982091b7923b82bf3c64fe17a9e72bcb099d72388e30ce1ef1a43efff405628' }, in: [ [Object] ], out: [ [Object], [Object] ], blk: { i: 581226, h: '000000000000000008c75b2424d2f4975015c2fc5add0af997e9e332a9b42898', t: 1557152175 } } ] after transform = [ { _id: 5cd041b74171e816cb23c05b, tx: { h: 'a1d58e3053bb0aea6c208eca40ba6299fc9e770fb74cfacac4cf90dcc92efbaa' }, in: [ [Object] ], out: [ [Object], [Object] ], blk: { i: 581226, h: '000000000000000008c75b2424d2f4975015c2fc5add0af997e9e332a9b42898', t: 1557152175 } }, { _id: 5cd041b74171e816cb23c17a, tx: { h: '0982091b7923b82bf3c64fe17a9e72bcb099d72388e30ce1ef1a43efff405628' }, in: [ [Object] ], out: [ [Object], [Object] ], blk: { i: 581226, h: '000000000000000008c75b2424d2f4975015c2fc5add0af997e9e332a9b42898', t: 1557152175 } } ] running jq STR = error jq SyntaxError: Unexpected end of JSON input at JSON.parse () at Socket.child.stdout.on (/app/node_modules/bigjq/index.js:17:29) at emitNone (events.js:111:20) at Socket.emit (events.js:208:7) at endReadableNT (_stream_readable.js:1064:12) at _combinedTickCallback (internal/process/next_tick.js:139:11) at process._tickCallback (internal/process/next_tick.js:181:9) query = { v: 3, q: { find: { 'out.b1': 'bQI=' }, limit: 2 }, r: { f: '[{ block: .blk.i?, timestamp: .blk.t?, content: .out[1].s2 }]' } } response = { errors: [ 'SyntaxError: Unexpected end of JSON input' ] } 可以从日志中看到，这段命令错误的原因在于对列表 [] 进行值选择.blk，那么根据 jq 的命令，正确的写法应该如下所示： { \"v\": 3, \"q\": { \"find\": { \"out.h1\": \"6d02\" }, \"limit\": 10 }, \"r\": { \"f\": \"[.[] | { block: .blk.i?, timestamp: .blk.t?, content: .out[1].s2 }]\" } } 我把此处修改为首先获取列表中的每一个对象，对每个对象进行管道操作，提取其中的 blk.i，blk.t 和 s2 作为 3 个新的字段的值，组成一个新的对象列表。这样就可以返回正确的答案了（谁认识 Unwriter 麻烦把这个文档中的小错误告知他）。 感兴趣的朋友可以在浏览器测试一下上面前后两个 bitquery，来验证一下是否能正确执行。 正确的结果应该如下所示（篇幅限制这里 limit 3） { \"u\": [], \"c\": [ { \"block\": 581226, \"timestamp\": 1557152175, \"content\": \"capitalism has no answers when it comes to the peoples' interests.\" }, { \"block\": 581226, \"timestamp\": 1557152175, \"content\": \"Facebook just won't stop! They are now planning to have their own coin. http://bit.ly/2DSKT6j\\nWill this be a good news or bad for the crypto market? That link is from Cointelegraph.\" }, { \"block\": 581224, \"timestamp\": 1557150641, \"content\": \"Time for another change of topic for my next Monday Memo. Maybe something to do with recreation. Yes, that'll do.\\n\\nIf you're into hiking like I am, try taking new paths or trails from time to time.\" } ] } 结语 这些技术文档是我自己学习变形虫协议的时候的学习总结，希望分享给各位开发者。我也希望更多开发者能够了解 BSV 所能实现的强大功能，多多参与进来，共同构建出更多好玩的应用，让区块链技术能够真正落地，不要仅仅停留在炒币和嘴炮上。 写这些文章是会花费很多时间，也需要查阅很多资料，甚至需要自己亲自去一次次的真机实验，但是我相信这并不是无用功，通过写这些技术文档，我对这些技术的了解更为深入，也学习到很多思想和方法，我相信比特币是proof of work，只有真正脚踏实地地work，才能让比特币的价值得以沉淀，让比特币的精神真正发扬下去。欢迎各位技术大神交流指教。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 BitQuery |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-metanet/":{"url":"chapter-metanet/","title":"元网 Metanet","keywords":"","body":"BSV 的星辰大海，Metanet 之愿景 Metanet 是基于 Bitcoin (SV) 的区块链系统的价值网络，在上面可以进行数据传输和存储，去中心化且不可被篡改。 Metanet 将实现分布网络内容的新方式，并促进比特币小额交易所带来的全新电子商务模式。利用区块链的经济安全性和稳定性，Metanet 可以通过区块链支持的数据存储提供更高的数据质量和完整性来降低欺诈的可能性。在 Metanet 的概念之下，BSV 上的各类交易将构成支撑所有互联网活动的全球公共账本，这是一个具有无限可能性的、令人振奋的新概念。 从去年 11 月分叉的时候，CSW 博士正式提出了这个被称为” 元网 “的宏大愿景，到近期多伦多大会正式确立了 Metanet 的技术实现和规范定义，我们对这个来自未来的颠覆式的网络技术也算可以管中窥豹，可见一斑。 Metanet 的概述和评价 BSVer 对 Metanet 的评价可谓是史无前例的高，这种评价甚至会让不懂的小白认为是在吹逼，仿佛那些号称百万千万 tps 的公链项目，什么颠覆业界形态，制霸智能金融的 IXO 所打出的旗号一样，是不是又是一个准备圈钱跑路的山寨项目？很多新人对 BSV 的第一印象就是看不懂，搞出那么多新概念，新名词，一个个都那么晦涩难懂，颇具币圈特色啊。大家把元网这个概念和什么币圈的” 跨链共振 “，” 交易挖矿 “，” 分片 “等等概念放在一起，很容易令人产生这种传销洗脑一般的不适感。 我们首先来看看 Metanet 广为流传的版本是什么。首先最有名的定义就是博士给出的，要把 Internet（现代互联网）作为 Metanet 的侧链。很多人听到这个理论，立刻回面红耳赤地前来争论，明明比特币是运行在互联网之上的，为什么又说互联网可以运行在比特币之上，可以作为 Metanet 的侧链或者子网。这个问题无非就是你如何定义网络，如何定义链接，这里先按下不表，后文会说明。另一个很重要的理念就是，比特币只是副产品，只是为了实现 Metanet 而被发明出来的一个工具，而最终的愿景就是 Metanet，这个元网将承载庞大的人类数据，极大降低信息成本，提高商业效率，是一个颠覆现有商业模式，改变商业游戏规则的伟大创新。 扯了那么多，大家可以发现还是没有解释为什么 Metanet 如此伟大，比特币如何改变世界，没错，这就是新概念的意义。打个比方，谈起移动互联网，大家都亲切地称之为新一代互联网革命，史无前例地改造了现代人们的生活方式，彻底颠覆了我们的认知。但是我们拨开这些高大上的外衣，从本质上看一下什么是移动互联网，无非就是起源于两个简单地不能再简单的进步，都谈不上什么技术创新，其一就是计算机便携化，也就是将电脑微型化，手机化，可以随身携带。其二就是无线网络带宽逐步增加，从 GPRS 到 3G 4G 5G 等数据传输的速度和容量都极大增加。但是仅仅看这两个简单的进步，你很难想象它们带来了多大的变革，甚至向回推个几年，站在当时的人的角度，能想象到今天连小商小贩都接入到移动互联网支付的场景吗。这就是概念的价值，概念帮助我们通过现有的技术发展，来展望未来，来引导现在的资本，资源去流向这些领域，并脚踏实地的创造出我们所理想的世界。 但是新概念也是两面性的，币圈有着大量包裹着新概念外壳的骗局，加上主流媒体的推波助澜，以及万众创业带来的各种不靠谱的商业模式，让人们对币圈以及对互联网创新天生就带上有色眼镜，第一反应就是骗局，就是为了套投资人的钱，然后套现跑路。但是如果拒绝某些新概念，就可能错过一个风口，错过一个时代。因此一味地听信新概念和一味地拒绝新概念都是不可取的。我们能做的，就是拨开重重迷雾，看清新概念的本质，找到新概念的理论基石，用自己的知识储备和理性思考去判断新概念究竟是否可行，如何实现，有哪些阻碍，应该如何克服。 Metanet 的解释 上文提到，所有高大上的新概念，都可以被剥离成一个或多个看起来非常小或者简单的技术进步，这些进步要么是创造性的，要么是规模性的，创造性的就比如比特币引入 PoW 本身，而规模性的主要是其他方面的基础设施得到完备，为这种新概念的生长提供了土壤。 而解释 Metanet 之前，先解释其他几个方面的发展。首先是比特币（BSV），一个基于稳定的共识体系运行了十余年的 PoW 分布式账本，一个坚如磐石的去信任工具，一个提供点对点价值流通的网络。其次是存储成本在降低，现在随便一个手机就能达到上百 G 甚至上 T 的容量，大型的数据中心存储数据容量少说都是按 PB 为单位来计算的。再次就是网络传输的速率也在飞速提升，移动互联网已经开始商用 5G，而有线互联网也全面普及光纤，各大洲之间的骨干网络也在拓宽。这些基础设施的发展，奠定了 Metanet 的基石，使 Metanet 的发展成为可能。 什么是 Metanet，我这里用比较白话的方式来解读。 全网免许可，没有人可以主导整个网络，没有人有权利占据和分配域名，IP 这些资源，每个人都可以拥有自己的网站，拥有自己的域名，不需要任何人许可。 网络上的内容和使用记录都是永久保存的，整个网络的所有历史都被备份了下来，不存在某个商家或某个公司倒闭而丢失数据的情形，而在这个网络上，作恶的记录也会永久地保存。 该网络跨洲跨界跨平台，无论你用的是怎样的终端设备，无论用的怎样的网络协议（IPv4 还是 IPv6 亦或是自定义协议），无论你用的是哪家公司的应用 app，无论你是哪个商家的用户，大家都在同一个生态环境下运行。各个大商业体要实现数据共享，跨平台合作也非常容易 该网络自带密码安全业界顶级的安全属性，网络原生就支持身份认证，权限管理，无需单独实现安全通讯协议。 该网络原生支持价值传递。你可以不受约束地将价值（钱或者等值的资产 token）通过网络直接传输给网络中的任意一个个体，没有中介，也不需要单独打造一套支付系统。这种价值传递的摩擦非常小，以至于极端微型的价值传递都是可能的，你可以做到向 100 万人提供服务，却每人只收取 1 分钱 该网络是一个开放全球云操作系统，每个人都可以在这个操作系统上进行登录和操作，甚至执行代码，每个人都可以自由地以各种方式来与网络中的其他人交互。每个操作都是公开，可信且带有永久的日志备份的。 上面几点就是根据我的理解，对 Metanet 的特点进行的说明，当然，我的理解一定是片面的，未来一定有我还没有想到的特性被发掘出来。就像没人能够想到，手机网速快了点，怎么就催生了短视频这么大的产业一样。 刚才那些描述，其实没有提到比特币，因为比特币只是 Metanet 所使用的一个基础层，或者一个工具，如果对比特币的特性没有概念或从未有过认知，那么看我刚才的描述，简直就是天方夜谭，这与现在我们日常接触和使用的因特网有巨大的差异，上面的功能没有一个是现代的互联网自带的属性，都需要借助互联网上层的应用来实现，正是这种各自为营的实现，才让现在的互联网实质在退化成一个个的信息孤岛，各大互联网厂家已经把资源和标准划分的差不多了，而各个大厂生态之间也很难进行互通。就以一个支付为例，互联网没有元网的支付属性，所以在互联网上发展出来的支付一定是五花八门，各自掌管着自己的生态，生态之间阻碍极高。典型的如国内的微信支付宝，美国的 paypal，日本的 line 和 paypay，各自占据自己领先的市场，而支付市场是一个具有马太效应，强者恒强最后一统天下的市场，只有在元网这样的原生支付网络中才可能实现市场的统一。 结合前面的分析，这里用四个字来概括元网的本质，数据上链。 数据上链有什么用，很多人开始摸不着头脑，创新的特点就是这样，表现出来的本质或者实质及其简单，但是内部的信息量极大，从中衍生出来的可能和场景具有更大的信息量。首先上链，上什么链，成本怎样，性能怎样，安全性怎样，如何具备可拓展性，如何索引并找到数据，如何避免垃圾信息和 DDOS，数据之间如何交互，如何面对法制和监管等等等等一系列的信息，每一个都值得专门写一篇文章来论述。我这里直接抛结论，使用 BSV 作为链上存储媒介，可以有效解决上面的所有问题，至于为什么，可以参考我之前的文章，或者通过群里分享的大量而全面的资料来学习。 Metanet 白皮书解读 根据前面的分析，我们得出 Metanet 的本质就是数据上链。抛开所有高大上的概念，就是简单的数据上链。但是自分叉之后，各种数据上链工具层出不穷，典型的如 Planaria，B 协议，C 协议，memo 协议，tokenized 协议等等。这些协议以及它们储存的数据与 Metanet 有怎样的联系呢？为什么 Metanet 又如此特殊呢，其实在这次多伦多会议之前，我的理解是上面的各种协议都属于 Metanet，Metanet 只是个宏观的概念，而微观的实现就是上述各种协议。在这次白皮书发布之后，我仔细研读了白皮书，并配合会议视频以及 ppt，发现我之前的理解有一些偏差，这里就解读一下 Metanet 的白皮书。 学习 Metanet 之前，我对 Unwriter 大神的各种上链工具以及查询工具，包括 bit 协议这种通用范式进行了学习和研究。在实际使用的过程中，我们渐渐会发现一些问题，就是使用变形虫框架以及 B 协议 C 协议下的链上存储，数据之间的关联性很难建立起来。打个比方，我的文章都会在 bitpaste 上进行上链，然后付款构造交易后，bitpaste 会返回给我一个交易 hash，我凭借这个交易 hash 来找到这个文章并进行分享。而我在下次分享的时候，就会建立一个新的交易，一个新的毫不相关的交易 Hash 来存储文章。那么我就必须维护一个映射表，文章标题与链上 Hash 之间的关系，一旦这个映射表丢失，我自己可能再也找不回来我自己所发的文章了，或者找回来很麻烦（比如有些朋友会提醒使用 moneyButton 的交易历史来找到对应的交易，这样虽然可行，但是从实现逻辑上来讲，不友好，不优雅，也不够直接，强烈依赖于 moneyButton，同时也依赖于 bitpaste 不要变更协议）。同样，付费阅读我文章的朋友，可能需要维护一个已购文章列表，不然弄丢了 hash，哪怕付费过的文章可能想看也没办法在数据的汪洋大海中找到。 之前我们介绍过 bit 协议，是 Unwriter 推出的一个通用性的协议，不可否认，这个协议的设计非常灵活和普适。通过 bit 协议，就可以定制出刚才说的数据关联格式，但是有个问题，就是耦合度。由于 bit 协议太过灵活，所以数据之间的关联在不同的 bit 协议下是不相同的，也就是说如何关联数据和 bit 协议怎么定义是强烈耦合的，不同的团队和产品设计的 bit 协议可能大相径庭，因此在跨团队或跨产品共享数据的时候就有很大的问题。为什么不从根本上设计一个关联协议，大家都遵守这个协议，在此之上，再各自发挥想象力去定义数据呢。比如说，互联网就带域名 url 这样的层级结构，可以对数据进行关联和分组。那能不能在比特币的交易结构基础上设计一个这样的协议呢，将一个个数据点连接成图状结构。这就是 Metanet 白皮书的重点内容，数据关联。 使用链上储存时，存储的媒介是一笔交易，因此在解释 Metanet 的时候，我们将一个交易称为一个节点（原文翻译是节点，这个节点和我们的挖矿全节点或 spv 节点是无关的，这里的节点只是为了描述拓扑结构而命名的一个 node，所以为了不带来混淆，有的翻译也将将节点换做顶点）。而表示两个交易之间关系的数据结构被称为” 边 “。由” 顶点 “和” 边 “可以组成一副图。比如三角形，就是 3 个顶点三条边组成的一个图形。而在 Metanet 中，一个 Metanet 的交易自己是一个顶点，同时也规定的自己的边。 每个顶点拥有一个自己的比特币公钥（或比特币地址），这个公钥是用来标记一个特定的元网的数据资源。有朋友这里会问，不是一笔交易代表一个数据资源吗，没错，一笔交易代表的是” 某个版本 “的一个资源，而公钥代表的是这个资源本身。换句话说，在元网上，代表一个资源，一张图的是公钥（或地址），而交易则代表这个资源的版本。这个公钥虽然可以随意指定，但是要注意，这个公钥还代表了这个资源所拥有的权限，后文会讲到。 然后来看交易格式：Metanet 交易是一个 OP_RETURN 交易，在 OP_RETURN 中的第一个数据是一个四字节的固定字符”meta“，用来标记这是一笔 Metanet 交易。第二个数据是代表这个数据资源的公钥（图中的 Pnode），用来代表这个资源本身，公钥的作用是用来控制权限。然后就是其父顶点的 TXhash（图中的 TXIDparent），用来标识父子关系，如果此字段为空，则该点就是根节点。之后就是可以自由定义的数据体，这个数据体可以以 bit 协议的自定义地址开头，让这个数据变成 bit 协议下的数据，也就是说，通过这种方式，给 Unwriter 大神的 bit 协议套上一个外壳，使数据带有 Metanet 的层级关系和权限关系，内部可以继续实现 bit 协议。 刚才提到，OP_RETURN 的第三个数据是其父节点的 TXhash，也就是通过这个数据可以找到由谁产生的这个数据。虽然这个数据是写在子节点的，但是不能乱写，如果没有父节点的权限，产生的子节点是非法的，那如何确定子节点是否真的由合法的父节点产生的呢，这就要用到比特币本身的公钥系统。子节点标注了父节点的 hash，通过 hash 可以找到父节点的 Metanet 交易，父节点交易中必然带有父节点用来证明身份的公钥（Pparent），而 Metanet 要求，只有子节点的输入 input 中带有父节点的公钥以及签名，那么子节点才被认为是父节点产生的。换句话说，只有父节点才有权产生子节点，这个权限由比特币的签名系统来保证。这也就是上图中 input 里的 。 总结一下 Metanet 的交易格式。一个 Metanet 交易代表一个数据体节点，同时记录了该节点的父节点，并用交易 input 签名来证明父节点和子节点的亲子关系是合法的。因此 Metanet 交易有几个必要的要素，input 中的 ，OP_RETURN 中的”meta“标志，Pnode 以及 TXIDparent 这 5 个要素构成了 Metanet 交易。 这个交易的格式可以说非常简单，但这就是 Metanet 强大的地方，大道至简，简单而优雅地结合了 OPRETURN 存储数据的灵活性和比特币自身的权限校验功能，充分结合了这两种机制的优越性，并使用比特币网络来作为安全和信用背书。我之前有想过只用 bit 协议来管理权限，但是都没有 Metanet 想的这么优雅和简单。 在这种交易格式下，我们可以抽象出以下的特点： 一个子节点只能有最多一个父节点（如果有多个父节点则拓扑结构会变成环形，复杂度增加） 一个父节点可以产生无数多个子节点，而且只有拥有父节点 Pnode 的私钥，可以正确生成子节点 Pnode 公钥代表一个链上资源，而交易 hash（TXID）则代表它的版本，通过 Pnode 加上 TXID 可以唯一的确定一个资源 如果两个交易的 Pnode 相同，说明这两个交易是同一个资源的不同的版本，以最新版本为准。最新版本的定义是工作量最大（简单理解就是高度越高）或者同一个区块（内存池）中的拓扑排序（TTOR，BCH 搞不了这个） 权限控制是通过父节点来指定子节点的特性，而子节点也可以指定孙节点的特性，证明权限的方法就是 input 中的签名 构造链式权限结构的时候不要求使用特定的 UTXO，只要 input 带有父节点的签名即可。比如可以增加其他输入来付款，付款地址不一定是父节点的 UTXO，二者没有关系，付款用的 input 只用来付款，而父节点的地址用来鉴权 现在我们了解了 Metanet 在链上的数据结构和形态，以及基本的特点，之后我们讨论一下传统互联网所具备的域名，url，搜索等功能是如何在 Metanet 上实现的。如果没有这些功能，我们使用互联网也很难找到网上的数据，因为 IP 地址对人类而言是不可读的，因此才产生了域名系统，也就让不同含义的域名产生了价格。现实中互联网分配域名的权利是掌管在 ICANN 以及其下的各种域名商手中。 Metanet 要进入日常的使用，一定也要设计出这种人类友好的域名系统。但是与互联网不同的是，Metanet 没有 IP 地址的概念，元网是跨平台的，只有地址和交易的概念。这里说个题外话，就是开头所提到的问题，元网并不是运行在互联网之上的，元网与互联网从概念上就是两种不同的组成形态，元网是点对点的，只有地址的概念没有 IP（其实 IP 也是地址的一种，只不过因为数量太有限或因为由电信供应商所控制，而 IP 不是独占的是复用的，从这个角度讲，IP 是地址的一个子集）的概念。因此 Metanet 的域名就只能从地址本身入手，因为不会存在一个中心化的单点的域名分配机构来分配域名（可能有一些自发实现的 bit 协议来试图分配域名映射，但是想达到垄断和通用很难）。 比如一个网站，按照 Metanet 的树状结构，应该有一个节点作为根节点，这个根节点需要一个公钥或地址作为自己的标志。如果我们将根节点的地址作为网站的入口，那就需要在浏览器中输入根节点的地址作为域名。但是地址本身不可阅读，引入域名系统又带来单点问题。Metanet 对此给出的对策就是荣耀地址（vanity address），俗称靓号地址。对于大家都想要的资源，最简单高效的分配方式就是 PoW，工作量证明。去穷举私钥，找到一个靓号地址，通过自身花费的工作量，来自然获得域名，是最公平也是最终极的解决方法。比如我穷举出来一个地址 1GoogleComXXXXXXXXXXXXXXX，通过前缀 1GoogleCom 来作为域名定位网站是最简单的。这里有朋友会问，如果两个人都穷举出一样的地址前缀呢，这个没关系，还可以通过后缀来识别网站，比如大家都知道真谷歌地址的后缀是 XXXXXXXXXXXXXXX，如果有人穷举出一个 1GoogleComYYYYYYYYYYYYYYY 的地址，虽然这两个地址都可以通过域名 1GoogleCom 来搜索到，但是大家都信任后缀是 XXXXXXXXXXXXXXX 的谷歌地址。 这样来自己挖掘域名的方法很符合比特币的免许可的特点。自己付出工作量，通过穷举来获得靓号，不需要一个中心注册机构来发放和管理域名。同时比特币地址域名本身自带证书，不需要 https 这样麻烦的证书交换过程（网站上的内容绝对可信，因为没有根节点私钥是没办法修改网站的）。 域名搞定了，就是 URL，如何定位一个链上网站的某个页面下的某个图片？传统互联网使用被称为统一资源定位符的 URL 来定位资源。URL 也是树状层级结构的，比如我的知乎主页：https://www.zhihu.com/people/hqm-84/activities，可以看做一个个文件夹结构下的资源。https 是协议，zhihu.com 是域名，然后根目录下有 people 文件夹用于表示用户，其下有 hqm-84 目录代表我这个用户，然后是 activities 文件夹表示我的动态。 通过我们刚才的分析，其实大家已经发现了，Metanet 最开始的设计就是层级结构，也就是一个个节点之间自然而然地构成了一个资源定位的功能。只要给每个节点加一个别名，那自然就可以构造出一模一样的资源定位架构。这就被称为 Metanet URL ，即 MURL。它也有个前缀，类似 http，只不过称为 mnp（Metanet Protocol），mnp://domainname/path/file。 这里还要提一点，与传统 url 不同的是，传统互联网的父子路径之间的管理是完全交由网站进行自定义的，而 Metanet 父子节点之间自带权限控制关系，并且这个权限可以进行拆分。那刚才我的知乎主页这个例子，zhihu.com 和 people 两个节点可以是知乎的网站所属的节点，而 hqm-84 这个节点完全可以指定成我自己控制的地址，只有我可以修改下面的路径，知乎无权修改我这个节点下属的全部资源，可以做到让用户真正地拥有自己的数据。 总结 Metanet 说复杂可以很复杂，说简单也可以很简单，就是定义了如何在链上存数据，以让数据之间相互关联。 结合上面的 Metanet 介绍和现在数据上链的痛点，我们可以想象一下如何用 Metanet 架构改造 bitpaste，让它对作者和读者都更好用。首先，弄一个域名 1bitpasteXXXXXXXXX 来作为根节点，然后建立一个 user 的子节点，然后再其下建立多个用户的账户节点，这些节点的地址是每个用户自己的地址（可以通过 xpub 导出一个地址），然后只有用户自己（拥有私钥）才可以修改这个账户节点下属的资源。那么在一个特定的账户节点下有两个文件夹，一个称为 purchase，一个称为 artifact，用来存储购买记录和创作记录，然后在用户每次付费购买新文章后，purchase 下创建一个新子节点，用于付费及存储购买记录，而用户每次发布新文章之后，在 artifact 目录下创建一个新子节点，用于存放用户的文章，只有拥有账户节点（私钥）的用户可以合法创建文章。用户也可以修改自己的文章，或者删除文章。 经过上述改造后的 bitpaste 就很好用了，用户用助记词进行本地登录之后，可以访问到 purchase 目录下自己的所有购买记录，也可以访问 artifact 目录下，自己的全部创作历史，通过 Metanet 的强关联性解决了前文提到的离散数据的痛点。同时带来了权限管理和用户自己掌控数据的优势。 最后，解读一下为什么博士会说，让Internet作为Metanet的侧链，因为Internet能做的Metanet都能做，而Metanet能做的Internet很多做不了，从逻辑上来讲，Internet就是Metanet的子集，既然是子网，叫个侧链不过分吧。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 元网 Metanet |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-metanet/why-metanet.html":{"url":"chapter-metanet/why-metanet.html","title":"Metanet 的意义","keywords":"","body":"Metanet 的意义 什么是 Metanet？ 这个问题有两个答案，具体取决于我们想要谈论的内容：Metanet 或 Metanet 协议。绝大多数系列都将涉及 Metanet 协议，这是一种用于构建在线互联网并实现 Metanet 的主要任务的协议。 让我们花时间在这里，考虑一下 Metanet 究竟是什么概念。肯定没有更好的地方开始回答这个问题，而不是阅读其主要发明人克雷格赖特博士的话。 互联网成为比特币区块链的侧链。Metanet 是一个价值网络 - 整个全球在线活动系统和商业数据连接。 --CSW 我想特别提请你注意 “价值网络” 一词。它可能是 Metanet 作为一个想法，一个概念和一个使命的最简洁的描述。 Metanet 代表了对现有互联网基础设施的范式的完整和彻底的重新定义 - 特别是在人类互动和我们赋予它们的价值方面。 信息成本 几乎不需要说困扰万维网现代生态系统的问题是无数的。我确信读者不需要被告知这些问题，但是至少我没有明确地提及其中一些问题，这将是我的疏忽： 用户缺乏数据所有权 滥用 “免费” 平台 无处不在的广告 内容创作者的获利困难 数据冗余杂乱 我们可以花费很多时间讨论确切原因，为什么同样的问题，以及其他许多问题已经激增，以培养一个充满敌意和有问题的在线环境。但是，与其他许多人之前所做的相反，我会反对大多数问题，而不是所有的问题背后都有一个主要驱动因素。 中心原因是信息成本 。 好的信息不是免费的。我们如何解决好信息应该值得的事实？ 杰里的演讲中提出的论点恰恰表达了信息成本如何以及为何如此重要以承认 - 或者更具体地说，互联网如何无法反映这一成本，以及如何将其视为最重要的驱动力之一。与网络发现的问题。 互联网在以前所未有的规模授予数据访问权限方面具有革命性，允许数十亿人查找资源并相互交流。问题在于这样的数据很少受到它可能具有的价值的尊重。 当生成，传播和访问数据的成本障碍如此之低时，很容易忽视它应具有的内在价值。 例如，每天为 Twitter 或 Facebook 等社交媒体平台提供数以千计的互动数据是微不足道的，因为这样做是 “免费” 的。我们没有考虑的是这些数据应该是有价值的。 当然，我们必须松散地使用 “免费” 这个术语 - 也就是说，没有直接的财务成本 - 因为我们最终会为不受限制的访问和生成多种形式的数据付费。 我们付出时间，接触有针对性的广告，接受垃圾邮件，以及无法根据真正的需求和欲望有效地定制我们的体验。 它已经说过很多次之前的信息是产品归咎于值到数据。换句话说，这意味着将在线用户和创作者的全球市场所决定的成本应用于我们的数据。 因此，广泛的解决方案是一个类似互联网的平台，它将数据的价值放在一切的中心。如果部署成千上万的机器人来传播虚假信息是昂贵的，当仅仅阅读文章的行为需要成本障碍时，我们不得不思考： 我将这些数据作为信息多少重视？ 正是在这里，我们面对当前互联网的问题开始逐渐消失。通过将财务成本（无论多么 小）纳入我们的在线行为，我们被要求表达我们对钱包的真正重视程度。 这就是比特币 SV 本身运行的 Metanet 可以实现的核心目标之一。 新的范式 区块链不仅仅是一个用于调解和记录支付的系统，而且它实际上是一个功能强大且功能多样的商品分类账。 工作证明的突破在于解决双重支出问题和解决创建不可变数据库的挑战。在讨论区块链技术时，比特币解决这一挑战的事实常常被遗忘。 实际上，提供不可变数据库对类似因特网的数据具有深远的影响。- 我们可以使用 Blockchain 作为事实的单一来源的事实，一个通用的服务器 - 是赖以 Metanet 的概念是建立在基础之一。 因此，Metanet 是比特币固有属性的体现，它允许互联，计算和信息交换，存储，分发和商品化。 Metanet 是世界上第一台 4 维计算机，由比特币驱动，并以比特币为生。 --unwriter 这就是比特币促进的新范式。其中区块链可以用作单个通用服务器，用户只需查询区块链即可访问数据。 思维的这种微妙转变为服务提供商，内容创建者和创新者创造了巨大的经济效率潜力，以构建利用区块链作为分布式，不可变后端的应用程序和项目。 从最终用户的角度来看，新范例允许人们真正拥有自己的数据。是否将他们对基于区块链的社交媒体平台（如 Twetch.app）的想法货币化，或者使用 B：// 协议将他们珍爱的记忆存储为加密的链式文件。 Metanet 协议 我们已经触及了 Metanet 的一些动机以及链上互联网可以提供的属性。所述 METANET 协议的核心部件，可以使其视觉得以实现的一个。 Metanet 是比特币的数据结构。 --unwriter 简而言之，它是一种允许以对数据进行编码许可和写访问控制的方式构建链上数据的协议 - 仅使用比特币 SV 区块链本身的基础技术。 因此，Metanet 协议是一种允许用户可证明拥有其链上内容的解决方案。Metanet 协议是一种工具，可以将这些应用程序 (以及未来更多应用程序) 中使用的链上数据编织在一起。 因此，我们允许不同的链上数据以改进应用程序功能的方式进行结构化，并帮助实现允许用户真正拥有 Metanet 上的数据的任务。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 Metanet 的意义 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-metanet/specification.html":{"url":"chapter-metanet/specification.html","title":"Metanet 技术实现","keywords":"","body":"Metanet 技术实现 Metanet 的技术实现细节可查阅下面两个文档： Metanet Technical Summary Metanet 技术概要 下面的这个 Slide 可以更容易理解 Metanet 是如何将交易组织起来的 The Metanet - Coingeek Toronto Presentation 29-05-2019 节点与边 在上一篇文章中，我仔细区分了 Metanet 概念与 Metanet 协议。 之所以如此安排，是考虑到 Metanet 致力于创建全球价值网络的宏伟愿景，随着时间的推移，它无疑将涵盖各种领域、标准和技术。原则上，这类似于当前支撑互联网的基础设施由许多相互交织的协议和架构组成的方式，例如超文本传输安全协议（HTTPS）、文件传输协议（FTP）和可扩展标记语言（XML）。 另一方面，Metanet 协议可以被视为一种独立的协议，它在 Metanet 庞大的生态系统中具有特定的功能和作用。与互联网利用上述协议来定义互联网的通信、文件传输和互操作性等标准相同，Metanet 协议也可用于 Metanet 的特定目的。 那么，到底是什么目的？ Metanet 是以比特币为基础的数据结构。 —_nwriter，Medium 在此郑重提醒：本系列文章不止一次引用了 _unwriter 的成果，而且未来肯定还会继续引用。他们题为 “Metanet 启航 ” 的文章包罗万象，无疑是迄今为止对 Metanet 和 Metanet 协议最完整、最清晰和最深刻的解释之一，这就是为什么您会发现我不停在整个系列中加以引用。 上面的语录堪称是描述 Metanet 协议的目的和功能的金玉良言。在 CoinGeek 多伦多大会上，我用了类似（但不如其优雅）的措辞来表达同样的观点： 构建链上互联网的协议。* 我知道现在情况变得更加明确，Metanet 协议的主要目标是为了从区块链中挖掘类似互联网的数据提供某种结构和组织。众所周知，近几个月来，许多令人瞩目的企业应用程序都以比特币 SV 区块链作为基底，利用链上数据。 Metanet 协议是一种可以将这些应用程序——以及未来的更多应用程序使用的链上数据组合起来的工具。因此，我们允许对不相干的链上数据进行结构化，以改善其所支持应用程序的功能，并帮助实现让用户在 Metanet 上真正拥有自己的数据的使命。 Metanet 协议的技术摘要现在可在 nChain 网站 查阅： — nChain 我强烈建议您在适当时候阅读该技术摘要，其中载有 Metanet 协议提炼成基本概念的过程，包括理解和构建 Metanet 的链上结构所需的全部要素。 但是，正如先前所说，我的博客旨在深入解释这些概念，接着夯实基础，抛砖引玉。 在接下来的四篇文章中，我们将分解以上文档中概述的概念，对 Metanet 协议建立基本的认识。我们将透视它的工作原理，讨论它在开发中支持设计选择的一些原因。 载有技术摘要的文件将依据内容分为下列主题，每个主题都设有专门的讨论帖： 1——节点和边缘结构 2——域名、命名和定位 3——Metanet 与现有协议 4——数据插入和交易结构 不过，在钻研 Metanet 协议本身的细节之前，我们先通过今天的文章介绍一些基本的讨论背景：有向无环图（DAG）的简要概述。 有向无环图（DAG） 要讨论 Metanet 协议，我们需要理解谈论有向无环图（DAG）的意义。 不可避免的是，我们在这里必须涉足 图论 ——数学的一个分支，普遍认为起源于莱昂哈德 · 欧拉（Leonhard Euler）。欧拉的《柯尼斯堡七桥问题》 这篇论文实际上催生了对图形结构的科学研究。 当我们使用图这个术语时，在图论的上下文中，我们通常指的是由节点（也称为顶点）和边组成的任何结构。这里的术语可能有些生僻，但我们所说的 “节点” 实际上是指一些对象，“边”是指一对节点之间的某种连接。 所以，简单来说： 图是由边连接的节点构成的结构。* 边（节点之间的成对连接）的一个有趣属性是它们可能有一个特定的方向。所有边都有方向的图称为有向图。 给定有向图中的一对节点，比如节点 A 和节点 B，连接它们的边可以有两个方向：A→B 或 B→A。 根据这两个节点之间的方向选择，我们会定义它们之间的不同关系。我们的意思是，对于由有向边连接的一对节点 A 和节点 B，一个节点将被视为 “父” 节点，另一个节点将被视为 “子” 节点。 为了看得更清楚，我们在下图中绘制了一对节点： 在我们的描述中，节点 A 和节点 B 由两个圆（即通用“对象”）表示，它们之间的有向边由箭头表示。在上面的例子中，箭头方向为 A→B，这意味着节点 A 是父节点，节点 B 是子节点。 我们将在本文甚至本系列的其余部分中使用关于有向图的简单知识。了解清楚有向图之后，我们只需要介绍最后一个方面：无环属性。 如果沿着有向边没有一条路径在同一节点开始和结束，则认为有向图是无环的。例如，如果有一幅包含节点 A、B、C 等三个节点的图形，遵循 A→B→C→A 这样的路径，则形成了循环。因此，无环图就是一幅不可能形成此类循环的有向图形。 根据上面介绍的一些最基础的图论知识，现在我们就可以定义一幅有向无环图（DAG）。 DAG 是一种具有以下属性的结构： Directed，有向——一对节点之间的每条边都是有方向的。 Acyclic，无环——不包含循环。 Graph，图——包含节点和边。 那么，为什么我们要花这么多宝贵的时间来谈论图形结构呢？ 答案很简单：有向无环图不仅在各种自然环境中普遍存在，而且也是现代数据结构和信息系统（包括比特币）的基石。 我们在现实场景中发现了 DAG，例如家谱、时限调度系统、以及现代版本控制系统（如广泛应用的 Git 数据模型）。但是，当我们观察到区块链本身作为一种数据结构也包含 DAG 时，一切开始变得真正有趣起来。 区块链与 DAG 比特币白皮书明确指出，区块链是 DAG。值得注意的是，这一观察结果经常被误解或完全忽略，而代之以区块链的工作量证明属性。“比较”区块链与 DAG 的文章并不少见，就好像它们是互不相干的概念——这真是谬以千里。 按照我们刚刚确立的定义，不仅区块链可以视为一个恰当的 DAG 实例，事实上，只要本着开放的心态去观察，我们还可以在区块链中发现多种不同的 DAG 结构。 今天将重点讨论比特币区块链中包含的两个最明显的 DAG 结构 实例： 区块 DAG；以及 交易 DAG。 让我们看一看这两幅 DAG 是如何形成的。 区块 DAG 我相信几乎所有的读者都知道，区块链简单来说就是一串加密链接的数据块。每个区块中的数据依次包括一个区块标题和一组交易，但从图论的角度看，我们只把整个数据块看作离散对象，而不会将其进一步分解成组件。 不过，重要的是理解我刚才提到的区块之间的 “加密链接” 从何而来。这里的关键知识是： 每个区块都含有前一区块标题的加密哈希值。* 这只是一种别致的说法，即每个新区块都 引用 了前一区块。巧妙之处在于引用前一区块标题的加密哈希值的形式，而加密哈希值只是单向加密哈希函数的输出。 因为前一区块的哈希值包含在每个新区块中，所以我们可以把区块链视为 DAG： 在上图中，每个区块代表图中的一个节点。这些节点通过由前一区块各自的加密哈希值表示的边成对地依次连接。例如，节点 B1 通过边 B1→B2 连接到节点 B2，因为 B2 含有加密哈希值 H(B1)，其中 H( )表示哈希函数。 严格来说，这里应该专门讨论区块标题，但区块一词足以表达所有的意图和目的。 顺便插一句，上文所示区块之间的边的方向性，乍一看，似乎与 “孤块” 的概念相冲突。* 对于不熟悉这一概念的人来说，孤块是由于多位矿工在非常接近的时间找到了有效的工作量证明解决方案而被挖到的区块，它们可能暂时有效，却不会作为构建基础。因此，“孤块”一词意味着它没有父节点，但孤块是构建在前一区块的基础上并通过 H(Tx_prev)引用，这确实意味着孤块有父节点但没有子节点。 也许这更像是 “孤” 一词引发的问题，可是我们为什么要用 “孤” 来形容一个有前身的区块？当然，关键特征是此类区块没有后继者？* 比特币：点对点电子现金系统[9] 在任何情况下，我都坚持使用上图所示的边方向惯例——即 Bi→Bi+1 代表相继区块。* 在我看来，这种做法更合乎逻辑，因为较新区块是较老区块的后代（或子代），这也秉承了原始 [ 比特币白皮书 ](https://bitcoinsv.io/wp-content/uploads/2018/11/bitcoin.pdf) 中的使用惯例。* 无需深究技术细节，我们就可以看到区块链是一幅图（即由节点和边组成），是有向的（即每条边都是 Bi→Bi+1 方向），而且是无环的。“区块 DAG”之所以是无环的，原因在于加密哈希函数的抗冲突属性。从本质上讲，要形成一个循环，我们必须找到两个各自区块标题的哈希值相同的不同区块，才可以破除这项属性。 因此，我们可以断定，区块链中的区块具备区块链作为 DAG 所需的全部属性。值得注意的是，区块链虽说的确是一幅 DAG，但它只限于简单的线性结构。 那么，交易呢？ 交易 DAG 区块链的每个区块中都有一组交易，这些交易以各区块的区块标题中包含的二进制哈希树根（Merkle root）共同表示。换句话说，区块中的交易实际上也是加密哈希值的输入，用于在区块链的区块之间创建边。 出于同样的原因，有人可能会认为我们刚才讨论的 “区块 DAG” 与接下来要讨论的 “交易 DAG” 是相互关联的。但是，如果只是将区块视为一种不同类型的节点，从而形成区块 DAG，那么同样可以将区块链的交易视为另一种不同类型的节点，从而形成交易 DAG。 我们可以运用在推敲区块形成 DAG 时应用的相同逻辑来理解交易 DAG。以下可能就是这里要讨论的交易图形： 区块链基于 UTXO 模型运行，其中 “UTXO” 是指“未使用交易输出”。在这里不展开太多细节，重点了解： 交易消耗（即使用）先前交易的 UTXO。* 实际上，这句话意味着每笔新交易都将包含对先前交易的引用。这种引用其实是交易标识（交易 ID），只不过是前一交易的加密哈希值，代码可以写作 H(Tx_prev)。 因此，正如区块通过哈希值引用前一区块形成区块 DAG 一样，交易也通过哈希值引用先前交易形成交易 DAG。 主要区别在于：这里 “区块” 是单数概念，“交易”是复数概念；区块只能引用前一区块，因为它们一个接一个地附加到区块链上，而交易则可以引用许多的先前交易，作为许多不同交易输入的资金来源。 因此，我们发现，相比较为单纯的区块 DAG，交易 DAG 的形式要复杂得多。区块 DAG 是一个连接节点简单线性序列；交易 DAG 则可以扩展成复杂的结构，其中交易引用许多其他交易（同时也被许多其他交易引用）。这里一并介绍有向图的最后几个术语，即节点的入度和出度： 入度——指进入某节点的边的条数。 出度——指从某节点出发的边的条数。 借助这些新术语，不难看出区块 DAG 非常简单，因为底层区块链协议规定区块的入度和出度必须始终为 1。相反，区块链协议允许交易有任意入度和出度。这就是为什么交易 DAG 看起来比区块 DAG 要复杂得多。 为了简单起见，我向来对这里的 “1” 和“任意”二词持宽容态度。对于短暂的区块链分叉，分叉起始的区块的出度会暂时 >1；但对于深度 “稳态” 区块，入度和出度会始终为 1。同样，交易的出入度实际上受限于（而非“任意”）规定的交易规模约束，但原则上是不受限的。 DAG 的入度和出度对相应图形可表示的结构的影响，这一概念留待下次考察 Metanet 图时再探讨。 别只听我说，您可以运用某某高能提供的奇妙的交易图可视化工具，自行验证这些概念，然后迷失在交易 DAG 的无底洞里。 Metanet 图 我们看到一个规则集（即区块链协议的规则集）可以描述两幅不同的 DAG：一个用于区块，另一个用于交易。 Metanet 协议只是在区块链协议之外应用的另一组规则，它允许我们定义另一幅 DAG：Metanet 图。 下一篇文章将研究 Metanet 协议描述的规则集细节，以及我们可以如何实施其规则来形成链上数据的有向图。但眼前，我想简单解释一下该协议以特定方式构建链上数据的一些动机。 为什么要使用 DAG？ 有向图结构有许多固有的属性，非常适合类互联网数据的用例。下一次我们再详细介绍，这里只列举其中一部分： 高效； 可检索； 灵活； 基于本地。 今天，我想真正强调的一点是本地属性——使用 DAG 作为数据结构直接兼容区块链的底层数据结构。 为什么今天大部分的篇幅用在建立有向图的概念，并解释了其对于区块链各层面功能的基本作用，现在原因已经很清楚了。通过使用 DAG 构建链上的类互联网数据，我们直接利用了现有的区块链基础设施来实现目标。 换句话说，我们可以结合区块链作为点对点电子现金系统的基本用例来构建 Metanet。我们正在利用基层区块链的有用属性，以一种既支持使用微支付又能真正拥有正在商品化的数据的方式，实现链上价值网络的目标。 共存图 最后，请您注意交易 DAG 与 Metanet 图是如何相辅相成和共存的。 下次我们会发现，构成 Metanet 图的节点也是交易。因此，Metanet 图中的任何节点也必然是前述交易 DAG 的一部分。 上图有效地说明了 Metanet 图如何能够与交易 DAG 同时共存。图形之间的关系可以概括为： 所有 Metanet 节点都是交易，但并非所有交易都是 Metanet 节点。* 那么，Metanet 图有什么规则，它又是如何实现的？ 敬请关注本系列，下一期将研究用于创建 Metanet 图的节点与边结构的细节以及有利属性。* new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 Metanet 技术实现 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-metanet/developer-guide.html":{"url":"chapter-metanet/developer-guide.html","title":"Metanet 开发者指南","keywords":"","body":"Metanet 开发者指南 元网 (Metanet) 是世界上第一台四维计算机，由比特币本地驱动，生存于比特币。 元网具有强大的特性，比如： 绝对的数据所有权 ：许许多多 “去中心化” 的崇拜者试图解决这个问题，但一一失败了。元网通过使用比特币从根本上解决了这个问题。 可替代的计算 : 如果正确使用，比特币是隐私的和可替代的。元网充分利用了这个特性，提供了一种可替代的计算框架，而其他任何 “区块链平台” 从无这种可能性。 无限计算 ：两种强大方案的结合，开启了一个新的计算维度。 就在今天，我发布了一个系统，可以帮助驱动元网，叫元网变形虫（Metanet Planaria）。 . . . 它不是大多数人想的那样。 目录： Metanet 介绍 建立 Metanet 应用程序 结论 Metanet 介绍 自去冬以来，许多人一直在狂热讨论 “Metanet” 有多伟大。但事实是，这些都不是 Metanet。Metanet 从未存在过。 上周末情况发生了变化。它现在已经存在。 在你恐慌之前，让我澄清一下，Metanet 并没有让你在比特币上已建立的任何东西失效。它像是对现有协议的扩展，意味着你不必用它，但是如果你用它，它将会更加强大。请继续阅读以学习更多。 创世纪的 Metanet 图是上周末完成的: 大多数人不理解: Metanet 不是什么哲学概念。它也不是一个模因(meme)。Metanet 是一个非常具体的协议，同时也是非常通用的协议，如此通用以至于它变得哲学化。 听起来很矛盾吗？生活中最好的东西就是矛盾。 那么什么是 Metanet 呢？ 下面是一个很棒的演示: 我把它分解成一句话: Metanet 是基于比特币的数据结构。 Metanet: 基于比特币的数据结构 Metanet 是一个简单协议，允许你在比特币上创建虚拟数据结构。通过有向无环图 (DAG) 的形式，让你创建计算科学中使用的任何典型数据结构。 数组是按时间 / 拓扑顺序排列的父 + 子树。 图是父 + 子树，每一个节点由唯一的私钥识别。 你甚至可以发明自己的数据结构。 它不只是一个任意数据结构。它是一种可以存储、传输和赋予真实价值的数据结构。所有这些都由比特币本地驱动，可以用你想到的任何方式在比特币编程运行。 比特币 + 元网（Metanet）: 最高效的可编程数据账本 比特币是最有效的 数据存储协议 ，元网是位于比特币之上的最有效的数据结构协议。 首先阅读下面的贴子，了解一下高效的 数据存储协议 意味着什么。 其他臃肿的 “区块链” 项目剽窃了比特币，却以一种完全天真和业余的方式将它们的全部历史状态存储在链上，以致根本不能扩容。比特币与它们不同，比特币基于 UTXO (未花费交易输出)。 最小的 UTXO 结构，允许链上与链外计算之间的强大交互，并且可以 无限扩容 。 当你可以在区块链上建造薛定谔的猫时，为什么要在区块链上建造猫？ 在这里，函数式编程与面向对象编程（OOP）两个范式之间的差异是巨大的。对于初学者来说，函数式编程可以做任何 OOP 可以做的事情，但更小、更可扩展和更健壮。正如我在前面推特提到的，所有大企业都将他们的关键任务系统从面向对象式转移到函数式，是有原因的。 但更重要的是，函数编程范式是 Metanet 如何增加一个计算维度，这一点没有其他系统可以做到，因为它们是基于面向对象编程范式的原始刚性结构。 用最小的 数据存储协议 (即比特币)，在顶部构建最小的 数据结构协议 (即 Metanet)，当两者产生 化学反应 时，最终得到的是最简单但最强大的可编程账本。 简单是终极的复杂。 Metanet 上有它自己的维度。当你看到它时，其他的东西看起来像玩具一样。如果你不相信我，或者不理解，那就忽略它，并继续玩你的业余计算器吧。我们将用超级计算机来灭迹。 Metanet: 可替代的超级计算机 人们一直在比特币中谈论 “可替代性（fungibility）”, 但是绝大多数人完全误解了“可替代性” 的工作原理。这就是为什么你会看到一些不幸的、低级的、非法的解决方案比如混币服务，即将多人的交易混在一起，以模糊资金流向。 当他们在热烈谈论 “区块链的透明度” 时，又在谈论如何模糊交易。 当他们在称赞比特币是 “真相机” 时，又致力于将交易移到链外，以隐藏真相。 他们不理解比特币区块链的强大在于“链”。他们不理解，可能还有更好的方法在保持资金透明流动的同时，实现隐私。仅仅因为你缺乏足够想象力而没有找到解决方案，不意味着不存在方案，只意味着你的想象力不够。 又，发明者自己也在白皮书的整个章节中明确提到了所有这些内容(阅读全文) : 比特币可替代性的关键不在于非法混币。可替代性的关键是 永远不要重用密钥，每进行一次交易都生成一个新密钥 。当然，有时重用密钥是方便的或者不可避免的，但是对于绝大多数情况，你可以通过每次派生一个新密钥来实现可替代性。 但 Metanet 走得更远。 如果你认为可替代交易很酷，那么稍等等，等你了解了 可替代计算 之后再说吧。 过去有各种各样的将 “区块链作为一个计算机” 的尝试，但他们全部失败在可替代性上。 所有将自己称为 “DApp 平台” 的区块链系统都属于这一类。所有这些所谓的 “作为一个计算机的区块链” 都是简单化系统，在结构上有内在限制，原因是它们放弃了 UTXO 系统，导致缺乏可替代性，并限制了计算能力 如果深入研究这些“DApp 区块链平台”，它们不过是非常原始的 key/value 数据库系统。事实上，如果你将它们与我们今天使用的企业和消费者 APPs 中的任何一个典型应用程序比较，它们看起来就像玩具一样。 我们可以把它们视作 “2D” 计算。既原始且有限。 接下来是“3D 计算”。这些系统没有犯下抛弃比特币发明的优雅 UTXO 系统的错误。其中绝大多数协议建立在比特币之上。然而，他们的能力也很有限。由于采用 UTXO 架构，它们有些潜力，但无一展现它们了的全部潜力。因为它们没有一个像 Metanet 那样找到使用密钥的方法，他们都受困于脆弱的系统，没有什么可用性，最重要的是， 缺乏可替代性 。 最后我们有了 Metanet，一个基于 UTXO 的四维计算机。通过为每个新交易生成一个新密钥，并用生成的密钥标识数据结构中的每个节点，Metanet 树与 HD 密钥树组合， 打开了通往一个全新维度的大门。 由于比特币、 Metanet 和密钥之间强大的交互作用，我们不仅有可替代的交易，而且还有一种实现可替代计算的方法。 值得注意的是， Metanet 不是一种关于 “去中心化但原始与业余的计算” 的业余想法。 目标不是建立一些业余的 “去中心化” 科学项目。 目标是建立一个前所未有的全新的确定性的超级计算范式。 如果你这样看，所有其他的 “区块链项目” 看起来像一个玩具或一个可爱的社会实验。 最重要的是，与所有的 “DApp 平台” 不同，比特币 + Metanet 的工作方式是 100% 合法的、可扩容的，并且得到了开启整个行业的共识机制的保护: 工作量证明挖矿。 Metanet 是比特币的无限转换函数 去年我发布了这条消息: Metanet 就是比特币缺失的这种 \" 转换函数”。但并没有改变比特币的工作方式。相反，它以最强大的方式利用了比特币现有的独特性性。它可以无限扩容。只需要你以开放的心态去管窥这个新的维度。 现在我已经简要地介绍了 Metanet，下面看看如何在 Metanet 上构建实际的应用程序(APPs)。 构建 Metanet 应用程序 Metanet 范式 那么 Metanet 在实践中是如何工作呢？什么是范式？ 它就像存在于比特币上的云。不，它根本不是“一个类似 Dropbox 的系统”。我嘲笑那些曾经说过“因此它就像一个 Dropbox?\" 的人。跳出你的小 Dropbox，开放式思考。这是一个全新的范式。 当我说云时，我不是说传统意义上的“云“，我是指真正生活在区块链上的云。由于这种微妙但重要的区别，你能够最终拥有自己的真正数据。 而且它比任何现有的云平台更安全，因为所有的同步都是通过你自己的密钥执行的只要你拥有密匙，你可以从任何地点、任何时间立即“同步“区块链。结合派生的 HD 密钥，它给了我们另一个计算维度，可以实现许多前所未有的事情。 下面是 Metanet 演示中的一个图表: 这里有两个部分: 区块链数据提供者: 由于直接从区块链同步是低效的，你可以连接到数据提供者比如 Planaria 或 Bitbus 上，只请求和同步你需要的数据 (Planaria，当你想运行一个无服务器的应用程序时；Bitbus，当你想构建你自己的专业化后端，并作为你自己的一个 Planaria 节点提供时)。这些数据提供者有一个确定性的数据派生机制，可以将区块链变成一个可查询的 API。另外，需要注意的是，这些都是“傻瓜式” 的 API，没有降低应用程序跨平台的锁定机制 SPV（简单支付验证）: 使用 SPV 来验证你从上述数据提供者那里收到的数据的真实性。这一部分是可选的，但随着更多关键任务的应用程序围绕这一范式构建，这一部分将变得越来越重要。这部分还需要做更多的工作，但我们会做到的。 这与 Planaria 的最初愿景是一致的 (我在 Planaria 文档的“从读取中分离写入” 章节讨论了这一点) : 重要的是，这些数据载体解除了从写入到读取的捆绑。 同样重要的是，这些数据载体解除了身份验证与数据传输之间的捆绑，赋予钱包全部权利，同时向用户提供 “傻瓜式” 服务，在非捆绑的各方之间创建了强大的交互作用 (请阅读 Planaria 文档中的“去中心化认证” 部分) 从现在开始，你可以更进一步，使用 Neon Planaria 这样的系统构建一个强大的计算框架，甚至可以回溯计算区块链，但这是以后的事情了。今天让我们把注意力集中在阅读部分。 Bitcom + Metanet 不久前，我提出了一个新的，去中心化的注册比特币应用协议的方法，叫做 Bitcom: https://bitcom.planaria.network。 Bitcom 是一个“协议的协议”，一个用于注册协议的协议。 在 Bitcom 之前，区分一个应用程序协议交易和另一个应用程序协议交易的传统方法是由应用程序协议管理员提出一个任意的 OP-RETURN“前缀”约定，这是位于 OP_ RETURN 之后的第一个推送数据。 这种方式自然而然地使得应用程序协议的处理变成中心化了，因为应用程序开发人员必须任意提出自己的协议前缀，然后注册到一个中心化目录的某个地方，在这里，总有一群中心化的委员会来同意或拒绝列出许可清单。为了避免名称空间的冲突，这是必要的。 创建 Bitcom 就是为了解决这个问题。 解决方案是 使用随机生成的比特币地址作为前缀，并将其发布到区块链。随机地址的唯一性确保了在避免名称冲突的同时不需要一个中心化的目录，直接发布到区块链，并提供一个去中心化的协议注册。 从那以后，许多比特币 SV 应用程序开发者社区已经接受了这个约定，推动了诸如 B://、C:// 、 D://、 MAP、BCAT、AIP 等协议的产生。 你可以在这里看到全局日志: 那么 Bitcom 如何使用 Metanet 呢 感谢 Metanet 协议的优雅设计，Bitcom 和 Metanet 具有完美的兼容性。事实上，这两份协议似乎是天生一对。 一个很好的思考方式是: Bitcom 是一种数据模式协议 Metanet 是一种数据结构协议 在 Metanet，每个节点都可能有一个附加的推送数据序列来实现应用程序协议，同时 Metanet 协议创建一个覆式数据结构来组成这些节点。在下面的示例中，我们看到一个 Metanet 节点交易包括了 B Bitcom 协议。 Metanet** 查询：** 简单的方法 Metanet 使用前缀 meta 来表示该交易属于 Metanet 交易。由于 Metanet 交易都正好是比特币交易，你已经能在 Neon Genesis 上看到 Metanet 交易: https://neongenesis.bitdb.network/query/1HcBPzWoKDL2FhCMbocQmLuFTYsiD73u1j/ewogICJ2IjogMywKICAicSI6IHsKICAgICJmaW5kIjogewogICAgICAib3V0LnMxIjogIm1ldGEiCiAgICB9CiAgfQp9 这里的问题是，它只是一个全球 Metanet 交易数据的傻瓜式列表。 然而，Metanet 的真正力量也在这个图表中 针对上面的数据，实际上你没有什么可以做的，因为它不支持一个图的遍历查询。 我们需要某种能够处理图表的东西。 这就是元网变形虫 (MetanetPlanaria ) 所做的。 元网变形虫 (Metanet Planaria) 介绍 上面我经提到 Metanet 有两个部分: 数据提供者 2.SPV(简单支付验证) 变形虫 可以解决第一个难题: 数据提供者。 下面是 Metanet 与 Planaria 其他节点如《创世纪(Genesis)》、《巴别塔(Babel)》和《时间（Chronos）》之间的区别。 只索引 Metanet: 以 meta 前缀的所有交易，再无其他。 2. 图遍历 : 只查询 Metanet 子图的能力 这意味着当你简单查询时，你能得到全局 Metanet: { \"v\": 3, \"q\": { \"find\": {} } } 来自 metanet planaria。 但是最重要的在第二部分，即图查询。让我们来看看。 变形虫的元网查询（PlanariaMetanet Query） 下面是一个 Metanet 图的例子。我们先假设 “Domain P0” 是 Bitstagram 的世界。 Bitstgram 当前版本的的问题在于它只是一个全球 feed，没有用户的概念。但是我们可以想象一个支持用户账户的 Bitstagram，由 Metanet 驱动。 “Domain P1，P2，...”可能是它的用户帐户。每个用户都有子节点，每个子节点用于组织其子树的数据结构。 例如 “Domain P1,1” 可能代表用户的时间线。为了能够得到用户的时间线，我们可能需要作如下查询: 查找 DomainP1,1 下的所有节点，这些节点遵循 Bitcom 协议 19HxigV4QyBv3tHpQVcUEQyq1pzZVdoAut 为此，首先要选择节点(P1,1--TxID1,1)，然后遍历其所有后代(P1,1,1- TxID1,1, 和 P1,1,2- TxID1,1,2) ，以便过滤只包含 19hxigv4qybv3thqvcueqyq1pzzvdoaut 前缀的交易。 也有可能，有时你需要降低遍历水平。有时你希望遍历，同时按属性进行过滤。有时你希望将过滤后的结果只返回到某些特定属性。 听起来很强大？是的，今天这一切都是可能的。 那么它到底是如何工作的呢？你应该查询什么？ 比特查询（Bitquery）: Metanet 版 能够有效地进行灵活的图查询, 意味着以下类型的查询是可能的: 获取一个 Bitcom 协议 X 后面的全局 Metanet 图的所有项(例如, B)。 获取一个单一用户在 Metanet 图中的所有“文件”。 筛选 metanet 中出现在子树中任何位置的特定属性。 获取一个包含特定属性的某组织的子树图，但是运行部分遍历(不是完全遍历叶节点)。 为了提供这个特性，我们为 Bitquery 引入了一个新特性:“选择”。 基本上，它通过三个属性中的任何一个选择一个节点: “a”: 地址 “tx”: 交易 id “id”:H(地址 || 交易 id) 然后从那里遍历它的后代，并准确地过滤你正在寻找的东西。如果你以前使用过 Bitquery，那么查询语言的其余部分应该很熟悉，因为它与所有 Planaria 公共节点以及 Bitbus 中使用的 Bitquery 是相同的。 注意它只是 Bitquery 的一个扩展，支持所有你已经熟悉的特性，比如“映射（project），甚至是 JQ 提供支持的转换函数“r.f”。 以下是一些查询示例: 在这里，我们选择根节点 (A0，Tx0) 并从那里运行查询。查询将过滤子树并返回响应。 下面我们选择(A2，Tx2) ，然后从那里遍历图并查询它的后代。 最后在下面的图中，我们选择 (A3，Tx3) 并从那里开始查询: 结论 Metanet 是一个强大的协议，可以从比特币交易中创建数据结构。 它是第一个也是唯一一个可替代的计算平台。 它是有史以来第一个真正让你拥有自己数据的解决方案。 它可以让你构建一个便携式无限计算机。 今天，它已经为你的建设准备好了。 访问元网变形虫：https://metanet.planaria.network 阅读元网白皮书: https://bico.media/bit://15DHFxWZJT58f9nhyGnsRBqrgwK4W6h4Up/d774b792301a3fe5dc1f4ffce53d28ee3997732b5cc7b1a49b6fe5abe76fff8d new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 Metanet 开发者指南 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-metanet/apps.html":{"url":"chapter-metanet/apps.html","title":"Metanet 的应用","keywords":"","body":"Metanet 的应用 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 Metanet 的应用 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-metanet/prospect.html":{"url":"chapter-metanet/prospect.html","title":"Metanet 展望","keywords":"","body":"Metanet 展望 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 Metanet 展望 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-laws/":{"url":"chapter-laws/","title":"比特币与法律","keywords":"","body":"比特币与法律 比特币的发明出现，使得私有财产将被重新定义。在比特币发展的早期，它引起了一些无政府主义者的兴趣，甚至幼稚地认为 “代码即法律”。事实上，比特币的运作一直在法律的框架之中。 比特币（BSV) 在法律上的本质是权利系统 众人皆曰，比特币明明是货币或至多是虚拟货币系统，为何成了权利系统？诸位莫急，本文正是要破除多年以来比特币只是货币系统的固有观念。比特币不只是货币系统，而是以权利为核心的包罗万象的复杂知识系统。回顾比特币创始人中本聪的历年发言，并观察近年尤其是近一年来发生在比特币（BSV）上的日新月异的技术进展，可以知道，比特币从来不是单为成为世界货币而发明的，货币 (或现金) 只是实现比特币复杂知识系统的副产品或内生激励机制而已。作为万物的价值尺度，货币从来不会孤立存在，也从来不会有一个孤立的货币系统竟然能够成功。唯有这个系统与外界相连，将外界万物纳入这个系统中，经由外界万物与系统中的比特币相互作用、进而相互交换，比特币的货币功能方得以实现。在这个相互作用、相互交换的过程中，比特币作为外界万物的价值尺度得以建立，而外界万特的秩序亦得以建立。正所谓，天地位焉，万物育焉。 比特币与外界相联的桥梁是交易即 Tx，在代码层面体现为 Tx 的输入（input）与输出（output），一切利益皆可通过 Tx 来实现，而现代市场经济法律下，一切利益无不以权利作为保障。没有无利益的权利，亦没有无权利的利益。比特币正是建立在现代法律基础上的权利系统。可以这样说，比特币是人类历史上第一次实现从技术上将权利掌握在个人手中，德国著名法学家耶林所谓 “为权利而斗争” 的诤言第一次在技术上有了实现的武器。 比特币是权利确认与结算登记系统 一切权利均以确权开始，而以结算登记结束。 权利是人类的抽象概念，意指人对所属对象享有占有、使用、收益、处分、不受他人侵犯，损害赔偿等利益，权利代表了人之为之的价值。一项物件、一纸合同、一份文件等等不是权利，而是权利的客体或权利的载体或权利的对象。因对象不同，权利大致可分成物权、债权、人身权、亲权、知识产权、消费者权利等等。权利的实现包括自力实现，更多的是通过法律实现。 由于权利是抽象概念，因此在现实中，对权利的确认往往通过对权利客体或权利载体或权利对象的状态确认而确认。注意，这里出现了 “状态” 一词，而状态正是比特币系统中的一个重要概念，有人将整个比特币系统称为状态机。 具体而言，物权通常以物的两种状态而确认，一是占有状态，指一人占有某物，在无相反证据时，推定某人享有该物物权，如占有货币，推定享有该货币的所有权，此为占有公示；二是登记状态，对某些物，如不动产（土地、房产）、车辆、船舶、专利权、注册商标权等，以法律机构的登记为准，经登记者享有该物物权，此为登记公示。当然，以占有和登记两种状态，又可以衍生出更多的复杂状态，不赘。 债权则以合同记载的状态为确认依据，持有一份当事各方签署的合同，推定签署人享有合同项下的债权。合同绝大多数采意思自由原则，即双方自由签订；只有极少数情况，才以政府登记为生效前提，如特定情形下的不动产抵押合同。 人身权以人自身作为确权依据，人身权主要体现为人格权、生命健康权、身份权等不受他人侵犯，受害人享有获得法律救济的权利。亲属权多以登记状态为确权依据、如婚姻登记、出生登记、户籍登记等。知识产权的确权除以登记状态为确权依据外，大多以创作完成的状态为确权依据，如著作权、非注册商标、商业秘密等。 从上面可以看出，权利并非客体本身，权利不是一栋房子、一台机器、一个人体、或者一项服务等，权利是当事人或法律赋予这些对象的一个抽象概念，通过客体的一个状态得以确认，因而权利是概念化的，是可计算的。比特币之状态机概念正可以实现这样的功能，即将状态登记于比特币之区块链，借由状态而锁定或推定权利人。 例如物权。无论是占有公示的动产物权或登记公示的不动产物权，皆可由比特币之区块链实现确权。现实中，房屋产权以房产登记机构的登记为准，那现在可由登记机构或个人通过生成一项与房屋信息有关的比特币交易 Tx 而记录于区块链上，比如记载于输出中的 OP-return 字段。 至于动产物权，则往往由合同买卖而获得，此时可将买卖合同生成一项比特币交易 Tx，同样记录于 OP-return 字段，该合同的状态即对应于动产物权的状态。并且，货物买卖中，区块链可随合同的不同状态而生成不同的交易，从而确定不同的物权状态。比如，订立合同为一项状态，此时区块链对应的物权状态为卖方所有；合同履行为一项状态，如全部履行、货款结清，可约定区块链对应的物权状态主买方所有，如部分履行，可约定物权状态为卖方所有，等等。其他类权利的确认，大同小异。 至于数字化载体的权利确认，则更为简单。比如数字化的版权，可直接将文件哈希化，将哈希记录于交易字段，亦可在区块容量足够大时，直接将文件本身上链，以文件内容确权。 亲权，可经由登记于区块链的结婚证、出生证等而确定。人身权中的生命健康权，如果发生损害，可经记录于区块链上的病历作为证据而确认损害具体情形。更重要的，当病历记录于区块链上，可免于篡改、伪造，减少了纠纷。身份、人格亦可经区块链登记或鹿据溯源而确权或是否受到损害。 因此，本质上，法律上的权利可以通过比特币系统来确权。 更重要的，登记于比特币的记录与时间连锁而不可篡改，且权利人可通过私钥对权利予以坚强控制。比如，未经权利人授权解锁，房屋产权不可更改；又如，经由比特币的 Tx 时间连锁追踪，任何一项动产物权的一切状态都得以呈现，，从而可以确定债权状态或真正的物权权利人。 权利的结算登记与权利的确权登记类似。 不过需要强调的是，比特币如成为权利确认与结算登记系统，则区块需要极大容量，如容纳全球权利，区块容量应当不受限。目前看，只有 BSV 能够实现。 比特币是权利转移系统 任何社会，权利必须流动，社会才有活力，市场社会更是如此。不能流动的权利无法实现利益，难谓之权利。权利流动往往涉及对价，故权利转移通常包括两个互为依赖的过程，一是价值的转移，体现为货币的支付；二是权利本身的转让，体现为权利客体的状态转移，比如占有状态从甲占有变为乙占有，或签署一份买卖合同，或知识产权权利人的变更登记等等。目前的区块链如 BTC 基本上只实现了第一个过程，即价值的转移。简单的价值转移如 BTC 的支付是一个单向的过程，不涉及对价，离权利转移系统还相差甚远。 也许有人问，我买比特币支付了对价的啊，如美元、人民币，怎么说无对价？但美元、人民币的支付或权利转移并没有发生在链上，BTC 在链上的转移是没有对价的，亦不受是否支付对价而控制，一旦发送，无可回转。交易所的控制不能算链上控制。至于 USDT 的链上支付，亦与 BTC 的转移是相互独立的，不构成对价。 不过就算比特币实现了与 USDT、美元、人民币等之间的转移，本质上只是货币之间的投机兑换，非现实经济下的权利转移。 是比特币在链上无法实现除了货币支付之外的权利转让么？非也，是 Bitcoin core 或 BTC 团队走上了一条错误的道路。他们从未设想比特币可成为万物的权利转移链，他们局限于比特币只是货币，比特币网络只是实现货币功能，或成为所谓 “数字黄金”，或以闪电支付的多签名系统隔离真实交易。此等做法，正如前文所说，不与万物的权利转移直接连接，既成不了货币系统，更不可能被现实的、真实的经济系统所接纳，只是一种异想天开。 更重要的，一个无对价或无权利转移的货币支付，极有可能沦为非法、洗钱、纯资金盘的庞氏游戏。 有幸，BSV 横空出世。 在比特币上实现权利的转移，从法律上并不困难，就是将与权利转移有关的证据置于链上。以房产买卖为例，与权利有关的证据包括：一份双方签署的房屋买卖合同，房东产权证明（可为链上的在先登记），已缴契税凭证，买家付款凭证等等。以上证据都是书面的，都是可计算的，因而都可以上链。注意，这里的付款凭证可以是比特币的链上直接支付（假如合同以比特币为计账单位的话），由于比特币乃无第三方的点对点支付，因而无需再提供支付凭证。当然实际的买卖可能更复杂，比如先签署定金合同，或房屋交付验收合格后再支付尾款，这些可程序化的步骤，均可通过比特币的智能合约设定多个 Tx 交易来完成。 近半年来，BSV 出现了好多天才级的应用开发，可以看到上述权利转移过程在代码技术的突破或实现。如化名开发者 unwriter 提出的 Planaria 及相关设计，可以将文档、视频、音频、照片等数字化文件及其哈希上链，并实现规范化索引与检索。已经有人通过上链照片或视频而收取 BSV，这实际上就是价值的转移（BSV 的支付）与权利的转移（观看视频或照片）互为对价在链上的实时实现。 另外以 James Belding 为首的开发者则提出了基于 BSV 的 Tokenized 方案。经由此方案，可以实现在链上发送合同、税务凭证、房屋产权证、电影票、车票、股票证券等功能。将 Tokenized 与 unwriter 的 Planaria 方案结合，完全可能实现在 BSV 链上转移如一项房屋买卖一样的权利凭证，从而实现权利转移。 虽然，BSV 的上述方案还处于初步，不甚成熟，但考虑到 BSV 从 BCH 分出不到半年，一切刚刚开始。只要方向正确，则最终总能实现在价值交换的同时，实现权利的转移，从而将现实的商业系统纳入 BSV。如此，可大幅度降低商业成本；如此，比特币才会进入大规模的商业经济。也如此，给人类经济和人类生活带来的影响不可思量。 比特币是权利救济系统 法谚有云，权利受到损害时，不能被救济的权利不是权利。当权利可在链上确认、登记与转移时，如果能够在链上救济，则权利在链上形成完美闭环。 法律上的损害通常包括两种，一曰违约损害，一曰侵权损害。救济亦通常包括两种，一曰自力救济，一曰法律救济。 就违约损害，通常以违约金救济。就自力救济而言，我能想到的一个链上方案是：预交保证金作为违约金存于合同公共地址，可双方共同密钥签名。当触发违约条款时，守约一方可扣除违约金，如对方不同意共同签名，则该违约金亦不得返还。违约金亦可存于第三方地址，如双方共同信赖的律师或仲裁机构，当违约事项发生时，则根据约定由律师或仲裁机构判定违约金归属。 当然比特币还可以构成其他许多自力救济系统，如针对股票作弊的没收、冻结程序、投票程序等等。 如不能自力救济而寻求法律救济时，则一切发生于链上的双方交易记录均已形成不可篡改的证据，此等效力极高的证据可直接进入法庭由法官权衡取舍。 比特币上的权利实现依赖与现实法律系统的紧密结合 比特币不是法外之地，一切现实法律均得适用于比特币网络，同时比特币网络上的一切行为亦得遵守现实法律。代码不能解决所有现实问题，当代码不及之处，得适用现实的民法、合同法、物权法、知识产权法等补足之。 当然，亦如前文所述，比特币区块链之数据记录不可篡改的时间戳特性，为律师、为法官还原事实，提供了最为舒服的证据，大大节省了法律和司法资源。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币与法律 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-laws/bitcoin-is-within-laws.html":{"url":"chapter-laws/bitcoin-is-within-laws.html","title":"法律中的比特币","keywords":"","body":"法律中的比特币 比特币是一个宏大的体系，背后几乎囊括人类的所有知识体系，就法律而言，也涉及法律的各个学科，从宪法、民法、刑法、行政法，一直到细小的门类，如隐私法、版权法、货币银行法、证券法、诉讼执行法等等，为什么会这样呢？很简单，比特币是全球账本。账本，大家知道，法律所调控的主要对象人类真实的社会、经济生活，而举凡社会、经济生活，小到一个家庭的孩子上学，大致国家的财政支出，无不需要账本，账本无所不在，所以比特币不是某个法律，而是法律的全部。这里要纠正一个重大误区，比特币不是作为货币发明，而是作为账本系统发明的，比特币是因为能够成为记账单位而成为货币，而不是反过来，先成为货币再成为记账系统。所以，不可篡改的账本特性，是比特币的最重要特征。今天讲四个法律问题。一、比特币作为物权对象的法律性质；二、比特币作为数据存储（全球唯一账本）的法律性质；三、比特币作为债权（合同）记账单位的法律特性：最后才涉及讲座题目 Tokenized，即比特币作为金融衍生物或其他价值衍生物的法律性质。我觉得这四个方面是比特币的四个最根本的法律问题，弄懂了，可以举一而反三。 比特币作为物权对象的法律性质 换成人话，比特币是什么？法律上的权利主要是两种，一是物权，即人对物享有的权利，这是静态权利；二是债权，即物在流转时（合同）人所享有的权利。一静一动，涵盖了人类的绝大部分民事权利。有人说，比特币是资产、是商品，也有人说比特币是货币或者虚拟货币，这都是经济学上的。按中国央行 2013 年的文件，比特币是商品。 依央行文件，比特币是商品，故在法律上比特币可以成为是物权的对象，也就是比特币的所有人（多数情况下即私钥持有人，至于私钥是不是证明持有人享有权利的唯一证据，是另一回事）对比特币依法享有物权，包括占有、使用、收益、处分四项权能。 这一点非常重要，纲举目张。可以有以下推论： 1、比特币不是法律上的违禁品，持有、转让是合法的。法律上的违禁品，包括禁止或限制持有并禁限买卖的，如枪支、毒品等，也有不限制持有但限制买卖、传播的，如淫秽物品，违禁品不受法律保护。但现行法律并未规定比特币是违禁品，反而有央行定性为商品，依民法之 “法不禁止则自由” 之基本原则，因持有、转让而获得的权利是保护的。因此有以下推论： 2、因侵权、违约、犯罪而导致的比特币损失应受法律救济。比如，因他人故意或过失损害电脑硬盘而导致比特币私钥丢失应获赔偿；因合同欺诈、一般违约导致的比特币损失应当赔偿；因犯罪行为而盗取的、抢劫的比特币应当返还受害人，等等。因此，目前中国有些法院的判例，认为比特币不受法律保护，而拒绝立案、或判决合同无效、或者不认定盗窃罪而认定为侵入计算机系统罪是不对的。不过也有不少法院的裁决是正确的。 3、涉比特币的法律救济时应以支付与损失额等量的比特币为原则，注意是等量不是等值，而以价值赔偿为例外。什么意思？偷了或骗了两个比特币，应当赔两个比特币，而不是赔相当于两个比特币的人民币或美元或其他，只有侵害人没有比特币支付时，才考虑等价赔偿。这涉及到比特币的一个重要法律和经济特性，它是总数恒定的交换媒介，是以数量进行计价的现金或商品，民法救济的首要原则是恢复原状，即权利弹回到权利受损之前。只有在不能弹回时，才实现等价赔偿；第二是因为比特币是种类物，是特殊商品，种类物间可任意替换，返还同等数量不存在法律障碍。 4、不提供钱包私钥，法律上怎么强制执行？有一个比较流行的观点，说比特币由持有人以私钥控制，只要不交出私钥，法律上难以执行，不能执行的钱成不了货币。首先，大家可以想一下古代借金、银或民间借实物如一块肉、一辆车（损坏了）怎么办？以他物抵偿；其次，想一想莎士比亚的《威尼斯商人》或中国的杨白劳，有钱而拒不还钱怎么办？不讲私刑，公法上可使用刑法手段，如我国刑法的拒不执行罪；第三，在技术上可不可以冻结老赖的特定 UTXO? 比如法院命令矿工对老赖的现有 Tx 拒绝验证，在 UTXO 花不出去的情况下，老赖不如还钱。这点可能需要全球司法合作，只要技术可行，法律上不难。第四，在区块链上将老赖纳入失信人黑名单，在一切皆可通证化时，火车票、飞机票、酒店订单都可以通证化，如此，老赖几乎寸步难行。比特币很轻易地就解决了失信人问题，以上几招，叫人不得不诚信，账户上有比特币的，可能就乖乖执行债务了。 所以，无论比特币是商品，是现金，是货币，还是别的什么比如证券，其实质都是法律上的物，权利人对其享有财产权，受法律保护。 比特币作为数据储存载体（全球唯一账本）的法律性质 不可篡改的账本是比特币最为重要的特性，回顾中本聪的发明历程，可以知道，他首先是为了寻找一种全球唯一账本的方法，然后才设想为了维护这个账本的唯一性、不可篡改，必须对记账人有所激励，才有了内生的记账单位比特币，你用比特币记账，又用它作为激励手段，钱就这样成了。所以，账本做好了，比特币才有价值，而不是相反。 比特币的账本包括两项数据，一是价值数据，即记账单位比特币的流水；二是与交易有关的数据。凡能交易的，凡可数字化的，如买卖合同、付款凭证、发票等等，皆可入账，也必须入账，这是包罗万象的，由此形成不可篡改的证据链，并与价值数据相互映证，构成牢不可破的权利链。 关于不可篡改的证据，今天讲两个问题，也是 BSV 与其他数字货币社区经常争议的话题：1、隐私、化名与匿名；2、非法数据上链的法律责任 1、隐私、化名、匿名 一个人拿 5 块钱到邻村一家不认识的小店买了一包老鼠药，后来村里发生了鼠药致人死亡案件。现场遗留物证明该药来自此店家。 1）除了店家，并无别人知道他买过鼠药，这是隐私。 2）虽然他与店家不认识，也未向店家告知自己的真实姓名及任何假名、化名，但警察找上门时，店家记得他的相貌、口音，身高，警察走访了很多人，大都描述了与店家描述相同的特征，最后锁定他为嫌犯。这是化名。 3）他买药时蒙着脸，弓着腰，戴着手套，躲避了所有的监控，未与店家有任何语言交流，警察找到店家时，除了有人买过药，店家无法提供任何有用信息，走访本村与邻村的所有人，警察仍然无法找到任何线索，成了悬案。这就是匿名。 比特币上的匿名，是指第三种情况，系统切断了与付款人身份关联的任何联系，无 KYC，无反洗钱措施，除了有人付过钱，系统没有保留任何与身份关联的数据。这种匿名就是蒙脸、弓腰、不做声、躲开了所有监控的购药人。正常的人类社会会允许这种货币么？ 进一步，匿名系统也使比特币不可篡改的证据特性荡然无存，毫无意义，因为再多的证据，但无法最终与人关联起来，也是枉然。匿名系统从根本上破坏了比特币的特性，不再是比特币，也不可能在正常社会、在大规模的商业中应用。 我们需要的是第一种和第二种情况，即隐私与化名。因为化名，除了买卖双方，第三方难以知道他买了什么，这就是隐私。又因为化名背后的与身份关系的信息，是保留于系统的，如购物发票、合同文本、行车路线、与他人的交易信息等等，有了这些不可篡改的数据形成证据链，足以相互映证而追踪到违约、违法及犯罪者。而普通人要调取这些证据并形成证据链，则需要付出极高代价，故隐私也得到了保护。 故 CSW 讲，有私钥、有不同的钱包地址，足以保护隐私，是完全正确的。 2、非法数据上链的法律责任 需要明确的第一点是，人类社会的变化是渐进的，违法犯罪的意愿和行为不会因为区块链技术的出现而突然增加，也就是不会在已有近 20 年互联网经验的基础上突然增加，并且比特币区块链有不可篡改的证据追踪特点，客观上可以阻碍部分违法犯罪，因此，总的来看，不论技术，单论对人类文化、伦理、道德、法律的影响，不说进步，至少没有任何证据说比特币区块链是退步的，也就是从整体上，人类社会，无论哪个国家，不应当将比特币区块链视为违法大于利益，相反我们认为，利益大于违法，故比特币区块链从整体上将继续推进和发展。这是我们讨论下一个问题的前提。 第二点，比特币系统的参与者主要包括三方，矿工、应用层服务提供者和用户。与传统互联网相比，多出了矿工。就非法内容的上链，我开宗明义的认为，矿工没有责任，不是法律义务承担者。理由是，矿工只是对交易 Tx 打包上链，从技术上讲，其对 OP-return 或其他字段的内容不进行识别与解析，因此从法律上讲，矿工对上链内容在主观上属于无法预见、无法防范、无法控制，相当于民法上的无民事行为能力人。需要强调的是，非法内容的判定，关键在于对内容本身的认识是否存在主观过失，而不是该不该上链。该不该上链的问题已在前面第一点讲了，人类社会从整体上应当视比特币区块链比互联网更进步，应当推进，故不存在该不该上链这一原始问题。 第三，互联网上的 “避风港” 原则，适用于比特币的应用层服务提供者。什么意思？即法律首先推定网络服务提供者为无辜的，只要在第一时间发现有非法内容后及时作出屏蔽、删除等阻止或消除公开的动作，即为无责任。鉴于区块链不可篡改的证据特性，此类阻止或消除影响的动作极易在链上得到证明，非常方便打击违法与政府监管。至于如何屏蔽或删除，属于技术范畴，也有人认为，区块链上的数据只能屏蔽即阻止解析，不能删除。这个恐怕要看每个应用开发层的软件设计。不过在我看来至少屏蔽不难，因为比特币区块链的交易 TX 特征决定了每一个内容上链必伴随一个 TXID, 追踪到 TX, 也就追踪到内容数据。另外图像、视频、文字自身的特征性识别，也可以硬编码，都可以提前阻止非法内容。至于何为非法，则是更广泛内容，今天不讨论。也不排除，利益集团或大公司的公关性屏贴，总之太阳底下无新鲜事，互联网的一切，区块链上同样可以发生，只是不可篡改的证据追踪可以阻遏大量恶人。 曾有社区开发者提出，可以保留用户上链内容的主钥，方便在上链之前查看内容，以备监管之需。我觉得是多余，这相当于开发者提前充当了内容的审查者，属于自我审查、自我设限，何况权力都有滥用的天然趋势，一旦开发者手握此等权力，难免不被员工滥用。 第三点，用户是也是内容上传者的责任。好说，不可篡改的证据，逃无可逃。我相信，区块链上的非法内容一定少于互联网。之所以中国区的担心特别大，无非是囚笼惯了，天生的胆小。 比特币作为债权（合同）计价单位的法律性质 这个问题涉及到比特币作为交易媒介的法律定性，也与第四个问题相关，即与比特币相关的金融衍生物或其他价值衍生物如电影票、兑换券、彩票等等的法律定性。 这个问题各国都不知道如何回答，还在观望、研究。我只能谈谈我个人的观点。 比特币作为记账单位，位于三个地方，经历了三个步骤，对应三个法律与经济地位。也代表了比特币自创建到成为人类通用交易媒介（现金或钱或货币）的三个历史阶段。 第一阶段，矿工补贴。以矿工补贴 / 激励的方式记入每个区块的第一笔交易，没有对价，电费不构成对价，在法律上叫原始取得。此一阶段，比特币没有任何价值，包括使用价值和交换价值，因此在法律上不构成财产，不能对其征收财产税或流转税。但此一阶段，历时很短，只有 6 天，2009 年 1 月 3 日 - 2009 年 1 月 9 日，1 月 9 日，创世区块的比特币第一次被发送，并产生了第一笔以比特币计价的交易费，该笔交易费成为传送比特币这个服务的对价，由此比特币开始进入第二阶段，与交易发生关系，与人类关系发生联系。 第二阶段，矿工费。以 UTXO 形式记入区块链，也就是矿工地址，作为矿工处理交易的服务费报酬。矿工费在法律上的本质是合同对价，该合同属于民法上的射幸合同，在矿工与用户之间订立，即矿工经过哈希竞争，最快者取得处理用户交易的资格，并获得交易费的对价。矿工费在经济上构成比特币价值的基础来源，理想情况下，矿工费应当相当于矿工处理该笔交易的成本和利润，包括电费、硬件、软件、人员成本和矿工应获利润，如成本和利润以法币计价，则以矿工费支付的比特币数量的价值与该等法币的价值等价。此一经济学逻辑决定了比特币的法币价格，凡是超出此价格的均为投机，不能反应比特币的真实价值。按估算，处理 1M 容量的成本和利润约在 1 美元，也就是 BTC 的经济学价值在 1 美元左右。 此一阶段，有两个需要特别注意的点。1）矿工费的最低标准是以硬编码的形式编入脚本中的，即 1 聪 1 字节，非由合同双方与用户协商或竞争形成的，本质上属于格式合同，因此难以反映真实对价；真实对价要到第三阶段才能形成。2）也因为第 1 点，目前以比特币作为计价单位的矿工费并不能覆盖矿工的成本与利润，矿工是靠挖矿补贴维持，而补贴品的价格主要靠投机形成，故目前阶段的比特币单独作为矿工费的计价单位时，并不是真正意义上的通用货币。在会计处理时，只能以矿工的一般流动资产计算，而不能以现金资产计算。 因此，关于此一阶段比特币的税法处理，如需征税的话，我有以下观点，1）以法币计税；2）比特币系特殊的、具有一定通用流通价值的商品，介于普通货物与法币之间，故可用比特币直接征税，此类似于金银货币时代的以实物征税，比如中国古代长期以谷物作为缴税单位，此种征税办法，也有利于国库的比特币存储，因为不能排除比特币将来成为真正货币，这个可能性极大。 第三阶段，债权（合同）的计价单位。所谓债权（合同）的计价单位，即商业合同以比特币作为支付本位币，当此阶段来临时，比特币真正成为货币，那时以比特币计价的矿工费将由市场竞争产生，可以真实覆盖矿工的成本和利润。此阶段大规模来临之前，也就是国家尚未承认比特币为国家货币时，对部分采用比特币作为计价单位的商业合同，我认为可以用比特币作为征税单位直接征税，就是前面提到的相当于实物征税。 比特币作为金融或其他价值衍生物（Tokenized）的法律性质 比特币是现金，是物理性货币，发行速率恒定，总量恒定，不具有信用扩张能力，为满足现代经济和交易便利，衍生物也就是 Token 非常重要。我甚至认为，衍生物 token 是比特币进入商业化应用的基本前提，没有 token, 比特币进不了大规模的商业领域，也成不了交易媒介。 比特币的衍生物与现实经济一模一样，无非是金融类产品和各种各样的价值凭证，如证券（股票、期货、期权、债券、支票、付款凭证等），或者会员证、电影票、车票、购物券、游戏券等日常生活类。理解现实生活中的衍生物发行与流通，也就理解了比特币上衍生物的发行与流通。 目前能够发行 Token 的数字产品很多，ETH、EOS、BCH 等等都能发，技术本身不难。不过观察下来，我认为基于 BSV 的 Tokenized 方案最与现实经济与法律融合，是最能实现与成功的方案。Tokenized 的白皮书很长，我翻译都花了半个月，近 80 页，差不多是一本书的厚度。为简要说明，我以一个例子入手。 BSV 群的一位朋友想发行一个芒果币，可以赠送，但主要是购买，持有此币的人可以凭此换芒果，也可以转让。不过我宁愿称为芒果券，因为这不是币，币是有特定含义的，而是券。所谓币圏的说法也是胡扯，还有什么链圈，都是胡扯。没有什么币圈、链圈，币就是链，链就是币，无币无链，无链无币，只有一币一链，一个币就是比特币 BSV, 一个链就是比特币链或 Metanet。其他的所谓区块链，尽管去试验好了，最终归一。 现实经济的芒果券如何发行？ 首先，发行芒果券在法律上当然没有任何问题，是合法的，这个与市面上的美容券、健身卡、超市购物卡没有任何区别。我们国家有一个专门的法律规范这类发行。 第一步，得与客户签订合同。合同需列明芒果券的性质，价格，可转让的还是不可转让的，发券人的义务，比如凭券无条件兑换何种等级、何种季节的芒果，送货时间、退货条款，还需列明持券人的权利。这个合同在形式上其实就是一张芒果券，所有的权利义务均可写在券上，经双方签署而生效。所谓签署的方式，可以根据不同的通信条件而有变化，纸质、电邮、微信、私钥，在所不论。这个合同是有法律效力也就是有法律强制执行力的，如果任何一方违约，可以得到法院支持，比如强制按约兑换芒果、强制付款等等。所谓合同，就是具有法律执行力的契约，法律不能执行的不叫合同，那是黑市，丝绸之路，或闪电准备走的那条路。有真实的合同，是发行芒果券的基本法律条件，也是与非法集资、诈骗、传销等的根本区别。 Tokenized 从首页到最后无不在强调真实有效合同的重要性，整个 Tokenized 的技术架构完全是以《合同法》的规定为基础架构的。所以 Tokenized 提出，本协议的模型是 “信任而非验证”，所谓信任是信任 Token 的发行人，之所以能信任，根本原因在于合同是真实的，有法律约束力的，这是 Tokenized 区别于比特币的地方，比特币是电子现金，其模型是” 验证而非信任”, 也是 Tokenized 区别于其他 token 发行方案的根本之处。 在代码上，Tokenized 是通过 “合同操作” 来完成签订合同的，这一操作有三个具体动作： 合同要约 、 合同订立 、 合同修改 。每一个动作均是由智能合约的 “请求、响应” 机制完成的。比如 “合同要约” 动作，该群友在 tokenized 的智能合约上发起一个发行芒果券的要约（即 “请求”），该要约包括了前面列明的发行芒果券合同的所有权利义务条款，该条款也可通过 “消息” 动作发送，记载于 OP_RETURN 字段。发行人以一个标准的比特币交易 Tx 向全网广播，收到该请求交易的用户端智能合约作出接受或不接受该要约的反应 (即” 响应”), 法律上叫承诺，这个承诺或响应亦是以一个标准的比特币交易 Tx 广播的。收到响应的发行人智能合约如果同意这个响应，双方进入下一个阶段，即合同订立，主要是签名（私钥）等。发行人签好名后，再以 “请求” 交易的方式广播，客户收到 “合同订立” 的请求交易后，如同意则签名，再以 “响应” 交易广播，至此双方合同订立完成。如果任何一方对芒果券的合同条款存在异议，则进入第三个操作 “合同修改”，合同仍然通过双方的 “请求” 和 “响应” 机制来完成。 第二步，合同订立完成后，双方进入合同履行阶段，即一方交券，一方交钱。Tokenized 设计了两个操作，分别是 “资产操作” 和 “转让操作”。 “资产操作”，简而言之，就是创立一个芒果券，包括三个动作，“资产定义”、“资产创设” 和 “资产变更”。经历这三个动作，一个芒果券就定义好、也发行好了，再进入下一个操作，即转让芒果券，Tokenized 将 “转让操作” 分为四个动作，“发送”、“交换”、“互换” 与 “结算”。以上名词，顾名思义。这里的互换，指原子交换，主要用于两个通证之间的直接交换，比如我以芒果券换你的美容券，如这位网友没有设计与其他券交换，则只需要动用三个动作，“发送”、“交换” 与 “结算动作”。 有了上述两个阶段，通常的一个发行芒果券或通证的法律行为结束了。但 Tokenized 没有止于此，如果在履行中发生违约，或这个群友发行的芒果券根本就是一个骗局，怎么办？Tokenized 充分考虑与现实经济、法律的结合，设计了第三步，即 “执行操作”，包括四个动作，“命令”（一般是执行法庭的冻结或解冻命令）、“冻结”、“解冻”、“没收”。Tokenized 的设计是，以上四个涉及资产丧失的动作可由法庭发出命令，而执行者是 token 的发行人，兼顾了政府和发行人的利益。这个设计非常重要，因为如果政府不能对涉及违法、犯罪的 token 行使冻结、没收等权力，基本上不会允许该等通证的发行与流通，持证人的财产权也无法得到现实的法律保护。 Tokenized 在设计上还有一个非常重要之处是，它的智能合约是链外执行的，它将纷繁复杂的现实合同按合同法分解成几个基本动作，以不到 10 个标准化的比特币交易 Tx 来完成，在主链上运行的只是标准的比特币 Tx，大道至简，从而实现了以 Tx 驱动万物，可谓一根杠杆而撬动了地球。这正是中本聪原始设计的精妙之处，_unwritter、Belding (Tokenized 的设计人，据信是在 CSW 的指导下) 等人都充分理解了中本聪的精髓。引用一段 Tokenized 白皮书的原话：“ 通证化（Tokenized）并不掩饰它的设计选择是使用链外智能合约，并尽可能多地处理和使用链外数据。只有这些数据足够多时，才能确保产权被确认，权利被行使，并记录于链上。” 可怜，ETH 的设计人小 V 误以为比特币的脚本图灵不完备，误以为比特币实现不了智能合约，没有理解中本聪的精妙，而另外搞了个运行智能合约的 ETH,ETH 的设计核心是主链即 VEM 直接运行智能合约，大家可以想一想，现实的合同多么复杂，不是只有发币、骰子这么简单，一个船舶运输合同，一个建筑合同可能多达几百页，涉及多方当事人，多种法律关系，代码如何运行，计算机如何计算？为了今天的讲座，我又专门看了下 ETH 的白皮书，其能实现的功能主要列了三个：发币、身份及信誉系统，去中心化自组织，此外还有点对点赌博、预测市场，没了。ETH 需要每个节点也就是主链运行智能合约，所以它的智能合约也只能用于发币这种极简单功能，再复杂点，没办法了。不要说扩容，与真实经济也无法联系上，ETH 及其他相关币种成为骗子的天堂是内在必然。与基于比特币的 Tokenized 没有任何可比性。比特币的主链只需运行标准化的 Tx, 无需运行智能合约。 问答环节： Q: 刘律师，tx 驱动万物可以再解释一下吗？ A:TX 驱动万物，比如说，Planaria 就是这样的，你上传一个文件或者是一个图片，都是 TX 来完成的，这是标准化的比特币交易，文件数据存于 OP_RETURN， 与 tx 交易同时发出，存于链上，但用终端浏览器解析。合同交易也是这样子的，与合同有关的原始材料存于 OP_RETURN ，而决定合同性质的几个关键法律特征以 tx 来完成，比如合同订立，合同履行，合同结算，这样以 tx 为核心，链上数据与链外合同相结合，实现 tx 驱动合同。而合同就是人类生活的全部，几乎无所不合同，比特币因为链上不执行合同内容，所以它可以在链外处理任意合同，从而实现 tx 驱动万物 Q: 提问，比特币是商品的话，将来币价大涨后卖出是不是会有巨额的增值税？可现在购买的比特币也没有发票啊。 A: 所以比特币最好是花费，而不是换法币，不过中国对财产转让主要限于房产等大宗商品，股票转让只征印花税不征转让所得税。 Q: 感谢刘律师的翻译贡献，以及精彩的分享内容。我的问题是这样的：目前法律界，对于用 Tokenized 等进行 token 发放方案融资的行为，合法和非法的界限可能在什么地方？保护消费者 / 投资者的权益的法律依据是哪些？一个公司如何可以合法发放功能型代币？ A: 有真实合同、有真实商品或服务，或有真实权利如股权，就没啥问题 Q: 应用开发者技术上可以实现对数据的屏蔽，但不能删除；权力都有滥用的趋势，比特币怎么限制权力的滥用，提供更多的自由呢？比如 Memo 对所有人屏蔽某条消息，和删帖好像也没区别。 A: 如果是非法信息，Memo 对所有人屏蔽没问题。另外 Metanet 是竞争的，内容服务提供者不会只有 Memo 一家。总的原则，上链不审查。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 法律中的比特币 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-laws/consensus.html":{"url":"chapter-laws/consensus.html","title":"乌合之众的共识","keywords":"","body":"乌合之众的共识 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 乌合之众的共识 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-laws/anarchism-and-utopia.html":{"url":"chapter-laws/anarchism-and-utopia.html","title":"无政府主义与乌托邦","keywords":"","body":"无政府主义与乌托邦 加密无政府主义的渊源 不少人认为，比特币的发明背景记载于 2009 年 1 月 3 日的创世区块，“英国财政大臣正处在拯救银行的边缘”，即中本聪意图发明一种能够抵抗政府审查，进而反政府、反银行的非主权、私人货币。这也使得比特币诞生初期获得了不少无政府主义者的青眯。 这种加密无政府主义起源于密码朋克 (Cypherpunk)，它是许多密码学先驱开创，秉持很积极的用技术为世界带来更好的改变的观念。Tim May 又在密码朋克的基础上提出了《加密无政府主义者宣言》，主要主张是保护隐私，利用密码技术一起捍卫隐私。做出贡献的方式，就是用代码去构建。 “写代码，是密码朋克的使命。我们深知，总要有人写软件来保护隐私。只有我们亲自动手，我们才能拥有隐私权，我们定会开发这样的软件。 我们将要公开发布我们的代码，让密码朋克战友们能够使用软件。 我们的代码，对全球所有人免费。 如果你们要封杀我们所写的软件，我们也毫不在意。我们清楚，软件是无法被销毁的，彻底的分布式系统永不停机。”—— 密码朋克宣言 当时正是 1984、美丽新世界担忧最为剧烈的年代。密码朋克们抵抗强权统治，寻求个人们自由，其秉着 “用加密技术构建网络隐私‘乌托邦’” 的理念，捍卫着互联网隐私和通信安全，也推动了相关学科和技术的发展。 但是很不幸，一些人走向了无政府主义的极端。朋克文化裹挟着言论自由、药品和性解放，不断拓宽 “密码朋克” 的行为边界。Tim May 在《Untraceable Digital Cash, Information Markets, and BlackNet 》一文中，就已经清晰地表达了对犯罪的接纳。加密无政府主义逐渐发展为一个以反对一切国家秩序，却又对于犯罪十分包容的集合。恐怖主义、儿童色情、洗钱、勒索…… 这些犯罪的行为成为了数字货币最初的支撑，并在 BTC (Bitcoin Core) 上获得了变现的渠道。 这些黑产也阻碍了比特币的大规模商业使用，阻碍了比特币走向光明的世界。其实本来这是一项能大规模商用，带来很多价值和积极改变的技术，在过去的十年里，因为和犯罪牵扯不清，比特币失去了这个机会。 当 BSV 去构建秩序，去引入一些现实主义，去通过设计的监管，来更好的治理犯罪的时候。这些打着密码无政府主义旗号的人，就不乐意了。就比如 CSW 诉诸法律，就激起了充满无政府密码主义的所谓币圈的不满。“你竟然叫警察！” 是的，BSV 不但是真正的比特币，也是真正的未偏离密码朋克本心的数字货币。 隐私和匿名 我们来看一下密码朋克宣言中对于隐私的观念：【电子时代，对于开放的社会而言，隐私是必不可少的。隐私并非秘密。 隐私，是你不希望全世界都知道的事。而秘密，是你不想任何人知道。隐私是个人的一种权力，让他可以有选择的对外部世界披露自己的信息。】 我们再来看一下 BSV 对于隐私的理解：【比特币有新模式。新的隐私模式非常简单。交易都是公开的，因为它们不与你的身份相连，也与任何特定的商家无关。重要的是，商家也希望保持隐私。竞争对手分析公司的能力导致商家建立多个地址，就像用户一样。】—— CSW | 比特币的隐私模型 在公开的社会中，让人有选择地对外部世界披露自己的信息。这是隐私的定义。但是密码无政府主义已经走到了不想让任何人知道，希望构建一个完全私下而非公开的世界。 当然很可惜，密码朋克宣言在提出时，并没有辨析 “化名” 与 “匿名”，在当时看确实没有太大差别，但是后续的影响，却显现了出来。 许多匿名币试图构建一个非公开的，交易处于私下而隐匿的链。并使得交易历史无法被核实。这种情况，实则，用户已经没有了分辨币的来源是否是赃物的能力。 要辨析的一点是，匿名，是一种权利。但是强制匿名，是对权利的侵犯。 一个必须要接受犯罪的社会，一定不是一个自由社会。 迷途重返 在很长一段时间里，中本聪是想把比特币与犯罪与黑产切割开的，可惜并没有成功。黑色产业迅速地和匿名数字货币走到了一起，不论是从技术上，还是观念上。Bitcoin Core 的开发者无法阻止这一点，因为他们是密码无政府主义者。这也注定它无法进入光明的世界。密码无政府主义影响下的匿名币会不断出现，犯罪也是始终伴随着人类社会。 这种发展理念上的根本不同，带来了 BSV 与所谓币圈的冲突，最近这种冲突比较明显，未来，这种冲突还会更多。但是我始终相信，一个自由的社会不是包容犯罪的。世界不完美，有很多东西需要妥协和构建，但是我们走在正确的道路上。 比特币的发明目的根本不可能是抗审查。采用 PoW 去中化心化只是一种手段，一种解决计算领域中拜占庭将军信任的新颖手段，其不是为了抗审查。在现实法律中，比特币不可能抗审查。相反，为了应对审查，比特币的区块产生机制甚至设定了双哈希算法，通过双哈希，部分国家可以对具有特定内容的区块进行过滤。另外，在特定比特币被追踪到用于犯罪如洗钱、贩毒等时，可以被没收，此等案例已屡见不鲜；又，如果矿工参与或帮助洗钱等活动，则该矿工的计算设备甚至可以直接被没收，而矿工本人则可能追究刑事责任，此时更不存在所谓抗审查。 对于政府的此等审查，Bitcoin Core 所谓人人持有一份账本的树莓派思想是完全无能为力的。 一句话，Craig 博士认为，比特币从一开始其设计目的就是在法律范围内活动，其从未将之设计为密码朋客产品，从未将之设计成在法律之外、在暗网之上运行。比特币不是反政府，而是让政府更诚实地工作；比特币不是反银行，而是让银行更高效、更低摩擦地工作。 比特币的理想世界 通过区块链技术的推进，我们可以抽掉很多事物存在的根基。用更好的东西去替代它。然后拓展到链下的治理。BSV 的无限扩容，给了其存储的能力，不仅仅是存储本身，更是拓宽了不可篡改的记录的范围。其能覆盖到更多的东西，更大的范围。而记录和公开，就像阳光一样。阳光存在的地方，犯罪就难以存在。公开的阳光会消除治理中的暗箱操作，永久追溯，责任清晰，手握权力的人就很难做坏事。 BSV 的理想世界的达到，并不是无政府的，而是用阳光编织一个笼子。 你，我，构建者们，用代码，去一件事一件事地创建阳光。这一道道阳光就会逐渐汇聚成笼子的筋骨，而最终，随着技术的更加完善，一切得以被更好的东西所竞争，所取代。 而区块链上更是使得大范围的用脚投票的直接民主成为可能。民主和自由是矛盾的，不过在用脚投票上，二者终于能够融为一体。这就是我所理解的 BSV 的理想世界了。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 无政府主义与乌托邦 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-laws/anonymity-and-privacy.html":{"url":"chapter-laws/anonymity-and-privacy.html","title":"匿名与隐私","keywords":"","body":"匿名与隐私 比特币的隐私与匿名，一度是比特币发展中的焦点问题。尤其是丝绸之路等非法网站被打击之后，如何增加交易中的匿名性更成了部分开发者的目标，比如隐藏交易者地址与身份的闪电网络，比如隐藏交易者钱币来源与去向的混币技术等等，甚至出现了许多以匿名为直接目标的数字货币，如门罗币与 Z-cash 等。随着欧盟、美国及世界诸国相继将数字货币纳入金钱处理监管，纳入反洗钱法监管，隐私与匿名的争议将越来越激烈。那么法律上如何看待隐私与匿名？ 隐私与匿名的区分并非字面上看起来那么容易，涉及非常复杂的人类学、社会学、心理学、政治学、经济学、法律等背景。即便中本聪在发明比特币之初的文字中，也经常混淆隐私与匿名的区别。 为了正确理解隐私与匿名，我们首先思考一下隐私与匿名所要保护的对象是什么？对，个人信息，无论是自然人的还是法人的不愿公开的私人信息。进一步，哪些私人信息可纳入隐私或匿名范畴？这个就非常复杂了，不同国家、不同民族，甚至不同人群，都有各自独特的对个人不愿公开信息的理解，比如有人认为电话号码不宜公布，而有人则直接在网上公布自己的电话号码，住所也一样，即使比较隐私的疾病信息，是否归入隐私，不同人也有不同理解，所以何为隐私或匿名需要保护的内容，千人千不同，那么法律上有最低的保护水准或保护内容么？仔细想想，除了不愿公开的主观意愿，客观内容真不易确定。但是，为了分析比特币的隐私与匿名，我们可以采用一种光谱分析法。 对于个人信息的披露，我们可以分成两个极端，位于光谱两端，一个是绝对不公开，即完全匿名，即一切个人信息均不作任何公开；一个极端是绝对公开，即完全透明，即一切个人信息在主观或客观上不做任何保护，任何第三人均可轻易得到或被给予他的包括身份、财产等隐私在内的全部个人信息。凭常识可以判断，对于绝大多数人，不可能做到或愿意完全匿名或完全透明，而是处在两个极端光谱之间，有些人、在有些场景可能愿意披露的个人信息多一些，更靠近完全透明一侧；有些人、在有些场景可能不愿披露的个人信息更多一些，更靠近完全匿名一侧。 总有一些人或者政府希望获得或窥伺他人更多的个人信息，也总有人尽量保护自己的个人信息不被他人侦测或获取。故整个人类社会，隐私的获取与保护是处在一个动态平衡之中的，平衡点就在上述两个极端光谱之间移动。当平衡点大致稳定而不经常移动时，我们可以说这个社会的秩序是稳定的，如果平衡点经常在移动，可以说这个社会是处于剧烈动荡之中，比如战争状态、动乱状态或紧急状态，此时个人信息常被非自愿披露。 所以，比特币作为一种前所未有的发明，作为一种以全球通用货币为目标的发明，作为与未来整个人类、每个人、每个政府可能息息相关的发明，其必须在隐私保护方面找到一个最佳平衡点，以使社会秩序大致稳定，而不发生重大偏移。 完全匿名的比特币显然不可取，以完全匿名为目标的数字货币显然也不可取。这里的完全匿名与上面提到的光谱一侧的完全匿名在货币场景下是同一个含义，意即这种货币的转移和存储完全对其他所有人、所有机构屏蔽身份信息，也就是这个人完全在黑暗中交易，甚至连交易对手也不知情。就人类生活与法律经验，完全匿名的数字货币处在处在光谱的极端一侧，不可能为绝大多数人选择，不可能成为通用货币，至少法律就第一个不允许。比如已经生效的美国金融犯罪执法网络的条例以及欧盟反洗钱指令均要求数字货币的传递与托管机构必须符合反洗钱法，意味着它们必须执行 KYC 和大金额的报告制度。仅凭法律这一条，完全匿名的数字货币已难以生存，更遑论人类几千年来基于诚实的生活经验。 但同样，比特币也不能处在完全透明的光谱一侧，否则无人敢进行比特币交易，因为一旦交易，个人身份便被锁定，毫无隐私可言。所以，比特币必须在完全透明与完全匿名之间找到一种保护隐私的方法，以满足不同地区、不同人群的隐私保护需求。 隐私和匿名之间有一条不能跨越的红线。但很少有人能够理解匿名与隐私并不等同。比特币的发明人非常天才，他找到了人类货币的可追踪性这一本质特征，将光谱的平衡点建立在比特币的可追踪性这一特征之上。利用比特币的化名设计充分保护了用户隐私，而又不陷入匿名的深渊。创建比特币交易或地址、钱包时，不需要提供任何个人信息，但交易信息是向全网广播的，因此所有交易记录细节都是公开的、而每一笔交易都可以追溯。 比特币的可追踪性包括两个重要特征，缺一不可：一、任何比特币交易包括与之相关的发票、合同等，均记录于链上，实现货币和交易的可追踪性。二、任何比特币交易包括与之相关的发票、合同等信息数据均以特定算法以私钥加密，除非特定人，其他任何人均无法访问，从而实现隐私性。更进一步，为了防止大数据追踪，采用一次交易一次地址的算法，隐私得到更强保护；又为了适应不同主权国家、不同地区的要求，采用区块的双哈希算法，据此可以过滤特定交易，实现了隐私与现实法律的平衡。 故，比特币在最底层的协议层面，实现了隐私与匿名之间的最基础平衡，可以确保社会秩序不致大幅波动。但正如前文所说，隐私在本质上是个人保护意愿及能力与他人或政府窥伺意愿及能力之间的一种动态平衡，当比特币在技术层面实现了最基础的平衡之后，至于现实中的真实平衡点。则有赖于在应用层面各方之间的博弈平衡，比如仅 KYC 一条，不同国家、不同地区甚至不同交易机构就可能有不同规定，有的可能只要身份证认证，有的则需要视频认证，有的则可能需要生物学认证等等，这些属于不同人群、不同国家在比特币最基础平衡基础上形成的各个现实法律下的新平衡。 匿名交易对普通人无益，他们有利于腐败的政府和犯罪份子。更糟糕的是，匿名系统在法律上是不能被执行的。这使得它们作为货币体系以及合同互换的方式这两种关键用途都被削弱了。 一直以来，阳光原则让我们得以发现欺诈和不诚信交易。匿名货币系统使得类似安然这样的组织以一种永远不会被抓现行的方式扩展业务。匿名货币使得政府进行买卖，贿选，购买军火等，而且还还拥有豁免权。匿名并不能带来自由和开放交流，这是化名和隐秘通信的功劳。 隐私很重要，但匿名却并非如此。任何不理解这一点的人都应该阅读柏拉图的《理想国》，特别是第二册中的 “盖吉斯的指环”。 而匿名将会导致一种正义决定于强者的利益的体系。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 匿名与隐私 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-laws/data-carrier.html":{"url":"chapter-laws/data-carrier.html","title":"数据载体","keywords":"","body":"数据载体 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 数据载体 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-laws/myth-of-permissionless.html":{"url":"chapter-laws/myth-of-permissionless.html","title":"无需许可的迷思","keywords":"","body":"无需许可的迷思 在比特币的世界里，有许多错误的叙述和迷思。这始于去中心化的迷思。在这种迷思里，被误导的用户和对比特币感兴趣的人群被推销的错误观念是，所有用户都需要运行全节点。 事实是：用户不需要也不应该验证任何东西。这是整个事情的重点。这个概念本身就存在缺陷。在运行软件时，你在自己的系统上无法确保任何事情。既不能确保软件的完整性，也不能确保网络的连接状态。比特币是一个竞争性的系统，它从来都不是为了与去中心化扯上关系——它是一个不容易被贬值的诚实货币。 上述对比特币进行攻击的迷思是一种社会主义性的癌症，现在这种迷思已经转变成了一种新的集体主义谎言：关于“无需许可”的迷思。 这是最阴险的，因为推动这种做法的人是狡猾的，他们提倡自由主义，然而，在这种“无需许可”的迷思中，却促使了财产权被剥夺。是的，就是我说的那样，他们试图去摧毁财产权。因为在有财产权的情况下，就不会有“无需许可”这种事情。“无需许可”是一个与比特币格格不入的概念，必须阻止它在社会中蔓延。 你不能像某些人说的那样肆意妄为。你有权利去做任何让你愉悦的事（只要是合理的不侵犯他人的行为就可以）。 在进行比特币开发时，你无权更改代码。你可以提议你所喜欢的，但是进行选择的是矿工。这很重要，因为进行投资的是矿工，而不是开发者。 你甚至没有权利在比特币中开发一种“无需许可”的证券，更不用说任何其它基于区块链的系统了。 这里所犯的错误是，有人认为美国证券交易委员会（SEC），英国金融行为监管局（FCA）及其他政府机构并没有采取行动……他们只是尚未采取行动而已。 ICO**和代币** 此处的迷思和谎言是“比特币是去中心化的，所以这使它与众不同。”这完全是放屁。在任何证券发行中都不存在去中心化这回事。所有的ICO与过去的ICO都是一样的。（CSW这里的第二个“ICO”可能是笔误，他想说的可能是“所有的ICO与过去的IPO都是一样的。”——译者注） 一个团队寻求筹集资金 向投资者发行一种证券 投资者向该筹资团队转移资金 这既不是去中心化，也不是什么新鲜事。ICO只是使用代币作为证券标识。这被错误地当成一种新事物推销给律师和政治家，但EDIFACT和许多其他代币系统几十年前就有了，并且现在已经被用于（且还在被用于）证券和交易。 事实上，比特币是一个由矿工进行结算的点对点的系统。区别在于结算，而不是交易。 一个公司进行ICO的销售时，现场推销点，网站或交易所，还有就是一系列误导公众和促进欺诈的托们都是中介。 幸运的是，比特币不会忘却任何事。比特币的美妙之处在于这个账本是永存的。你的欺诈行为不会消失，监管机构可以在多年以后拿着证据找上门来。 事实上，互联网并不是无需许可的。它其实是只要你遵循协议，你就可以获得许可。这同样适用于比特币。如果你遵循网络规则并且并不寻求改变它们，（这里的原文是“If you follow the rules of the network and do not see to alter them……”，这里的“see”联系上下文应该是“seek”,应该是CSW笔误。——译者注）则你可以在其上进行构建。注意：前提是“如果你遵守规则”。 将这个原则应用于**ICO**领域 我们将此分析扩展到ICO和代币领域。说虫洞等协议是虚假宣传的原因是，他们认为证券代币是“无需许可”的，但是这一种谎言，是一种虚假陈述和诈骗行为。还有人谎称你可以不受法律约束而筹集资金，即利用欺诈从他人处获取资金，而且认为这是没问题的。 推销 在ICO的世界中，我们看到那些告知人们月度山寨币或月度代币信息的投资讯息和网站的数量在增加。这种普遍行为是为了让那些早期购买代币的人攻关交易所和相关网站，然后利用社交媒体和炒作人群来拉高价格——这种做法被称为“倒卖证券”。很少有人明白，即使网站上隐藏着一个模糊的“利益冲突披露”，那也是不够的。 要了解更多这类形式的犯罪，我推荐你去看美国证券交易委员会在从2004开始对Thom Calandra(MarketWatch)所采取的行动。 此处没有任何需要对法律进行修改的地方。在该案中甚至没有注明结算的方式。因此，是否使用了区块链是无关紧要的。如果你“倒卖证券”，相关方面就会采取行动。同样的，如果你进行筹资，你将面临诉讼。即使不是立即面临诉讼，4-5年之后仍有可能面临诉讼。 比特币的记忆力可好了。 关于**“实用型代币”**的谎言 事实上，意图在法律意义上很重要。当你创建一个所谓的“实用型代币”的时候，但却明显是在创建一个筹资的工具，那么它就是一个骗局。在法律上，骗局是指某物不是其所声称的东西：如假冒，欺诈或欺骗。 代币是作为商品或服务（例如电影票）的直接销售要约而发行的，此处不会看到像ICO的一样销售形式或筹集资金的方式。 ICO中被设计为可交易的数字代币可能构成： 股份——这赋予或代表了一个公司，信托或合伙企业的所有权权益，并且通常与公司中代币持有人的有限责任相关联。 证明发行人债务的公司债券。 一份，例如单位信托中的一份，或一份获得此类权益的权利。 在确定是否涉及证券发行时，法院将调查的不仅仅是交易的形式。法院将调查交易的实质内容。交易用语不会被忽视，但也不能决定交易的性质。 基本的一点是看你是否拥有一个用于标记销售的代币，或者它是否可用作可交易物。如果可以利用该代币进行投机，则它不是实用型代币。这是法律上对骗局的直接定义。它显然是被设计为一种投资工具。 一个实用型代币的例子是公交车票。一张被售出的票不能被交易并能换取一项服务。公司可以直接发行这类代币，“代币交易”的概念是没有实际意义的。其并没有中介的二级市场，也没有投资者对票价进行投机。你将拥有一个商品或一项服务，然后代币就被用掉了。 这就是比特币的目的，比特币是一个没有中间人的实用型代币。而这是其他项目试图忽视的。在以太坊，虫洞和相关的骗局中，我们看到了对不受法律约束的实用型代币的神话的推崇。 这只是一个谎言。比特币不会规避法律，除了被用于交换之外并不作它想，并且它决不需要增添任何东西。证券就是证券，否则就是一种误导和/或欺诈行为。 证券化与**ICO** 公司应收账款的证券化通常与出售现有资产池有关。近年来，一种涉及出售交易的“未来现金流”的替代方法被施行，并且更接近于大多数ICO或说首次加密币发行（Initial Coin Offerings)所采用的方法。 “未来现金流”的证券化是指由运营公司（ICO的发起人）将未来获得的收入用于“支撑”代币的销售。 这可以被认为是大多数（被误导性地称为）“实用型代币”ICO所处的境地，其中公司以出售未来产品为掩饰并利用首次加密币发行来筹集资金。其中明显的风险是运营公司是可能破产的。迄今为止，98％的实用型代币ICO都失败了。（该链接的标题是99%的ICO已经失败了，可能是作者打错了。——译者注）或者说，公司可以“转变公司目标”或由于其它原因而不能将实用型代币所代表的产品进行交付。这种业绩上的失败将导致公司处于的境地是，其已经收到理应交付的商品或服务的付款，这是可以达成共识的，但是该公司的原则却从未有明确的意图要提供货物或产品的交付。我们还注意到，与标准证券化流程不同，ICO中的公司很少使用单独的SPV（特殊目的公司）来分离债务。 在本文中，我们将把ICO分别置于SPV(特殊目的公司)以及由公司发行的直接债务工具这两种情况下来考察未来应收账款的本质，还将比较相关的破产法与现存应收款的相关法律，并从英国法律的角度对ICO的性质进行建模。 我们注意到，多个司法管辖区的法律下，ICO作为国际证券化交易都会出现问题，但SPV或机构投资者却不能获得什么好处。这样做的直接后果是，对于涉及英国投资者的ICO，英国法律将根据CCA（消费者信贷法，见脚注1）而不仅仅是适用发起人所在地的法律（即使法律是在合同中明确规定的，且条款中明确规定了国家管辖权）。 证券化的常用方法是，将尚未到期但是处于明确合同下的欠款金额做一个基于SPV的证券化，其中所包含的是产品交付后的付款索求发票。 发票涉及对客户的付款义务。 应收账款特点是它是未来应收账款，卖方在证券化截止日订约以便在未来可能的某时点将其出售给SPV。 这可能导致公司拥有“未来应收账款”，在发票实际开出之前通常不会得到偿付。 （证券化这几段是依据我有限的金融知识进行理解和翻译的，理解了很久，然而依然可能不太准确，如有专业人士，欢迎纠错。——译者注） 我们在ICO市场中所看到的是使用债券或公司债券作为规避现有法规的方法。 关于**“现存应收款”**的英国法律 英国法律下的让渡可以是合法让渡或公平让渡。合法让渡在ICO中不是一条有效和可用的途径，故不能在ICO中使用，因为除其他要求外，它们还要求知会债务人，以使让渡生效（脚注2）。 无论知会与否，对公平让渡所产生的影响都是不确定的： “所必需的是，债权人应明确表明其不可撤销地转让应收款的意图。”（脚注3） 作为一项公平让渡，即使没有知会，实用型代币的出售和分发也可能对让渡人及其无担保债权人有效。这将受到伦敦证券化市场的中已认可的与优先权及相关事项的既存意见的限制（脚注4）。 我们进一步注意到，公平让渡中公平指的是应收款需要以书面形式强制执行，而不是应收款本身的让渡（脚注5）需要以书面形式强制执行（脚注6）。 我们进一步注意到，合法让渡比起已知会的公平让渡来说唯一的优势是，从程序上来说，受让人无需联合让渡人一方便可对债务人提起诉讼。 因此，我们将使用英国法律中关于公平让渡的转让条款对可交易实用型代币ICO债务让渡进行分析。 未来应收账款与**ICO** 在对ICO要约和未来应收款转让的一般性分析中，我们可以明确地说，由于在所谓的让渡时未来应收款并不存在，所以该让渡不是完善的。我们可以看到，作为一项未来应收款的所谓的转让，当有对价进行支持时，它可以而且应当被视为一种让渡应收款的协议。 如果ICO是要组建一个有效的公司（如果它原来没有公司），并完善应收款使其完全存在，我们将把所述应收款视为已让渡的权益，由此产生的公平让渡应当被支持，且对抗让渡人或其无担保债权人，就好像它在转让应收款项的协议签署时就已生效（脚注7）。这将适时地受到优先事项或其他事项的某些或完全限制（脚注8）。 从这个意义上讲，我们可以看到ICO代币的创造是一种对未来销售进行证券化（但不受监管）的债务工具——交易的各方的角色是：ICO者是可出售债务工具的创建者，代币持有者是债务工具的购买者。 通过这种方式，我们可以看到ICO发起人发行的代币转变为了一种公平债务，以一种易于电子转让的方式进行了证券化。 根据英国法律，其结果是产生了消费者债务义务，赋予了CCA各方其应有的权利（脚注1）。 此外，代币销售如果亏本，将使新购买者有权去索回原始投资而不是已贬值的债务市值。 请注意，这类似于在市场上购买“不良债券”或证券。持有人有权就面值而不仅仅是购买价值提起索偿诉讼。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 无需许可的迷思 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-laws/pure-capitalism.html":{"url":"chapter-laws/pure-capitalism.html","title":"纯粹的资本主义","keywords":"","body":"纯粹的资本主义 只有放开竞争，我们才能得到最好的比特币。 听起来很疯狂吧？如果你意识到比特币之所以可行是因为它是一个经济系统的话，那就不疯狂。比特币中所有属于残酷的市场竞争的范畴内的机制都是可行的，而那些不属于该范畴的，则是不可行的。 安全性：矿工们在算力上进行无情的竞争。这可以防止 51％的攻击。比特币的安全性完全属于残酷的市场竞争范围，其结果是它切实可行且效果拔群。 网络连接性：矿工们在网络连接性上的竞争还远未到达激烈的程度（Joannes Vermorel 的 论点 令人信服，他认为 TB 级别的区块所需的带宽和设备也不会对小矿工造成很大的预算压力）。如果他们现在就很激烈地竞争了，那么这就确保了他们已经远远超前地具备了扩容到全球所需要的巨量通道。人为的区块上限阻止了彻底将网络连接性置于残酷的市场竞争之下，因此网络连接性还没有达到最佳的工作状态：显而易见的是，我们还有一些掉队的矿工（因为有些人在微不足道的 128MB 区块前面就畏缩了），他们还没有将网络基础设施升级到中等水平或者是没有相应的技术支持去做这些事。移除或激进地提高区块上限是激励矿工在个体层面升级的唯一方法（我的意思是避免搭便车者; 没错，一些积极主动的矿工可能会提前升级，但如果大多数人不参与，这便是一项糟糕的投资）。 节点代码：明眼人都能看出来现在对志愿者开发团队提供的节点客户端代码是有依赖性的，这种依赖性实实在在地补贴了那些不会写代码的矿工，使节点代码完全不受残酷的市场竞争影响，造成的结果就是节点代码难当其任——你说惊喜不惊喜？“还需要做很多工作才能满足 128MB 区块的需求。” 这被视为不要移除区块上限的原因，但它是错误的。“我们不能提高上限，不然矿工将被迫进行工作！”这并非是讽刺的说法，这是没有意识到一些矿工被甩在了后面，而另一些矿工造成了这种现象，而这正是比特币所必需的运行方式。 有呼声说不要将节点代码的优化置于残酷的市场竞争这下，因为显然有些人认为这会产生 “致命” 的后果 - 这种社会主义思维方式认为安全带制造商之间的残酷竞争会导致安全带要了你的命。任何懂经济学的人都知道这与真相相差了十万八千里。 Core 式的社会主义者之所以进行这样的号召，他们的心态是“节点代码太重要了，不能留给市场，我们需要像撒玛利亚人一样好心的开发者为所有矿工提供这些服务，这样就不会使任何矿工掉队。” 倘若蠢行不受罚，终将蠢货遍天下。——赫伯特斯宾塞 同样，保护那些没有能力或不愿意适当优化其节点软件矿工的话，其最终结果是比特币里将充斥着非专业的矿工，这些矿工无法将比特币推广至全世界 如果没有升级网络连接性和代码库的激励，比特币关键的审核流程是缺失的，而这是一个将矿工们提炼成长尾式的专业人员所必需的流程，只有这样的专业人员才拥有快速且安全地驾驭这辆比特币列车所需要的一切技能，才能将比特币一路送达至十亿用户。 我在此向所有人提出挑战，任何人都可以来阐述在网络连接性和节点优化方面仍然对落后的矿工进行实打实的补贴（不是指协议优化，而是平行验证等技术）的情况下，比特币的专业化该如何进行？尽管看起来很痛苦，比特币扩容的唯一方法是建立在那些不作为矿工的破产后的躯壳之上的。那些讨厌鬼们别想上车。 这意味着与孤块战斗，即使每次是一点点。它意味对迅速扩容进行压力测试。虽然过快地淘汰过多的算力并不符合任何人的利益（算力变得太小），但是以一种比大多数该行业内专业从业者稍快但是可控的速度进行淘汰的话，却是有益的。事实上，正如 Satoshi 所说的那样，“它最终将成为数据中心和大型服务器集群”，任何人如果接受了这个观点，那么都不应该认为所需的改变是难以置信的困难的。 事实上，人们现在还在通过引用笔记本电脑节点的测试来反对 128MB，这才是真正的问题所在。尽管 Core 的全节点宗教信仰都是胡编乱造的，但是其仍旧阴魂不散。这也被称为 Blockstream 综合症，就像是斯德哥尔摩综合症的一种延伸（俘虏开始同情他们的劫持者）。 无论出于什么原因，批评者的说辞总会回归到，有些基础设施 “没有准备好” 移除上限，好像这是一件坏事一样。这明明是一件好事！ 首先，如果我们要等所有矿工都做好准备，那我们要等的时间可就长了。由市场决定的话，其正确的进路是在 51％到大概 90％的矿工准备就绪了之后就向前推进，这正是我们可以预期到的区块无上限之后的情况。甩掉少许而不是大批掉队的矿工这种激励措施是有利可图的（一次淘汰太多 BCH 算力的话，就给了 BTC 矿工算力攻击的机会; 从长远来看，它会鼓励专业人员的进场并替换失败的矿工，使 BCH 更安全）。 其次，“基础设施”这种整体僵化的提法忽视了使比特币运作的秘诀：矿工之间是相互竞争的。我们预计到了有些人是没有做好准备的！如果没有那些失败的矿工，比特币矿工怎样才能更专业？只有淘汰或改造落后者才能确保比特币最终拥有专业的基础设施。 这种审核过程是不可避免的，也是必不可少的，它必须应用于我们希望看到专业化的比特币的所有方面，包括节点软件。 现在撇开一个矿工用他自己的 0 费用交易填满他的区块的情况（这种情况的应对方式是，其他矿工拒绝包含太多 0 费用的低币龄的区块），GregMaxwell 的“大块攻击”，大矿工试图用超大区块来吓唬较小的（资本不足的）矿工，由于这些小矿工的网速慢，网络中有相当大一部分人无法处理这些区块，而实际上比特币正是以这种方式进行扩容的。 这不是攻击行为，而是压力测试，没有这种压力测试，比特币就无法扩容。他所谓的攻击行为其实是扩容的解决方案，根本不是问题。在比特币中是鼓励压力测试的，这种方式能够揭露那些虚张声势的懒惰矿工。你赌上一些钱来搞一次“攻击”，看看有哪些矿工是迟钝的，然后拿走他们的区块奖励。 迄今为止还没有矿工够胆去做这种事，但是他们马上就要做了，因为比特币在几年内将再次减半，到时手续费将不足以保证比特币的安全，那比特币就完了。正如大区块支持者对 Core 说的那样，面对迎面而来的火车，任何 “保守主义” 都没有逃生的空间。 最后，我留下一个思想实验。想象一下，比特币中的志愿开发者社区慷慨到令人难以置信，它为所有矿工提供 ASIC 设计，矿池软件以及各种算力优化，以至于矿工只需购买 ASIC 矿机并将其插上电就行了，其他的什么都不用懂，并且也完全没有必要自己创新 ASIC 设计，因为这些专业志愿者们在各个方面都更胜一筹。自然而然地，这种境况最终会因为像三星一样专业的选手进场而被终结。 由于得益于长时间而又自负的志愿者服务，安全在此被排除在残酷市场竞争的范围之外（一开始有志愿者是没有问题的，就像小孩并不是出生就是成年人，一开始就是需要被抚养的），这些矿工就会因为无资质，无准备，无法增强他们的算力而被三星摧毁，或者比特币可能是被某政府的 51％攻击杀死。 这里的重点是总会有一个成型期，然后是成年期。成长的过程就是一个对施舍的依赖越来越少的过程，并且越来越多地暴露于残酷的现实世界。比特币何时才能长大？减半对比特币的安全性做了时间限制，过度保护的家长（那些不想移除区块上限的人）- 表面上看起来是保守的 - 但是可能最终会使那些不顾一切的人 (Honeybadger) 在其象征性母亲的地下室里窝藏了太久以至于他不能完成他的使命。 如果你的回答是，“这些功能现在在任何客户端中都不存在”，我认为你误解了这篇文章的重点：再说一次，这是一件好事。让那些对简单的需求都无法胜任的矿工被淘汰吧。我们真地想要这些懒散的矿工吗？如果这是你想要这样的矿工，而你又是个开发者的话，那请你自愿为他们写代码。如果这你不想要这样的矿工，请说服他们来雇佣你。我认为这样的话工资会高得多。 如果你的回答是，“但这意味着一些矿工可能会意外地被孤立而且大喊犯规”，那么我要再次说明，这是件好事。创造区块本质上是一个投机过程。换句话说，这是一场赌博，这是设计好的。这就像凯恩斯主义的选美比赛，每个矿工都试图挖出可让他们获利最多的区块，同时还不能显著地增加他们被孤立的风险。用低币龄的 0 费用交易填满区块可能会让你被孤立。矿工没有义务事先告诉其他矿工他们对每个区块的选美的标准，尽管到目前为止他们还是告诉了其他矿工这些标准。矿工们总是可以以任何原因来自由地孤立任何区块。通常来说他们保持一致的，良好的广播规则是一种礼貌而非一种必须。防止普遍的混帐行为最好方式不一定是提前告知惩罚措施，但即使是这样，矿工也可以做到这一点（让他们自己去搞清楚，就像他们搞清楚算力那样 - 除非你有论据说明不存在可行的解决方案或者是专业机构在合理的时间内也很难给出相应的解决方案; 这才是标准的反对观点，而不是“呃，志愿者代码还没这种功能”）。 如果你的回答是“那会增加孤块率”，没错，孤块现在每天都有，所以这肯定不是什么不得了的事情。你可以把它视为一个排毒的过程。它可能会给网络带来一些微小的压力，因为迟钝和愚蠢的矿工将受到惩罚，但同样的，矿工仍然可以选择这种级别的孤块率，这种动力与凯恩斯主义的选美竞赛是一样的。孤块是比特币得以成功运作以及得以扩容的关键原因，但如果孤块率会过多地干扰了正常服务（如果你认为零确认没问题，那这不会产生太大影响），这也会在选美比赛中被考虑在内，并在惩罚恶行产生的收益和消化毒药区块产生的成本间达到平衡。违规的矿工也可以被拉出白名单，返回到随机节点状态，但为什么我们要溺爱这些矿工，去为他们思考能让他们变得更专业化的策略呢？希望现在大家都明白了，所有这些论点都是中央计划行为，至少我认为我们早已渡过了自然生活的早期需要父母抚养的阶段，再这样下去是有害的。​​​​ 比特币及其所有衍生的系统，通过引入竞争性的挖矿机制，处理、结算先见交易并记录为有效，解决了数字资产的清算与结算问题。其使用的 PoW 共识机制是最纯粹、最自由、最资本主义的竞争形式。即使像比特大陆这样的独角兽企业，每年依然需要投入巨量的研发费用才能保证自己的领先地位，而且在矿难时他们也将面临最大的冲击，要不然怎么会他们也曾经面临破产？他们取得今天的成就只不过是对他们早期所承担的巨大风险的回报而已。另外这是一个自由竞争的市场，三星，英特尔这样的巨头随时可能杀入这个市场。即使巨头们还没进入这个市场，比特大陆现在也依然面临着至少 6 家厂商的竞争，其中一家叫 Halong 的矿机生产厂商似乎已经研发出了 16T 的矿机来抗衡比特大陆。所以说比特大陆现在市场份额大并不能代表以后他们依然能够保持。简而言之，这是一个需要持续投入资金进行竞争的市场，不可能一劳永逸。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 纯粹的资本主义 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-laws/token-and-security.html":{"url":"chapter-laws/token-and-security.html","title":"Token 与证券","keywords":"","body":"通证与合约 1696 年，英王任命牛顿为铸币大臣，以解决货币重铸（银币）中的假冒伪劣、短斤少两。1717 年，天才的牛顿提出放弃白银，实施 “金本位” 的思想，以纸币英镑作为货币，同时将纸币币值直接挂钩黄金，即每英镑含黄金 7.32238 克或每盎司黄金对应 3 英镑 17 先令 10.5 便士。而更早的 1600 年左右，英国的东印度公司和荷兰的东印度公司则分别发明了股票制，解决了大规模商业下以货币进行投、融资的问题。自此，股票 + 纸币成为金融双翼，成就了英镑的世界货币地位，也成就了日不落帝国的商业王朝。英镑领先世界 300 年后，20 世纪初，美元取代英镑，而华尔街则取代伦敦。美元先是锚定黄金，1971 年布雷顿森林体系后，美元放弃金本位，而华尔街则发明了除股票外更多的足以眼花缭乱的金融衍生品，帮助实现以美元为本位币的投融资。同样，证券 + 美钞之金融双翼，成就了美元的世界货币地位，也成就着美国的商业王朝。但是，没有锚定黄金的美元时时冲击着世界金融市场，潜流暗涌。 2008 年，一个化名中本聪的人在 P2PFoundation 上公布了一种新的通过数学加密技术生产货币的方法，他将之命名为比特币 --- 一种点对点的电子现金系统。该方法采用分布式账本网络，全球任何人皆可自由加入或退出这个网络，当在算力竞赛中最先破解一道数学题时，即可获得在系统中添加一个账本和在账本中获得一定数额比特币即初始发行的权利，比特币可以在这个网络中点对点收付。比特币在许多方面都模拟了黄金，如计价单位，比特币的计价单位为数量，最小单位为 10e-8 个比特币，而黄金的计价单位为重量---- 盎司或两，数量与重量均属物理属性，均是不变常量；再如可发行总量，二者都是预期衡定、不可增发的，比特币总量为 2100 万个。2009 年 1 月 3 日，中本聪利用自己发布的网络挖出了第一个账本及 50 个比特币。在这个创世账本里，中本聪写下了一段意味深长、永不修改的话 “The Times 03/Jan/2009 Chancellor on brink of second bailout for banks（2009 年 1 月 3 日，（英国）财政大臣正处于实施第二轮银行紧急援助的边缘）。” 中本聪在创世区块里嘲讽了法币，也回应着 400 年前的另一个天才 — 牛顿。 比特币自创世以来，得到越来越多的共识，也基本实现了白皮书中的几个特性：1、现金；2、电子现金；3、永不篡改的记账系统；4、点对点支付。 但是，现代商业社会下，仅仅具有现金功能，比特币是难以成为货币的，正如前文所述，英镑、美元只所以成为世界货币，除了挂钩黄金的现金属性外，更是因为发展出了一整套以英镑、美元为本位币的投融资制度，契合了商业，这个制度的核心工具便是证券。借助证券系统，英镑、美元才走向世界的各个角落。这里说的证券是一个广义概念，举凡一切权益价值凭证皆是证券，股票、期货、期权自不比说，提单、借据、债券、积分，购物卡，等等，皆可视为证券，甚至严格意义上，货币也是证券，是国家发行的对国民的债务凭证证券。比特币欲成为世界货币，亦必须建立以比特币为本位币的证券系统。有了证券系统，比特币才有大规模的商业化应用，才能走入寻常百姓家。 幸而中本聪足够伟大，其早已考虑到比特币的完整商业生态，在其设计的原代码中包含了发行 Token 的功能，而 Token (又译为通证)，可以成为比特币衍生的证券系统，且与传统证券相比，人人可自由发行，可点对点交易，可迅速传递价值。 我这里要特别说明的是，比特币原链在 2017 年 8 月 1 日因为账本（区块）扩容问题产生了分裂，分裂成 BTC（Bitcoin Core）与 BCH（Bitcoin Cash），BTC 删除了比特币的许多原有设计且区块大小锁定于 1M, 因此难以充分实现中本聪原本设计的完全商业生态包括无限发行各种复杂 Token 的功能。 一、Token 及 Token 的法律属性 Token 的原义当然不是证券，它是一个计算机术语，意思是令牌或通行指令，通常是一串符号序列，持有 Token 者可以执行或操作特定计算机指令。在比特币或数字加密货币系统中，Token 与比特币类似，亦是一串符号，由区块链代码按加密技术生成，因而是不可复制的，Token 可以在区块链上点对点传送。Token 有时又称为币（coin）或代币 (alt coin)，不过我不喜欢用币或代币这两个词，我也不认为 Token 是币或是代币。Token 的法律经济意义由发行者或使用者赋予，按照传统证券的分类，运行于区块链上的 Token 可以有以下几种法律分类： 1、证券类 Token，此相当于传统证券中的股票、期权、债券等。发行人可以通过智能合约承诺，该 Token 相当于发行人所在公司的股份、预期股份或债权等，持有人可以凭 Token 的数量按比例享有公司的决策权、分红权、预期分红权或债权，因而这类 Token 实质上就是股票、期权、债券等。 2、现金类 Token, 此相当于传统证券中的票据如支票、汇票等，发行人通过智能合约承诺，持有该类 Token 者可以按指示获得比特币等加密货币。 3、证明类 Token，此相当于传统证券中的提单、仓单、购物卡、各种产权证书等，持有此等 Token 者享有 Token 所记录的各项权利，如货物所有权、房屋所有权、购买特定货物、享受特定服务的权利等； 4、身份类 Token，此相当于传统经济中的身份证、会员证、游戏卡等，持有此等 Token 者，具有某种特定身份或资格，这种身份或资格或与利益有关，或与利益无关。 区块链上的 Token 实际上可以涵盖社会生活的方方面面，当其可以点对点、迅速交换或传输时，意味着其代表的权利或价值可以在无中介、无审查的情形下瞬间转移，这是前所未有的，对人类生活必将产生深远的影响。 同时，我们也可以看到，Token 既不是币，也不是代币，当发行人不承诺 Token 可实现某种权利或利益，或者 Token 根本就不具有实现某种权利或利益的功能时，这样的 Token 不管称为币还是代币，事实上连幂币也不如，也不具有任何可交换的价值，目前市面上的经 ETH、经 ICO 而发行的各种代币，绝大多数属于此类。 二、Token 的发行 1、发行许可：与传统证券发行的注册制或审核制不同，Token 的发行是自由的、无需许可的。发行 Token 的程序自动运行于货币公链或某个可以发行 Token 的公链上，任何下载公链客户端的人，均可一键发行，发行 Token 的种类和数量，悉由用户自行决定。现已推出的能够发行 Token 的以太坊（ETH），刚刚面世的基于 BCH 的虫洞协议，以及即将问世的基于 BCH 的其他 Token 协议，都将遵守这样的原则。容易理解，Token 的本质是公民的个人权利证书，其发行规则应采最低门槛，即自由的、非许可的发行。 2、发行协议：发行 Token 的协议旨在实现通过用户的客户端即钱包地址输出一串加密符号，程序无法干预这个符号能作什么用途，Token 的功用或法律属性是由发行人决定的，本质上是发行人与拟交易对象（持有人）之间的一个契约，而现实生活千差万别，Token 的种类和功能亦不计其数，Token 协议不可能一一预见，也无需一一预见。因此，Token 协议应当具备高度灵活性，包括三种灵活性，对应于发行过程中的三个主体，一是 Token 协议制定者，应当允许 Token 协议与其他公链进行交互，比如一个房产权人拟通过 BCH 链发行并交易自己的产权证 Token，该交易的价值是巨大的，是交易房屋产权，发行人必须承诺这个 Token 对应真实房产，持有 Token 即持有房产，如果他的原始房屋产权以 Token 形式登记于另一公链，那么这两个公链必须能够实现价值交换；二是 Token 发行人，Token 协议应当允许发行人自由定义拟发 Token 的种类、功能、数量、发行对象以及对所发 Token 的承诺，发行承诺比如分红一旦确定，永久记录于区块链，在发行人与持有人之间产生法律效力，直接约束发行人与持有人；三是 Token 持有人，即发行人的交易对象，Token 协议应当允许持有人对发行人进行反约束，包括持有人查阅发行人账本的权利，投票的权利、建议更改协议的权利等，这些权利一旦经由 Token 协议运行，将是不可逆的，直接对发行人产生法律后果，比如持有人对发行人的锁仓比例发起投票，一旦票决通过，程序即自动执行对发行人的仓位锁定。 3、发行平台：Token 在什么样的公链上发行，是整个数字加密货币领域的一个重大战略问题。首先，是财产安全问题，Token 是价值载体，是可以变现为钱的，因此必须给予不低于货币的安全保护，目前看，只有基于 PoW 的货币公链可以提供如此强大的算力保护，而且加密货币的演化，只有集合了地球最强算力、最大能量的加密货币才会最终胜出，因此一个有远见的 Token 发行者，应当选择最有可能成为全球货币的那个公链发行 Token，将 Token 存储于货币地址上，并接受公链的密钥保护。其次，是交易迅速问题。一个能够成为全球货币的公链必是交易迅速的，因此选择了安全，实际是就是选择了速度。我不太看好目前的 ICO 或 Token 项目动不动就声称要做自己的公链，当货币链可以发行 Token 时，当 Token 可以成为证券、票据、提单、身份证明等权益价值载体时，这些所谓独立的公链难以有独立存在的价值。正如现在所有的证券、债券、票据......, 都依赖于一个中心，即中央银行，同样，在数字货币领域，所有的 Token 都依赖于货币公链，货币公链就是全球的中央银行。当然，不排除在公链的演进过程中，会形成诸如票据结算中心，证券结算中心等等具有清算特定功能 Token 的公链，但这些公链或是货币链的侧链，或基于货币链的二级链，均是依赖于货币结算层的，这些链说是票据、证据结算中心，但其运行是去中心化的。 三、Token 的交易 一个初始发行的 Token, 只是一串存储于公链地址上的符号，如需实现发行人承诺或赋予这个 Token 的价值，必须经过交易，比如融资型 Token，只有将 Token 卖出去了，才能获得资金。交易可以点对点，也可以在交易所集中交易。Token 的交易应当符合以下原则： 1、Token 应当以加密数字货币作为计价的本位币。假如 Token 在货币公链上发行，则应当以该公链货币为计价本位币。因为如以法币为本位币，则 Token 不可避免会被法律定义为证券，且将以现行证券法、银行法进行监管，带来极大不确定性；而以加密数字货币为本位币时，其法律地位和抗审查性，取决于加密货币，如加密货币是抗审查的，则 Token 亦是抗审查的，且此时加密货币与 Token 互为生态，互为支持； 2、Token 应当具有内在价值，该内在价值由发行人承诺或赋予，并永久、不可篡改地记入区块链，成为发行人与持有人之间的契约，具有法律约束力。比如融资型的 Token，发行人欲通过发行 Token 而获得融资时，必须承诺持有 Token 者有权获得发行人使用该筹资经营而产生的红利，该承诺不得反悔。无此承诺者，不得上线交易。 3、Token 应当赋予持有人制约发行人的权利，传统证券主要通过国家的法律监管实现这一目的的，比如发行人或私募人在证券上市后三年内不得交易，公募发行者需连续三年有利润才准发行、交易，投资人有查阅财务账簿的权利等等。Token 应当吸收国家的成功监管经验，并纳入 Token 协议中。在区块链下，通过智能合约更有可能实现国家法律所难以实现、难以覆盖的监管。比如可以通过智能合约直接锁定发行人的 Token 地址且向所有投资人公开；可以设定发行人公司的连续三年红利必须达到拟发行价格的多少才能触发首次交易；发行人募集的所有加密货币地址必须全部向公众公开，否则不得触发交易；私募者的价格和地址应当向所有持有人公开；发行人的账簿必须向所有投资人公开，等等。 关于发行人的账簿，如采比特币为本位币记账，则天然是透明的，因为所有现金（比如 BCH）的走向在区块链上是天然透明的。鉴于比特币交易的不可逆性和 UTXO（未花费交易支出）特性，任何公司的钱包地址余额都是已经结算了全部往来账后的余额，因而就是利润，所以投资人只要知道发行人的钱包地址，均可随时、自由查阅账簿，随时可知晓当下可分配红利，从而决定是否持有 Token。这便构成对发行人的最强有力反制。 从这里也可以看出，如采比特币为记账本位币，连会计都是多余的，因为比特币的 UTXO 设计天然地充当了会计，企业的一切往来账，均随时、随地在区块链由得到矿工的自动清算。 不由赞叹，比特币真是人类一项伟大的发明。当然我们也要看到，只有在数字加密货币已经成熟，企业已将数字加密货币作为记账的本位币时，Token 融资对投资人的保护才是空前强大的，对社会诚信的建立才是空前强大的，其强大远远胜过国家的法律监管。所以，Token 采数字加密货币为本位币极其重要，只有这样，Token 与加密货币才会相辅相成，犹如篇首提到股票 + 货币是金融双翼，Token + 比特币也是金融双翼，Token 成就数字加密货币，数字加密货币成就 Token, 二者共同成就人类新的商业文明。 四、Token 对现代投融资制度的影响 Token 可人人自由发行，可点对点无中介、无审查的交易与传输，可自我监管。仅凭这几点，相信有心的读者已经知道，以 Token 作为投融资工具，将对现代经济制度产生无法想象的深远影响。 不过，我在这里主要强调另一个影响，那就是 Token 投融资对人类更公正，可以消除法币的 “离法币越近、获利越大” 的根本性不公正。为什么？因为 Token 计价的本位币是比特币之类的数字加密货币，其发行是去中心化的，其总量是衡定的，不存在投融资时的信贷扩张，也就是不存在加印钞票，发行人借以融得的比特币是实打实的，投资人购买 Token 所花费的比特币也是实打实的，任何一个人如果用掉了手中的比特币，除非依靠价值劳动、依靠价值交换，将没有其他办法获得比特币，他将不能通过申请贷款以央行加印钞票的方式获得资金，也难以通过武力抢劫获得资金，从而，最大限度地的消除了法币发行与流通中的金融食利者、暴力暴利者，最大限度地实现人类公平。 五、Token 对现代法人制度的影响 1、财务会计制度影响。前面已经提到，如采比特币为记帐本位币，由于比特币交易的不可逆性和 UTXO 设计，企业的任何一笔往来都是实时清账的，都在区块链的浏览器上有迹可寻，比特币的矿工节点实际就是会计，因而比特币消灭了会计。 2、法律身份的影响。现代法人包括股份公司、有限公司、合伙企业等多种组织形式，但是，当一家企业采 Token 融资而组建并以比特币为记账本位币时，每一个 Token 持有人包括持有 Token 的企业管理层、企业员工和其他 Token 持有人都是企业的所有人，每个所有人都可借运行于区块链的智能合约对企业行使管理权、监督权，尤其是比特币本位制下，企业的财务对每一个 Token 持有人都是绝对透明的，因而 Token 持有人与传统公司制下非常分散且不参与公司管理的中、小股东不同，每个人都可能或深或浅、且非常方便地的参与企业经营，传统的法人界限模糊了，甚至很难说有哪个实体、哪个组织能够代表这个企业，所谓企业变成了全体 Token 持有人的一个社区，企业的比特币钱包地址才是这个企业的本质，地址的私钥拥有者才是企业的法人，这个地址包括了企业的全部资产，也是企业被法律执行时的资产账户。 六、Token 的抗审查性与法律监管 虽然本文在前面反复提到 Token 的抗审查性、比特币的抗审查性，但这个抗审查性并非为了游离于法律之外，抗审查性只是为了让这个人类创新事物能够在早期生存下去，能够免遭不明智政府的戕害。因为人类历史表明，政府对于新生事物总是迟钝的、甚至反感的。所以，Token 和比特币不应排斥政府的法律监管、甚至应当欢迎、拥抱。 但也由于政府的迟钝与落后、更由于作为与人类财产利益攸关的伟大发明，所以，在政府的法律监管之前，作好自律监管极其重要。任何一个行业，只有能够自律、能够自我除恶时，才有可能得到政府承认，才有可能得到大多数人的承认。 几乎所有国家的民法都规定：处理法律纠纷时，法律有规定的，依照法律；法律没有规定的，适用习惯。什么是习惯？对 Token 而言，就是 Token 在发展过程中形成的行业惯例、国际共识，以及 Token 在发行、流通过程中形成的各种程序性协议、智能合约以及各法律主体签署的契约等等，这些事物在纠纷发生时，均具有法律效力。均有可能被司法系统直接采用。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 Token 与证券 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-laws/signature-in-electronic-contract.html":{"url":"chapter-laws/signature-in-electronic-contract.html","title":"电子合同与签名","keywords":"","body":"电子合同与签名 比特币一个至关重要的问题是如何提高网络的可扩展性，从而提高交易速度和使用率。比特币 Core 开发团队提出的扩容解决方案为隔离见证，即将签名数据（见证）与交易数据分离开来。比特币社区关于隔离见证的争论多数集中在技术影响和风险的问题上。事实上，这同样存在法律风险：由于分离和丢弃了签名数据，隔离见证，以及像 Schnorr 这类改变了签名格式的做法，将使得电子合同和交易的法律证明和认证变得更加困难。 这一法律问题可能会在商界造成严重的实际问题。如果企业和个人在比特币网络使用电子合同和交易，发生了法律纠纷或应监管要求，他们却无法轻易证明和验证这些交易，那会发生什么情况呢？本文将研究这一问题在美国法律以及其他司法管辖区中的情况。 隔离见证如何分离签名数据 一个正常的比特币交易记录了交易和签名（见证）数据，其中签名约占数据体积的 60%。交易数据传递了在比特币交易中发送的值或记录的信息。签名数据很重要，因为它核实了交易所涉及的人员，并验证他们确实发送或接受了该交易。但是，隔离见证假设只有验证交易时才需要签名数据，并将其视为不重要的数据而丢弃。 隔离见证不是直接提高 1MB 的区块体积，而是通过将签名（见证）数据从交易数据中分离出来，从而间接地增加区块存储更多交易的能力。然后，它创建了两个哈希值：（1）一个交易数据的 “常规” 哈希值；（2）一个 “见证哈希值” 由交易数据和见证数据所组成。 这些数据是如何存储在区块里的呢？比特币协议已经使用了一个 Merkle 树（一种由信息哈希值组成的数据结构）来有效存储交易数据，并把 Merkle 的根放在每个被挖掘区块的块头上。隔离见证建议创建第二个 Merkle 树来单独存储见证哈希值，但不保留实际的签名数据。正如隔离见证发明者 Pieter Wuille 解释的那样，“这些签名只有验证时才需要”。一旦给定交易被验证，隔离见证便只保留见证哈希值（在第二个 Merkle 树中），并且默认丢弃完整的数字签名。有些节点可以选择保留完整的数字签名，这就产生了三种可能的场景: 网络中有些节点维护数字签名 没有节点维护数字签名 最有可能的情况是：绝大多数数字签名将被丢弃。 考虑一下这在纸质合同世界中的运作情况。一旦双方签署了一份合同的硬拷贝，签名块就会被从合同主体（协议条款）切离。然后签名块被转换为索引的标识符，与数百个其他签名标识符放在一个文件柜中。在大多数情况下，物理签名块本身将会被丢弃。多年以后，如果想要证明你已经签署了（或没有签署）某个特定合同，你可以找到签名块标识符，但可能无法检索到物理签名块本身。隔离见证的最终结果将是不可靠的：你可以找到见证的哈希值，但不确定能找到数字签名本身。 为什么签名很重要 1996 年，美国律师协会审查了电子签名的必要性，以促进网上交易。在其数字签名指南中，美国律师协会规定了在数字环境中复制物理签名的两个关键属性：（1）签名者身份验证：数字签名应显示签署人且未经授权方很难复制；（2）文档 / 交易认证：数字签名应识别签署的内容，使其难以伪造或更改已签名的事项。大多数数字签名机制，包括美国的 NIST（国家标准与技术研究所）标准和欧盟的 eIDAS 条例，都遵循了类似的原则。 事实上，比特币使用公私密钥来签署交易的签名方法，满足了这些数字签名原则。比特币白皮书（在第二节）甚至将电子货币定义为“一条数字签名链”，并指出收款人可以“通过验证签名来验证所有权链”。因此，比特币系统依赖于验证数字签名的能力。相比之下，隔离见证倾向于验证交易而非签名者身份，并很少考虑这可能会导致以后的交易纠纷。 联邦电子签名法的含义 隔离见证可能会使交易或电子合同的当事人很难证明其真实性。在美国，企业和消费者之间的电子合同（和数字签名）通常在联邦电子签名法下是有效的。美国法典第 15 篇第 7001 节法律把“电子签名”——一个比比特币使用的数字签名更灵活的概念——定义为“与合同或其他记录有附属关系或者逻辑关联，并由有意签署记录的人执行或采用”。美国法典第 15 篇第 7006（5）节提供了验证合同已被各方签署和授权的基础，就像一个纸质的物理签名块可以用来显示当事人实际上已经签署了合同。但在隔离见证之下，考虑到隔离的数据树和签名数据被丢弃的可能性，是否真的可以说，电子签名与交易数据“有附属关系或逻辑关联”，足以显示出要批准的意图？ 此外，联邦电子签名法规定了电子合同记录的法律效力或可执行性 “如果此种电子记录形式不可保留或准确复制，以供有权保留合同或其他记录的各方或人员以后参考，则可被拒绝。”美国法典第 17 篇第 7001（e）节的一项关键条款是——如果电子合同的保存形式不支持以后被准确复制，则可 拒绝承认 其效力或可执行性。然而，正如我们所看到的，隔离见证并不关心如何维护数字签名，只关心在交易发生时验证交易。隔离见证方法产生了很大的不确定性，即仅凭签名数据哈希是否能满足电子签名法对数字签名证明的要求。 因此，在隔离见证的情况下，想要明确证明交易的企业或消费者，最多能将见证哈希与相应的交易数据重新关联起来。但可能没办法恢复数字签名本身，这意味着电子签名法可能 拒绝承认 电子合同或记录的法律效力或可执行性。 只有当某个节点选择保留所有完整签名数据时，才能恢复数字签名。然而，如果一个节点被用来提供商业存档服务，对检索和验证完整的数字签名收取费用，那么它只具有经济上的动机。这将为数字签名创造一种新的中介形式，这与比特币的分散化性质是背道而驰的。 美国各州法律的影响 类似的问题也会在美国各州法律中出现。美国绝大多数州（加上哥伦比亚特区和美属维尔京群岛一共 47 个州）已经各自制定了统一电子交易法（UETA）的版本，承认电子交易的有效性。与联邦电子签名法类似，UETA 将电子签名定义为 “与记录 有附属关系或逻辑关联 的电子声音、符号或过程，由有意签署记录的人执行或采用。” 纽约的版本在 9 CRR-NY 540.4(b)中更进一步指出，如果电子签名“在传输和存储过程中与记录有联系”，则电子签名被认为“与电子记录有附属关系或逻辑关联”。但是，由于隔离见证不要求传输和存储签名数据，试图拒绝交易的一方可能会争辩说，隔离见证的签名总体无法满足纽约对电子签名的定义。 “电子声音、符号或过程”是否 “与记录有附属关系或逻辑关联” 往往是一个复杂的事实问题。例如，在 Young v. Rose, 286 P.3d 518 (Az. App. 2012)中，亚利桑那州上诉法院解释说，如果给附有协议的一封电子邮件回复了一封表示 “谢谢” 的电子邮件，并不确定这封表示 “谢谢” 的电子邮件是否属于 “电子签名”，需要对法院诉状和协议之外的事实进行审查。隔离见证会进一步复杂化这类“一个满足条件的电子签名由什么构成” 的事实调查。 当然，可以修正法律来解决这些比特币交易和合同的问题。例如，2017 年 3 月亚利桑那州通过了一项立法（HB 2417）来修改其 UETA 版本（亚利桑那州电子交易法），以确认通过区块链技术保护的电子签名、记录或合同在州法律下是有效的。它还承认智能合同是有效的。然而，法律规定符合条件的区块链技术是 “不可变的、可审核的、并提供未经审查的事实。” 在一个签名数据被剪除掉的隔离见证世界中，区块链记录真的可被审核并提供未经审查的事实吗？此外，亚利桑那州的法案并没有规定交易、智能合同或区块链签名是否必须完整地记录下来（将交易和签名数据放在一起），也没有规定如果签名数据被丢弃，它们是否还有效。如果隔离见证被激活，根据亚利桑那州的新法律和其他州法律，这些合同的有效性可能会变得不明确。 面临着法律风险 美国的法律体系能解决这些问题吗? 这是有可能的，但法律跟上变革性技术的速度非常缓慢。隔离见证剪除了合同或交易的一个关键元素，即当事人授权交易发生的内嵌证据，从而使挑战变得更加困难。它也没有提供任何简单机制，使得签名数据以后与交易数据 “有附属关系或逻辑关联”。这将违反美国的电子合同法律框架，可能会吓到企业使其不会在区块链上投入更多运营，并阻碍了比特币网络为未来的各种交易和智能合同提供动力的更大愿景。这种法律不确定性是隔离见证的一个重大风险。这也是 BSV(当时的 BCH) 为了避免这个风险而出现的原因。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 电子合同与签名 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-laws/clearance-and-settlement.html":{"url":"chapter-laws/clearance-and-settlement.html","title":"清算与结算","keywords":"","body":"清算与结算 人们过多地关注确认而非交易本身， 比特币（或通常说的区块链）改变了贸易的完成方式。比特币去除了中间人或中介的必要性。中间人系统充当了结算与清算的功能。 在过去，一个交易以典型的两个步骤完成。第一个步骤是签订买卖协议。在比特币中，这是系统用户一方的点对点。个人或公司可以与另外一个人甚至是交易所完成此一步骤。这允许数字商品及通证化产品包括证券在内的无缝和整合交易。此与现行的金融与贸易系统并无二致。当前，电子商务的销售亦存在数字化通证的运行。 比特币不同于这些的是，它解决了系统第二层的发行以及清算与结算。 清算所的存在是为了保证在节点交易时不会导致数字产品或通证的双花。 比特币是通过交易的结算步骤来解决此一问题的。一项买卖中，Alice 和 Bob 达成交换 100 个特定数字产品的协议，也就是，Alice 欲以美元计价的通证交换 Bob 持有的股票。 协议是资产转移与支付的相互承诺。 此时，比特币和 “区块链” 的概念来了。交易的第二步骤叫结算。通过银行或交易所，两个人联系在一起并进行商品交易。交易双方签订一个交换契约，承诺转移一定数量的有价通证，并按约定执行协议（此处执行，指交易双方的执行）。 通常，我们发现中间人促进并完成了交易的每一个步骤。一个节点交易应当包括无中间人时的直接销售或场外交易。基于通证销售的 ICO，与此并无不同。ICO 或其他通证是由中间人或直接的交易所进行销售的。又，此等执行过程与销售任何商品是相同的，也与交易所销售全部证券或非商品化的钱及票据完全一样。银行开具信用证，在单证相符时促成对受益人的远期付款。 这也适用于不需要直接以物换物的期货代理商、证券交易所或其他交易所。 我们可以把这些步骤叫做通证市场的前端，此处通证指证券、债券或可交易的商品。电子账本和电子交易所并不新鲜。目前，无纸化的债券和股票已相当完整。这些记录于计算机的数据就是通证。当前通证的使用已相当普遍，电子商务的起源可上溯到 1980 年代。市场上的电子商务地面工作人也日益被电子交换通道所取代。纽约证券交易所、芝加哥商品交易所及其他交易所，都是在交易通证，在一定形式上，与任何 “加密货币” 交易所都是类同的。 比特币（或其他 “区块链”）不会也不可能取代“前端” 过程。买卖指令的完成就是这样的前端过程。比特币（或曰区块链）在于帮助消除 “后端” 中的中间人阶层。 后端中完成的那些指令引入了交易的下一个步骤 --“结算”。在区块链中，此一步骤由矿工或 “节点” 控制。矿工充当了分布式的清算所和结算功能。就一项数字资产，资产在完成实际转移时，也意味着结算。对于证券化的，可作为通证交易的商品，承诺转移资产的结算动作可在区块链上执行，但是对于物理性商品的最后结算，需要后端的结算功能。 对于金融性资产、股票或证券交易，区块链可以去除对清算所功能的需求。 这就是后端。也就是，区块链完成了通证或电子化资产的实际转移，如同清算所完成现行交易所的通证化资产的转移一样（注：一切电子化发行的资产都叫通证，这是 1980 年代以来就存在的条款）。 中间人在后端的功能是保证资产转移的权利得以实现。投资人在达成资产交换协议后，应当被保证分别收到对方的资产，也就是，所有的交换和资金应当清算和结算。 后端的功能被忽视，也常在普通公众的视线之外。 后端功能在于保证被发行资产的投资人可以享有不必关心所持资产的质量、市场性、流动性或风险的权利。后端还提供了交易垃圾债券、一美元元以下劣质股票与交易 AAA 级主权债券或 500 美元一股优质股票的同等权利。 区块链，就象结算中间人一样，只是提供一种机制，以保证投资人在交易时的权利。 比特币，实际上就是任何区块链，在交易中充当了后端中间人的角色。 中央证券存托机构包括 DTC（存款信托公司）、中央对手方清算制度包括芝商所的清算所，LVFTS（大额资金转移系统）和美联储等等，都是区块链将要取代的中间人实体机构。 没有一家后端实体在市场交易中有位置。它们提供的是市场交易的渠道，促进前端交易执行，担保结算，担保权利及资产在交易主体间的转移。 比特币在任何时候都不会取代前端功能。它起一个补充作用，允许一个更简单、更划算和经济可行的方式完成前端交易。 比特币（或任何区块链）添加了一个私人层允许后端流程化。常犯的错误是比特币取消了所有的中间人，比特币不会，一个区块链也不会作出这种夸大的承诺。后端的流程化，及有能力为电子化权利提供一种全球化的无缝、整合的清算与结算功能是无与伦比的革新。有一种观点认为比特币允许无规则、无监管的证券交易，这只是一种在 “民主金融” 外衣伪装下意图以虚假和无效宣传来从事非法投机生意的大而不当的愚蠢理论。需要注意的是，清算所是不用考虑正在交易的资产质量的，正如 N.Aubryr 在 2008 年所言，欧洲的金融管道就是如此。 在金融系统中引入区块链不会影响、削弱或在任一程度上减少前端功能对监管和控制的需求。实际上，比特币简化了交易调控政策在金融市场中的运用。添加日期、定义交易所的功能允许市场参与者简化合规性需求，而提供服务的同时允许参与者更快、更低的成本的清算则降低了“前端“市场的成本。其结果是提高了国内及国际贸易与交易的流动性。 我们可以按如下描述这个过程。假定 Alice 与 Bob 之间发生了一笔以美元换苹果公司股票的交易，比如达成了 Alice 按一股 150 美元从 Bob 手中购买 1000 股苹果股票的协议。这个交易在前端达成协议后将在后端完成清算。前端，无论是 OTC 还是在证券交易所，引入区块链后不会有任何变化，交易更快，结算无延迟，但是交易过程存在于比特币（或任何区块链）之外。 在传统的场景里，清算所和结算功能是为了保证 Alice 存入 15 万美元而 Bob 则放弃 1000 股苹果股票。后端可以保证 Alice 有可支付的资金，同时 Bob 有可交付的股票，且对这些股票拥有权利。以允许交易所完成交割。 比特币简化了后端过程。它允许 Alice 将资金放在一边而进入结算功能，以直接或原子交换方式获得 Bob 的已验证资产。系统的匿名性质意味着仅有交易双方及与交换或交易相关的主体知道 Alice 与 Bob 的身份。交易者的身份不可篡改地记录于区块链，价格的任何变化都具有法律效力，当违反法律或规则时，允许提醒股票交易者。 Bob 和 Alice 在数分钟内直接完成结算，整个过程没有成本，没有上面人，没有浪费地加入第三方清算所。这就是比特币引入和进行的过程，也被其他区块链在模仿。 前端和后端 金融交易的前端远不同于后端。前端包括买卖证券或商品的一个合同交换。后端在传统上是基于一个已在前面完成、已经关门的关系。这种关系以账户的形式持续存在于中间人处。中间人所享有的权利和承担的义务不与任何特定时间相关联，也不与任何交易合同关联。前端表明买卖双方正进入一个合同关系。 后端通过中间人之间改变关系。例如，Alice 通过摩根. 斯坦利出售苹果公司股票，摩根. 斯坦利用这些登记的股票在 Bob 账户上记账，后端交易就是账户的转移，即摩根. 斯坦利在 Bob 的贷方账户记入与 Alice 借方账户同样的数额。这样，Alice 在摩根斯坦利的账户余额减少，而 Bob 相应地增加。 同样的过程被区块链取代。不同于摩根斯坦利在他们的网络清算所中完成与验证账户功能，比特币允许账本直接同步与维持。 一个智能合约甚或一个简单的模板式交易都在区块链外完成协商，然后使用区块链进行结算，以保证交易是有效的（验证发生于挖矿过程），没有双花发生（诸如试图将同一份股票进行二次登记）。 比特币通过保留登记而充当了后端系统。用户通过签署加密消息而保存了被验证记录，该记录存于账本上。 比特币是 “一次写入，多次读取” 的账本。这模仿了许多现行的账本数据库。如果发生错误，账本可被修复，但回滚操作亦被写入以提示错误。 对于公司发行的通证化股票，如果法院判定某次特定的股票交易无效，比如交易对象受限，则即使是不可篡改的账本，公司仍能改正之。 这一过程是通过公开回赎。虽然交易各方对公众而言是匿名的，但公司或组织仍保留账本与记录，可以进行公开回赎交易。 比如，Alice 出售给 Bob100 股苹果公司股票，但是法院判定 Bob 无权持有该等股票，该交易可通过无效交易而回赎。 如果 Bob 不签名交易致使回赎不能发生，则公司可简单地在注册表上签署一个正式的废止声明。此时，尽管 Bob 仍有加密账本的入口，但该入口不关联任何权利。Bob 不能使用这个回购商品，不能出售，因为任何销售行为都是无效的，注册表将永久提示不仅 Bob 的入口而且由此发生的任何交易树都是无效的。 区块链允许引入简单的 “撤回“表格。如果一个注册或交易的” 撤回“是无效的，可能导致 Alice 对公司发起法律诉讼。 尽管区块链的记录不可篡改，如同 WORM 或一次写入多次读取的账本系统，但记录并非不可变化。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 清算与结算 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-laws/keys-and-identities.html":{"url":"chapter-laws/keys-and-identities.html","title":"私钥与身份","keywords":"","body":"私钥与身份 私钥是比特币的发送者在发送比特币时附随在交易脚本上用于验证所有权的数字签名，收到交易广播的矿工可以验证该交易的真实性，从而完成一笔比特币的支付。比特币的设计是 UTXO(未花费交易支出)，也就是任何一个人（矿工直接挖比特币除外）所持有的比特币都来自前手的支付 UTXO，前手会在交易脚本上签上后手的比特币地址，从而该笔比特币转为由后手持有或所有，当后手欲花费比特币如支付给其他人时，则他需在该笔比特币支付脚本上签上他所有的数字签名即私钥，该私钥对应后手的比特币地址，也即前手支付比特币给后手时所背书的后手比特币地址，这样矿工便能验证后手的地址与私钥是否一致，是否有前手的合法来源，从而验证通过。 私钥即数字签名在比特币脚本上是一串很长的包括数字与英文字母的符号，是用户或钱包按照一定数学方法随机生成的，当然在机器代码上就是 01 组合。私钥的验证是在程序上自动执行的。也就是私钥的生成与验证实际都是程序自动完成，与用户是隔离的。 矿工并不知道私钥是多少，因而与银行的最大不同是，尽管矿工每天处理无数笔比特币交易，但矿工并不知道每笔交易的上家与下家身份，比特币系统通过私钥很好地保护了隐私。 但私钥自身并不携带任何用户的身份信息。也就是仅凭一串用户私钥，任何人均无法经过分析私钥本身而得知持有人的身份。用户如需证明某私钥是他所有，还需提供其他有关与私钥直接关联的身份证据，比如注册钱包时提供的身份证号码、生物信息如指纹、照片、自我视频等等。 私钥的法律性质 那么私钥的法律性质是什么呢？拥有私钥的权利是什么呢？私钥的本质是代码层面的，非现实法律层面的，私钥的功能在于在代码层面为矿工验证交易的真假提供数学前提，持有私钥仅表明持有人有能力用该私钥签署一笔交易，而其他任何人均无法动用该私钥项下的比特币。但仅仅持有私钥并不意味着他在法律上是该私钥项下的比特币所有权人，正如捡到一个无密码信用卡，或者套取了他人密码的银行卡，或者持有一笔钱等，均只表明他有能力动用这笔钱，与所有权无关。如发生争议，需证明权利时，必须另行提供与身份有关或者取得这笔钱有关的证据。 私钥与中本聪 回到创世私钥。拥有创世私钥能够证明是比特币的发明人么？不能。正如前文所说，创世私钥是比特币白皮书或主协议代码完成的收官之作，如与比特币整个系统的发明有关，也只是其中的极小一部分，离证明白皮书的作者、比特币的开发者身份的证明力还相去甚远，或者 POW 下的工作量还远远不够。而且，比特币的密钥系统是独立于比特币主结构的，完全可以由另外一人独立开发，所以 CSW 有无创世密钥，都与证明比特币的发明人身份关联性不够。 再次，如前文所述，拥有创世私钥或者动一动创世区块的比特币至多证明创世私钥的持有人有能力动用创世区块的币，但并不能证明该动用人就是创世币的所有权人。动用人如需证明他是创世币的所有权人即比特币的发明人，仍需提供证据证明该创世私钥的身份信息即该创世私钥与比特币的发明人有关。为达此证明，则需提供与比特币发明有关的一切证据，问题又回到前面，即如何证明比特币的发明人身份，如前，POW, 不赘。 还有一种可能，即创世区块是特别区块，有特殊纪念意义，因而其设计与其他区块完全不同。如通过未知私钥签名法或自签名法设计成不可花费，此种情形下，因创世区块的币永远不能花费，则无法移动，不可能通过动一动来证明创世私钥的持有人。因无法移动，也无交换价值，不符合货币或现金的经济或法律定义，故讨论其所有权仅有纪念意义上的价值。假定创世私钥设定为未知私钥签名，则无人知道该私钥，那么创世区块的币属于无主物或公开财产，无人可以证明他的私有归属；如设定为自签名，则不排除在将来知道签名消息或其他信息时，可以验证，但仍不可移动、不可花费。 但无论如何，创世私钥签名或创世区块动币，均与比特币的发明人无关。欲证明 CSW 是不是比特币的发明人或中本聪 ，只有一个办法，既是法律的办法也是比特币的核心工作方法，即 POW--- 将 20 年来的研究资料呈堂，一切水落石出。 所以欲研究、欲反对、欲赞成 CSW 是中本聪或者骗子的人，请研究他的论文、他的讲话、他的代码，如有条件，最好研究 2009 年 1 月 3 日之前的，而不是紧盯创世私钥这么一个无足轻重的证据。​​​​ new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 私钥与身份 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-economics/":{"url":"chapter-economics/","title":"比特币的经济学","keywords":"","body":"比特币的经济学 比特币是一个使用了点对点网络和加密技术的经济自激励系统。比特币通过 PoW，把半导体技术、电力这些和物理相关的条件与区块生成绑定在了一起。通过经济的角度给出拜占庭将军问题在实际工程应用中的解决办法。比特币的许多方面的设计，显现了中本聪在构建这个经济系统的深思熟虑。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币的经济学 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-economics/money-is-measuring-stick.html":{"url":"chapter-economics/money-is-measuring-stick.html","title":"钱是一种度量尺度","keywords":"","body":"钱是一种度量尺度 人们似乎一直不太理解，钱本身是没有价值的。钱仅仅是对既有债务的一种度量，是对过去交易的一种主张。钱是我们进入商品和服务交换的一种社会契约，不同于物物交换的是，钱给我们能够留下一个符号，凭此可以在今后换取需要的东西。钱是我们售卖之后记入账本的一个符号，在需要时又能从中取出以换取他物。 钱的价值来自于我们用钱换取的东西。 货币的起源 几千年前，钱产生于储存物品的能力，以及有一个与储存相关联的账本价值。在《圣经》和其他相关文献中，他连得（talent）被用于衡量储存的谷物: 谢克尔(Shekel): 2/5 盎司 --出埃及记 30:23 他连得(Talent): 75 磅 --以斯拉记 8:26 农民需要保存最好的种子，30 磅 / 13.5 公斤的种子可以播种半英亩 (0.2 公顷) 的土地。 现代农业更加紧密化，差不多要使用两倍数量的谷物种子。 从青铜时代晚期和铁器时代早期开始，人类创造了地下仓库，挖在房屋的地板下，不仅储存当年的粮食，也可以储藏到下一年度。随着城镇和村庄的扩大，储存的规模开始变大。结果，更多的粮仓服务于公共和行政目的，而农民则得到一份与储粮重量相关的收据。 可以看到，古代出现的日用货币--谢克尔和他连得，起源于谷物收据。农民和其他生产者会在收割之后储存大量的谷物。此外，农民生产的稻草可以用来制砖，这导致了贸易和交换的起源。那些更优秀的农民继续耕种，而其他擅长陶艺的则从事制砖，还有手工贸易可以帮助在储粮与产品及服务之间进行交换。这就是钱的起源。钱的价值源于我们在社会中拥有的消费品。钱只不过是我们追寻一系列商品时的期权。 钱的价值 钱本身无论是在过去还是现在都没有价值，钱的价值存在于通过账本获得的东西。这才是看待钱的正确方式。不是作为 GDP，也不是作为 GDP 的对标物发行，而是作为整个经济中正在创造的个人成果的主张。这就是钱和商品的供求关系。无论我们的计算机变得多么强大，这种计算无比复杂，尤其对于任何个人来说，如要作出规划，这种计算超乎复杂。如果摩尔定律在一千年里持续有效，每年翻一番，则可能达到这一点，即一台存储了社会中所有发生事物的每一个比特信息的计算机可以比资本主义计算得更好。但是，这样一个系统的存储空间将需要比全宇宙更多的原子数量。 因此，钱是在某个时间点上对商品及服务的社会价值的看涨期权。如果我们收获更多的谷物，谷物相对于其他商品就贬值。在一个简单的古代经济中，这种场景更加清楚。比如鲁滨逊.克鲁索式经济中，商品数量的有限性让人们看到了平衡。 重要的是，不是生产数量而相对于生产的正被消费的数量决定了价值。在一个简单经济中，如果我们有 110 份资源，但只消费其中 100 份，其余的作为储蓄，那么价值将会通缩。目前，我们正处于通缩经济中，经济增长导致我们每年都有更多的产品。今天，我们正处于人类历史上最富裕的黄金时代，没有什么能阻止富裕进一步增长。当然它并不妨碍某些人试图阻止增长，但现实是，我们生活的世界比 100 年前人们所能想象的要富裕得多。很少有人理解，地球上每个人的财富总量都在增加，且增长速度远远超过人口的增长速度。 通缩与通胀 所以通货膨胀来了，以用来平缓和掩盖财富增长迅速这一事实。有很多人，尤其是政府官员，认为经济增长是坏事，他们认为资本主义和经济增长是破坏性的，他们重组现状与秩序。他们更替新人掌权，并将不再满足社会需求的人赶下台。这就是利润的本质。 钱是一个简单的用于跨越时间来交换货物与服务的账本。钱允许人们在当下进行专业化分工、创造和销售事物，并以契约的形式承诺在未来某时与他人分享所需事物。以规模计，比特币本身不是通货紧缩物。一个活跃增长的资本主义社会才是通货紧缩的。 在其他条件都相同时，比特币在规模上既不是通货膨胀的，也不是通货紧缩的。给定稳定人口，经济不增长时，比特币的价值亦完全不增长。 在一个稳定的经济体中，比特币的价值增长只能通过投机来实现。在我们的现代经济中，计算机更快，汽车更有效率，全新的知识和发明提高了整个社会的效率，每年给我们带来比以往任何一年都多的东西。仅 3.1% 的增长率，每 20 年就翻一番。如果你仔细想想，这意味着每一个活着的人在 20 年后，所拥有的商品和服务将是现在的两倍。 这就是为什么比特币要保持稳定的原因。一个国家的法币衡量着政治关切。比特币的跨全球使用使得人们可以追踪和监控包括本国和国际范围的世界经济数据。我们现在还没有达到这个水平；比特币必须大规模扩容才能实现这个目标，目前还没有扩容到所需水平，看起来下一个 20 年也难以完成目标。而要实现这个目标，它需要一个全球账本。全球账本构成了我们使用比特币创建一个规模化系统的基础。下一个 10 年，我们拥有的不仅仅是 Visa 卡或万事达卡的能力，而是让所有的银行交易以安全的方式进行，而不必怀疑某一笔交易是否发生。 钱的价值在于它能作为衡量标识符。它是一种跨时间的交换商品和服务的手段，使得人们可以对资本进行估值和计算。 这才是我们追求的目标。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 钱是一种度量尺度 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-economics/money-supply.html":{"url":"chapter-economics/money-supply.html","title":"比特币的供给","keywords":"","body":"供给 比特币的价值不是来自于系统中的电力，而是交换的价值，人们愿意用电挖矿来为此付费。在经济世界中没有绝对的东西，比特币也是如此。 必须要问的问题不是某些东西是否使用能源，而是它是否能够更有效地提供人们想要的结果。比特币提供了人类历史上有史以来发明的第一种稳定货币，它的成本低于现存的货币发行，电子数据交换和法币的综合成本。作为一套经济系统，比特币根据系统的整体效用自行调节采矿和手续费奖励。最重要的是，随着系统的扩容，它的效率才不断提升。 在世界级的规模下，将该系统与信用卡系统进行单独比较，其运行效率更高，并且提供更多其他的服务。 现金之所以成为现金，其根本原因不在于可以用现金买东西，而在于现金可以成为交易双方共同认可的记账证据，大家共同认可用贝壳作为证据记账，则贝壳成为现金。作为一种记账证据，现金可以没有任何价值，唯需满足不可篡改、流通迅速、成本低廉。比特币便满足这一特性：不可篡改、方便流通、成本低廉。又现代经济条件下，最大的商品、服务流通发生于企业与企业、企业与个人之间，故比特币欲成为现金，应当优先成为企业的记账证据，也就是比特币系统应当优先成为企业的记账系统，这样比特币便可在企业之间发挥现金特有的记账凭证作用，且比传统法币系统更不可篡改、更迅速、更低廉。如此，比特币系统的记账单位 -- 比特币便可以演变为现金。而当其成为现金后，自可以成为国家的纳税等价物，且由于比特币天然自成记账系统，纳税更为方便。 欲使比特币成为企业的记账系统，其容量必须足够大，任何一家中等规模企业的记账交易，其十分钟所所需的峰值都可能在GB以上，而目前比特币系统最大区块容量产生于BSV，亦不过64M,故比特币欲成为现金的当务之级是迅速扩容。否则，比特币只是一个玩具、一个庞氏而已。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币的供给 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-economics/halving.html":{"url":"chapter-economics/halving.html","title":"减半机制","keywords":"","body":"比特币的减半机制 足够的总量 比特币协议规定，挖到新区块的矿工将获得出块奖励，刚开始是 50 个币，然后每 210000 个区块后(约每四年)奖励减半，目前（2019 年）是 12.5 bitcoin。出块奖励是对投入资源辛勤挖矿的矿工的补贴，这也是比特币的供给机制，流通中新产生的比特币都是这样诞生的。 比特币的数量部分与一个简单数列有关，该数列可以让你一眼看出剩余的比特币是多少，至少是一个大致的数字。有人曾经问我为什么区块补贴开始是每个区块 50 比特币，然后每个区块奖励的减半周期为 4 年。 比特币的总量是足够的。超过我们用途所需的比特币，并将永远被开采。 二分悖论 芝诺悖论有一种特殊的形式，叫做二分悖论。 运动的物体到达终点前，必须先到达一半路程。-- 亚里士多德，《物理学》6:9 在比特币中，我们无需担心减半是一个无止境的任务，因为这是受整数限制的，补贴将在 2140 年左右消失，即最后一聪被开采出来为止。这是一个有趣的数列: 当我们换个角度考虑时，是另一种意义。如果我们把 100 作为一个任意数量，由于百分比是以 100 作分母的，我们现在可以用另一种有意义的方式转换这些数值。 请注意前四年的区块奖励是每个区块 50 比特币的补贴。然后下降到 25，然后是 12.5，以此类推。我把它们写成 50/100,25/100 等等是有原因的。 在第一个四年里，矿工们通过竞争获得全部比特币的 50%。在第二个减半周期，矿工们相互竞争，获得比特币总量的 25% 。目前，矿工正在竞争 12.5% 的收入。 在下一次减半之后，矿工们将竞争获得比特币总量的 6.25% 。也就是每年度获得总量的 1.6%。 实际上，补贴在消失，但是在任何时间、任何点，都容易看出还剩下多少比特币。 当区块奖励是 50 比特币时，矿工们知道减半之后还剩 50% 的比特币。当区块补贴减半至 25 比特币时，矿工们一眼就知道 50% 的比特币已经投放市场，在本期减半之后还剩 25% 的比特币。 简单地说，区块补贴等于该次减半周期结束时剩余比特币的百分比。 因此，当我们进入 2020 年下一个减半周期，补贴减少，矿工和生态系统中的其他人很容易地看到，每个区块的补贴为 6.25 比特币，只剩 6.25% 的比特币可以作为补贴。也就是说，93.75% 的补贴已经收到，在接下来的 4 年中，每年只有最初比特币的 6.25 除以 4 的百分比即 1.6% 可用作补贴。 不可持续的指数增长 因此市场中的矿工将非常清楚，比特币的补贴是不够的。减半不会通过价格的突然上涨创造出比特币价值猛增。 与芝诺悖论不同，某些以庞氏骗局方式推销比特币的人，认为比特币的价格每逢减半就会翻一番，这种观点受制于波斯棋盘或大米与棋盘的问题。 他们错误地认为价格必须不断翻番，却没有理解指数增长过程会很快失去控制。指数级的增长不可能永远持续下去，就像棋盘上每格翻倍的大米一样，最终会耗尽我们所需的任何东西。在我们的场景中，地球上没有足够的价值和钱在补贴消失时继续让比特币的价格翻倍。 更重要的是，它看到了方程式错误的一面。当补贴降到每个区块 6.25 比特币时，意味着将近 90% 的比特币总供应将已在市场上。矿工不是唯一的市场。如果补贴是唯一的赚钱途径，而交易费不能成为区块收入的主要供应部分，那么矿工将与市场无关。 庞氏骗局无法继续下去，总会有崩盘的一天。如果比特币不扭转这种模式，让交易费的占比增加、使得区块补贴在矿工们赚取的总回报中占比微不足道，那么比特币就不会有任何价值。 幸运的是，我们已经在扩容测试网络 (STN) 上证明了 2G 大小的区块，并将进一步增加容量至一定水平，使得应用程序和其他开发团队能够跟上。在未来的几年里，我们将运行达到数十 TB 大小的区块。这样做的速度和成本，使我们能够容纳全球所有其他交易。我们将比 PayPal、Visa、万事达或现金更安全、更低廉地做到这一点。 比特币的价值不在于颠覆政府或银行，而在于比特币的效率更高效。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 减半机制 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-economics/fees.html":{"url":"chapter-economics/fees.html","title":"手续费与流通","keywords":"","body":"手续费与流通 从挖矿奖励到手续费 比特币本身是一个自身完整的经济体，有着稳定的产出预期，随着难度的不断提升，矿工在电力和硬件成本上花费大量的经费，挖矿不再是某些爱好者而心血来潮地参与的个人兴趣，而更像是一种社会契约，需要慎重考虑的投资行为。比特币平均每 10 分钟生成一个区块，每 4 年一个周期奖励减半。我们离下一次奖励减半，也就是 2020 年左右，越来越近了。由于新币奖励减少，矿工将越来越依赖于交易手续费总额的奖励。这意味着矿工们将更加依赖交易手续费和交易量。他们的收入将来自多个渠道，不仅仅来自支付交易（支付交易需要的数据量最少，因此其费用也将最低），而是来自于代币应用，智能合约应用，嵌入数据、文件和 OP_RETURN 指令的应用程序。 影响矿工是否愿意继续花费大量精力维护网络的方式有以下三种： 用户是否愿意为交易支付持续上涨的交易手续费 不断为矿工发行新币，增加新币总量供给（鉴于比特币协议中约定的总量限制，这点不太可行） 增加每个区块的交易量，从而增加手续费总额 对于所有人，包括购买力较弱的人来说，为维持比特币的非通货膨胀性质，比特币必须进行大量链上扩容。也就是说，区块链本身必须扩展。试想一下，如果链上每秒能发生数百万笔交易，矿工得到的货币激励就会随之而涨——反之也加强了网络的安全性。但如果不采用大区块的方式扩容，而是像比特币核心（BTC）那样人为设定区块的上限容量，通过链下解决方案来实现扩容，如闪电网络（Lightning Network），并不能带来类似于链上扩展的交易量，只会带来链上费用的不断增加或通货膨胀。闪电网络在链下扩容（假设可行）方面运用的越多，交易手续费会越高，或者通胀会越厉害，如此才能够满足节点运行所需的费用。 比特币的区块奖励预计将于 2020 年再次减半，降到 6.25 个比特币。因此如今正在挖矿的矿工们在两年后能够拿到的奖励只有今天的一半。要保持目前的盈利能力，就意味着他们必须在两年内以其它方式弥补 6.25 个币值，这势必通过交易手续费用及更高的交易量方可完成。像比特币 BTC 这样愚蠢的想法往往会说 “币量减少后，价格会翻番”。但实际上并不是币量减少，而是被挖出来的比特币少了。仔细想想，就能发现那这种想法是拉高出货的旁氏骗局。不久前的莱特币减半后的算力因入不敷出而关机已经是一个警示，2020 年我们将看到挖矿币量减半但或许价格不变的局面。 比特币的个人交易手续费应保持在较低水平，以便人们可以继续使用比特币网络，这是比特币作为电子现金的初衷。而这也意味着交易量必须提高，也就是说我们必须从现在开始着手大幅提高区块规模。 我们可以建立一些模型来分析交易手续费应该保持在什么水平才能弥补下次减半将要失去 6.25 个比特币的区块奖励。假设比特币的单价为 1,000 美元，那么要弥补的区块奖励损失将为 6,250 美元，当比特币的单价达到 5,000 美元时，需要弥补的损失将会达到 31,250 美元，而当币值达到 10,000 美元时，需要弥补的损失将会达到 62,500 美元。 我们还可以对各种交易类型分别进行分析，假设一个区块中可能不仅只是简单的支付交易，还包括各种智能合约或者 Token。支付交易的字节非常小，只有 225 个字节，相比之下，智能合约交易大约为 1,000 个字节，而代币需要 1,500 个字节。 那么我们可以分析三种可能出现的交易手续费费率。在此，我们均采用每字节的美元价格（而非聪）作为计量单位。按照这个思路，比特币网络的发展演变决定了交易手续费是处于低、中、高哪一个水平。在这个基础上进行建模分析时，交易手续费会发生什么样的变化？当然，费用的多少取决于交易的规模。 在交易手续费为 0.00009 美元（即每字节只需要一美分的一小部分）的低费率水平基础上建立了模型，分析结果显示，支付交易的手续费用处于低费率时（仅为本模型分析之目的，实际上这个费率水平仍然居高）约为 2 美分，智能合约交易约为 9 美分，而代币交易约为 13 美分。 我们对中等和高费率也进行了建模分析。此外，我们认为任何给定区块均会保存这些交易类型的不同部分——因此，我们没有办法作出准确预测，只能对平均水平作出评估。实际上，通过这种方式得出的费率会比我们认为的理想费率要高，但是这也意味着，即便我们提高了个人交易手续费，仍需扩大区块规模。接下来，我们针对 “要填充一个区块，收取足够的交易手续费来弥补区块奖励的损失，需要的总交易量是多少？” 这一问题做了分析评估。 如果区块容量完全由支付交易（字节数最少的交易类型）填充，那么你需要完成大量的支付交易。你大约需要完成 160 万笔个人交易才能使手续费达到 5,000 美元的中等币值水平。如果我们将各种交易类型组合起来，假设其中 40% 为支付交易、30% 为智能合约交易、30% 为代币交易，所需要完成交易量则会大幅减少，这是因为有些交易类型的字节数较多。每个区块的总交易量大约为 80 万笔。这一情况最终会对区块规模产生什么影响呢？ 这就解释了为何我们认为现在亟需开始着手扩展区块规模。 在低交易费场景下，我们计算了 “完成这些交易并产生 6.25 个比特币价值所需要的 最小 区块容量是多少？” 就最小容量来说，在比特币单价为 1,000 美元时（假设费率保持在较低水平），你需要 67.1MB 的容量，在单价达到 5,000 美元时，需要 335MB 的容量，而在单价达到 10,000 美元时，则需要 670.6MB 的容量。但是这一分析是基于整个区块均被填满的假设条件下做出的，而在实际情况下，没人会取用区块 100% 填满的比特币网络。 这仅仅是通过这些交易弥补区块奖励所需要的最低容量。在理想情况下，网络的区块上限应当（至少）为每日平均交易量的 50 倍，这样一来才能确保达吞吐量达到实现增长的水平。接下来，我们计算了 “在 2% 的区块容量利用率下，最大区块容量是多少？” 然而，如果大家希望采用不同的分析方法，可以选择 10% 的区块容量利用率，但是实际上我们并不想做这样的分析。如果大家想要进行较为保守的分析，可以采用 10% 的利用率来分析。在低手续费场景下，分析结果显示我们需要的最大区块容量在两年后将达到 3.3GB、16GB、甚至 32GB。如果交易手续费持续上涨，场景则会发生变化——我们并不需要大容量区块，因为这会导致交易手续费的进一步上涨。如果交易手续费用较高，那么我们在与其他行业以及类似技术的竞争过程中就失去了明显优势，也就无法实现足够多的交易量。因此除非交易手续费保持在较低水平，也就是说提供容量更大的区块，否则我们就会面临失败。 但即使在较高交易手续费的场景下，我们仍然需要讨论如何提供容量相对较大的区块。在这种场景下，最大容量可达 1.3GB、6.5GB 或 13 GB，甚至连最低容量也将达到 894MB、4GB 或 8GB。而这是两年之后的情形。 如果我们已经面临或者将要面临这种情形——大家可以按我的变量设置来查看结果，或者使用你们认为更加合理的数字来进行分析，但是会得出同样的分析结论。我们需要容量更大的区块来支持必要的交易量和规模，从而确保矿工们继续获得相同的收入，用以弥补区块回报减半的损失。而这在两年之内将会实现。 如果在未来两年内我们就必需要支持接近 4GB 或 16GB 的容量，我们需要立即采取行动，而不能在一年之后再开始行动。我们必须现在就要开始，因为这项工作的开展将起到至关重要的作用，如果没有开展，那么两年后，在挖矿利润下降的情况下，矿工无法达到所需交易量与手续费，进而无法产生实际收入，而这最终会威胁到整个比特币网络的生存与安全。 而且，我们不能单纯地把比特币局限在原有的（在我们看来也是最主要的）目标，仅作为一种电子现金。挖矿区块奖励即将腰斩的趋势并不足以支持整个网络的发展，而且这样一来，更不会吸引到大公司来将它打造成我们想要的样子——未来的全球公共账本。就像我们都在同一个公共互联网上生活、工作一样，我们真的相信并且要尝试开始着手向加密与区块链的世界发展，并且在比特币区块链这个唯一的公共账本上进行运营。 我们希望可以打造出一种可以实现全球快速导入的渠道，这不仅仅是为了支付交易，而且还为了便于大公司参与进行，只有这样才能带来对矿工至关重要的收入。矿工只有在保持盈利、挣钱的基础上，才会在两年后继续挖矿，而我们提倡的方式会为他们带来高溢价服务，例如数据、不动产物权注册服务等机会，由于需要的数据容量越来越多，他们的收入也会随之增加。 中本聪曾经说过：“再过 20 年，我们要么拥有巨大无比的交易量，要么一无所有。” 我们已经走过了 20 年的一半。如果我们在接下来几年中不去扩容，那么我们已然接近终点。事情就是这么简单。你们所有的投资都会打水漂。我们要么扩容，要么还不如什么也不做等待终点的到来。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 手续费与流通 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-economics/deflation.html":{"url":"chapter-economics/deflation.html","title":"通缩货币？","keywords":"","body":"通缩货币？ 观诸货币的历史可以知道，货币的价值或购买能力是随着货币与商品的交换而渐次展开的，当货币购买的商品增加时，货币的总价值也增加，商品灭失时，货币的相应价值也灭失，货币的总价值亦减少。至于特定时间的单位货币的价值则取决于不同人群之间的博弈，因为历史上货币的总量是未知的，故单位货币的价值由看不见的手决定的，处于一种动态平衡之中，但特定时间的货币总价值是恒定的，因为特定时间的总商品与总服务是恒定的。以此看，金银天然是货币，而法币不是天然货币。因为法币的价值不是随着货币与商品的交换而渐次展开的，法币从一开始的价值是强制规定的。 比特币虽然是人为设计的，但它仍是货币。因为真正比特币的价值是随着交换商品与服务而渐次展开的。比特币诞生时的价值为零，当以比特币作为本位币购买的商品与服务多起来，比特币的总价值也逐渐升高。同样的，在比特币的成长过程中，也会有商品与服务消失，则相应的比特币价值亦消失，不过总的来看，随着生产的增加，比特币的总价值在逐渐增加。 但比特币与金银存在两个重大不同，这两个重大不同，也决定了比特币可能在人类历史上第一次取代金银而成为真正意义上的世界货币。 第一个不同，比特币的总量是预期稳定的，而金银的总量则是未知的。故比特币的单价或单位购买力是可以预期的，由费雪公式所预期，大致等于已交易商品或服务的总价值除以比特币总量再除以流通次数。故理论上讲，在当前法币占优下，比特币的法币价格实际上是可以预期的，这种预期可以阻遏投机。当前这种预期的前提是，应以比特币具有成为货币的全部潜能为前提。全部潜能包括可无限扩容的能力，快速交易的能力等。而当比特币成为货币已不可阻挡时，法币对于比特币的投机将不复存在，因为此时比特币已不需要法币作为参照对象，其自身已成万物尺度，投机已无任何意义。 与金银的第二个重大不同是，比特币在数学上、在物理上是可精确分割的。比特币最小的单位为聪(satoshis，缩写为 sats)，每个比特币等于一亿聪。 当每个比特币的价值非常庞大时，切换为 sats 单位可以让比特币的数量足够使用。精确可分也是比特币的根本特性，这是金银作为货币所不具备的。比特币不用担心灭失，不用担心私钥丢失，因为剩下的比特币在数学上总是足够满足交易流通的。极端点讲，即便若干年后，流通的比特币只剩下最后一枚，则该枚比特币的总价值即相当于全球流通的总财产价值，则每一聪代表着全球流通总财产的亿分之一，这个单位依然足够人们日常流通使用。至于因为比特币灭失等原因而造成既有流通量减少而对币值的影响，则受人类看不见的因素影响，是缓慢发生的。正如只剩一枚的极端情况亦是极其缓慢发生的，人们可能丝毫感觉不到，否则该枚比特币的持有人瞬间便有能力交换全球全部财富，这是不可思议的。 基于上述分析，我相信真正的那种比特币是符合经济规律和人性规律的货币，在数学上、物理上不存在漏洞，是可以成为人类货币的。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 通缩货币？ |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-economics/the-global-chain.html":{"url":"chapter-economics/the-global-chain.html","title":"万链归一","keywords":"","body":"万链归一 这里说的链，是指目前所称的区块链，包括比特币以及比特币的各个分叉链，以及 ETH、EOS 为代表的所谓公链，还有联盟链、私有链如摩根大通、Facebook、Twitter 等等拟发的公司链, 以及各个交易所平台声称要发行的平台公链等等, 当然也包括链上的币。我说的万链归一，是指上面所有这些链都将归为一条链或一条主链。归一包括两个归一，一是价值的归一，即所有这些链的价值都将被一条链所吸收，即只有一条链的币形成通用的交易媒介或通货或货币；二是数据的归一，即所有这些链的数据都将向一条链集中，由一条链提供算力安全保护与存储，不过强调一点，归为一条链的数据不一是都是原始数据，数据哈希亦是，当主链只存数据哈希时，则原始数据可存于其他地方，但与主链上的哈希形成一一映射，以保证原始数据的不可篡改。价值与数据的归一，本质上就是区块链的功能归一，也就是所有这些区块链的核心功能都将归一到一条链上去完成。当归一后，区块链的概念可能消失，取而代之是能够统摄所有这些无数条区块链的唯一概念，这个唯一概念类似互联网（Internet）但超越互联网，或许是 Metanet 即元网，不过这是后话。 要说清楚万链为什么归一，颇为不易，先从区块链的起源和概念说起。 区块链 区块链技术所要解决的是困扰计算机技术界多年的一个悬而未决的问题，即互不通信的多方如何为实现同一事务达成一致？又叫拜占庭将军问题。这一问题在人类的现实社会亦存在，即散居各地、互不买账、互不交流的人群如何形成一个统一的秩序或国家类实体？轴心时代以来，人类大致发明了两种技术以实现秩序，一曰古希腊罗马以来的选举制，二曰东方始皇帝以来的君主制，两种制度互有优劣，不论，但有一个共同点，即都有一个中央决策与执行机构，以保证散居各地的人们可以通讯，从而形成秩序化结构。 计算机世界里，需要多方共同实现的事务莫过于数据的传输与存在了，即如何保证你接收到的数据与原始来源数据是一致的，是未经篡改的？换成社会领域，即拜占庭城外位于不同方位的不能直接通信的多个将军，何以判断他接受的攻城命令是真实的？或远居边疆的百姓何以知道他收到的纳税税率是来自真实皇帝或政府的命令？ 中本聪想出了一个天才的办法，即欲取得传输信息或处理事务的权力，此人必须先付出代价，在计算机领域最大的代价莫过于消耗算力，也就是你必须用算力先完成一道难题即哈希谜题，率先完成者方能取得传输信息或处理事务的权力，当然你付出了代价，亦获得相应补偿，包括系统给你的比特币奖励和处理事务的费用。当你赢得算力竞赛，即可取得原始数据记入账本（区块）并打上时间戳，而后来的胜出者则在验证前一区块的基础上，继续添加新的账本，由此形成一条均由原始数据形成的区块链。在这一过程中，任何率先取得原始数据的人如欲篡改数据，则面临不被后来者确认的风险，而后来者如不欲确认前面的原始数据，则亦面临被更后来者孤立的风险，如此逼迫所有人诚实。不诚实的代价不仅仅是损失已获区块收入的风险，更面临被排除在系统之外的风险。 此一过程可比拟为，先定下规则，取得攻城指令的各个信使展开一场百米赛跑，只有竞赛中的第一名才能获得将指令交与将军的资格。如此将军们知道，他们所获得的一道道指令均来自原始的攻城指令，未经过篡改，且将军还知道，只有将手中的原始指令迅速传给下一个将军，攻城指令才能最高效的执行。如此，算力力求更快，信使（节点）之间的传播力求更快，系统形成一个高效的自进化系统。 这样，无论是计算机中的多方执行多一事务，还是现实生活中的协同攻城，在有工作量证明的前提下，无须第三方信任，无须第三方协调，指令可顺畅执行。还可以看出，这里信使花掉的工作量，实际就是节省的第三方信任的成本。这个成本在现实生活中是无比巨大的，举凡银行、会计、中介事务所、政府相关部门、贸易代理公司......均是第三方。因算力消耗的能源，与节省的巨大成本相比，实在微不足道。 能量黑洞 区块链是有成本的。 区块链就是由一个个信使（节点）组成的网络，节点以消耗巨大算力或能量而取得记账权，同时以更快速度向其他节点传播，其中算力消耗的能量占整个系统消耗能量的最大部分，且巨大。因此，能量是区块链稳定的基石，区块链是能量网络。这是与 Internet 的根本不同，也决定了区块链的功能区别于 Internet 的根本之处。因为消耗能量，区块链保证了其上传输数据的不可篡改性，这是区块链的唯一特点，由此不可篡改性推演出万物。举凡现实生活的一切可计算化数据皆可上链。中本聪设计的巧妙之处是，一切数据的上链皆以交易（Tx）的格式进行，也就是任何一个数据的上链与链上传输均抽象化、数学化成一笔比特币交易，比如房屋产权的登记是一笔交易，房屋买卖合同的签订、房屋的过户亦是一笔笔不同的交易，至于货币如比特币则更是最简单的交易 UTXO，因交易（Tx）而将现实的可数字化人类生活全部上链，因交易 Tx 而连通万物，衍生万物。 现实生活中的交易是无比巨大的，其生成的 Tx 数量也是无比巨大的, 因而区块链中消耗的能量也是无比巨大的。大到什么程度？想象一下，现实生活中不直接创造价值的中介机构消耗了多少能量，则区块链亦将聚集与其差不多的能量。当交易全部上链时，也许 100 个三峡的电力也远远不够。是浪费么？非也，此处用了 100 个三峡，则彼处省下的远远不止 100 个三峡。 能量有集中或黑洞趋势。一个内部开放的系统总有不断吸收外部能源的趋势。吸收的外部能源越多，则能吸收更多的外部能源，形成正反馈，直至内外平衡。此恰似天文物理学中的黑洞效应，又恰似社会领域中的国家或国家领导人，一个国家或国家的领导人越开放，则这个国家越能吸引更多的归顺者，并扩大更多的疆土，所以你的心有多大，则你的世界有多大。区块链世界，那条最开放的公链，亦能产生黑洞效应，不断吸收外部能源，当然也包括外部的区块链，能量越大，则吸收的外部区块链越多，直至剩下一条能量最大的区块链。这条最大的区块链便成为类似 Internet 或地球，成为人类活动的平台。 注意，我这里说的区块链是指采 PoW 机制的区块链，至于采股权制 PoS 或所谓混合制 DPoS 等等的区块链不在本文讨论范围。PoS、DPO 机制，没有超越古希腊罗马的选举制、代议制，没有为解决拜占庭将军问题创造新知识，忽视之。 能量安全原理。万链归一在能量方面还有一个重要理由是 51% 攻击。51% 是指超过网络算力或能量 51% 的不诚实矿工有可能发起攻击，从而引起区块重组等重大事项，一句话不诚实矿工接管了网络。51% 本质上是一个经济学问题，即 51% 在经济上划不划算，非技术问题，与能量黑洞的自然形成过程不同，51% 更多的来自人类的主观恶意。故为防止 51%，系统必须集聚更多的能量，当能量足够大时，欲 51% 的人将根本不可能集聚足够的能量发起攻击。所以从安全角度，一条更有前景的区块链会激发欲诚实参与者的主观意愿，将其能量注入系统中，从而这条链的能量越来越高，最终往归一的趋势上去。 不过能量原理只是推演，只是趋势，因为说一千道一万，只要一个反证就可以证明万链不可能归一。比如目前，光比特币就分叉了三个大的独立链：BSV、BCH、BTC，更别提其他还有成百上千个链或币了，看起来，能量并没有集中，并没有形成黑洞的吸收效应，更谈不上将能量集于一条链防御 51% 了。 所以，还有下面的经济原理和法律原理，因为区块链这个数学物理上的能量系统，就其设计本质是经济系统，受制于经济规律，而经济须在法律范围内活动。能量、经济、法律三者相互成就，相互影响。 成本最低原理和可替代原理 成本最低原理，是指存在多个独立的系统可以处理同一事务时，经济资源总是倾向流向成本最低的那个系统。这个容易理解，人都是经济理性，只要资源能够在不同区块链间自由流动，为了赚钱，成本最低的那条链总能吸引最多的资源，又如果其成本是预期稳定的，即系统的低成本是稳定可期的，则成本最低的链最终会成为最大链。但最大链不一定成为唯一链，因为如果每条链都有其独特的、不可替代的功能，或者存在国家、行政区域、行业技术壁垒等等因素，则各链依旧可以独立存在，规模大小不同而已。故最大链如欲演变为唯一链，还需满足第二个必要条件，即可替代性。 可替代性，是指各链的功能可以相互替代。此种情形下，成本最低且功能最全的那条链就将演化成第一，又假如它居然能实现其他链的全部功能，则万链归于它。这条链存在么？存在的。如果你深刻理解了区块链的基本原理和基本功能，则当知道，这条链是必然存在的。当然如你理解比特币脚本的图灵完备性，则更能理解可替代性。 区块链的基本原理和功能是什么？简单至极。即前面提到的，实现数据在陌生人之间（即网络上）不可篡改的传输与储存，为什么不可篡改？其原理就是中本聪在比特币白皮书中阐述的 PoW 机制。当然要理解这一点，可能有些难度，可是如果不能理解这一点，就是没有理解比特币与区块链。从这个理解，可以得出结论，比特币就是区块链，区块链就是比特币，在比特币之外，不存在什么区块链。 将比特币或区块链与 Internet 相比，区块链仅仅多了一项功能，即在比特币网络上传输与存储的数据不可篡改。不可篡改，是比特币的全部核心、全部功用，以此而生无穷妙用。 如果承认区块链的功能是实现数据的不可篡改，则这一功能显然是可替换的，因为无论多少个区块链，无论采用什么共识机制、什么算法，如果最终实现的目的都是数据的不可篡改，那么无论采用哪一个区块链，最后实现的功能都一样，即是可替换的，此时具体采用哪一个区块链，则是经济学的另一问题，即成本最低问题，成本最低的将被选择。 我们可以看到，现实中的 ETH 可以实现发币，EOS 可以链上博彩，BCH 可以运行一些智能合约，还有些区块链声称可以法律存证，可以设置、转移证券型资产，但如深查，这些功能都是应用层面的，其与普通互联网、普通数据库、分布式数据库等等如有区别，其区别仍在于数据的不可篡改即去第三方信任，否则没有必须采区块链，采传统的互联网或数据库就可以了。因此从这些表面各异的功能或应用均来自其作为或声称区块链的核心功能—数据的不可篡改，既如此，当然可以替代。 进一步分析，我们可以发现，区块链是以链上的工作量即网络节点的算力作为实现数据不可篡改的保证的，这就要求一切需要不可篡改的数据或数据哈希都必须发在链上，否则做不到不可篡改。凡现实经济需要不可篡改保存的数据，需要去除第三方信任的数据，举凡交易合同、交易凭证、发票、交易双方适时沟通信息、样本图片等等..... 如欲实现区块链，皆需上链，因此能够替代其他链的唯一公链必定是区块容量极大，能够容纳下全球数据的那个区块链。 这个区块链只能是追求链上无限扩容的那条区块链。目前看，最有可能就是比特币（BSV）。 当然，比特币 (BSV) 能否实现链上的无限扩容，能否实现成本最低，也就是能否成为唯一的那条公链，尚需实践检验。但有一点无需置疑，无论区块链如何演进，其内在本质决定了其必走向万链归一。 法律上的证据唯一性与权利唯一性原则 法律是促成万链归一的外在原因，因为法律是由国家强制力作为保障的，尽管今后有可能将部分法律权力如标准的诉讼规则编入区块链的代码中，但主要的执行力量仍然来自链外的法律机构。法律从两方面促成万链归一，一是证据的唯一性原则，二是权利的唯一性原则。 证据的唯一性。证据的唯一性是指原始证据只有一份，世界上不可能存在两个完全相同的事物。当区块链可以实现全球交易数据皆上链时，由于其不可篡改的本质特征，存于区块链上的电子数据将会成为法律上的原始证据。两种情况，一是各区块链互相独立，彼此无任何关系，则各区块链的数据均得成为证据，但同样的事物面临多份原始证据时，法律将会迫使用户选择累积工作量最大，公信力最强的区块链，加上前述的能量和经济原理，将从外部推进万链归一；二是各区链有共同祖先，系祖链分叉而来，如 BTC、BCH、BSV 等，由于各分叉链复制了用户的同样数据，因此法律上将出现同一份证据的三份拷贝，且三份拷贝均属原始证据，如果三份证据所要证明的事实出现差异，此时法律将面临选择，将对三份完全相同的“原始证据“作为效力判断，基于证据的唯一性原则，此种判断可能导致万链归一，否则法律秩序混乱。 权利的唯一性。权利的唯一性是指任何一项权利都是独一无二的，不能重复设定。比如一栋房子，只能设定一个物权，不能一房二卖；一份合同，只有一个债权，不能重复主张债权。如果说区块链上的数据是证据，则每一份数据又代表着权利，即所谓数据即权利。当多链并存导致证据的唯一性受到挑战时，则权利的唯一性原则同样受到挑战。第一种情形，各链各自独立，且彼此无任何关系时，权利的唯一性原则将受证据效力的影响，并与证据效力性共同从法律上促成万链归一；第二种即链分叉情形，此时权利的唯一性原则将发挥极大作用，并可能导致国家以强制力的方式只保留一条链，比如三个分叉链均登记有同一套房屋的产权证，三个产权证均是“原始证据”，房东出现一房三卖，哪份合同有法律效力，应当卖给谁，此时法律必须作出选择，最有可能的方式便是以国家强制力的方式不认可其中两条链而保留一条链，从而迫使市场作出选择，最后导向万链归一。 唯一公链 为什么比特币 SV 必定能成为唯一公链？因为它的成本是最低的。 我们现在看到的公链等都存在两个维度，一个维度是应用维度，一个维度是账本维度。在应用维度就是你所谓的应用场景，可以做什么事情，可以在什么生态里面做什么来用，可以用来支付，可以买什么样的东西，可以交换什么样的服务，这是应用场景。它并不需要你底层的链一定是什么形态它才能完成这样一个应用场景，你只要具备智能合约的功能，你只要具备账本公开、可审计、可查就好了。 接下来是账本层面，所有这些币的转移全部都需要在账本上进行表现、存储、验证，哪个账本的成本最低，又能满足用户需求的话，这个账本将会最终胜出。我并不认为在这种情况下你可以找到另外一个成本更低账本来替代比特币 SV 账本。 那么拿打点钱包来说，打点钱包现在可以支持收 BTC 这个 token 了，这是在 BSV 上完成的，用户在转帐 BTC 的时候可以转到对应的 BTC 地址，然后打点钱包给用户发一个等额的 BTC token，这个 token 是写在 BSV 账本上的，那么我们就使用 BSV 的账本完成了一个 BTC token 的，在不同地址、不同用户之间的转帐。这笔交易链上完成，公开可查证，中间没有猫腻，更关键的是手续费极低。 在接下来的迭代版本里，打点钱包将使用这个功能，给大家提供使用 BTC 发红包的功能。你终于又可以以 1 分钱的代价来转 BTC 了，而且比使用闪电网络更加方便简单。 本质上来说，底层账本不重要，成本最低就行了，并不是说你的价值、你的币一定需要记在某一个账本上才行。这是值得很多做公链的人思考的问题；为什么我要做区块链，为什么我要做公链，为什么我要把这些联盟的商家拉在一起去做这个事情。 那么为什么 BSV 的成本是最低的呢？因为比特币账本使用的是 UTXO 的结构，UTXO 的结构就是你口袋里面的钱是不记名的，大家只要去验证，你这个钱从一个地方转到另外一个地方的转帐过程是否合法就可以了。我们在转帐的时候每次会花掉一些合法的 UTXO，生成了新的 UTXO，转帐完成，验证过程就结束了，非常简单、高效，它只对这个钱本身有效，跟用户、跟背后的账户是并没有关系，它很巧妙的把用户手里面的余额变成了一个通过你手里面的币进行加总计算，在个人本地就可以完成的过程。在这种情况下并不需要任何其他的人来帮你进行计算，每个用户可以以一种极低的成本在本地维护自己的钱包里有多少币可以用。 在基于账户系统里面的账本里面，你要想验证一个钱从一个账户转到另外一个账户，那么你需要对这个账户背后是不是有这么多币进行各种各样的验证，成本是非常之高的。而很多其它的共识体系，PBFT、DAG 等等的共识体系，其实他的每一个交易的验证成本都比比特币交易的验证成本要高很多，这在交易量尚少的时候并没有体现出来，但只要交易量剧增必然是成本极速上升的，并不能承载大量的交易。但是在交易量极大的时候，UTXO 账本的验证难度随着交易量仅仅是对数级别的，对数级别难度增长是一个很恐怖的事情，它是低于摩尔定律的，也就是随着摩尔定律的发展，这个成本只可能越来越低。因此比特币的账本可以有能力承载起一切交易、一切事物。 矿工负责维护比特币网络的安全，他们做的事情并不是说，为了防止大家犯罪，给每一个参与的人背后雇了一个保镖和警察，拿着枪指着你，一旦你出错我就把你崩了，这个成本是非常高的。现在我们现实生活中的法律体系就好像是无处不在的摄像头，如果你犯了错就把你抓到并对你进行惩罚，这是现在矿工做的事情。矿工在决定当网络上出现多个分叉的交易的时候，不同版本交易的时候，我应该选择哪一个交易而已。 所以，在这种情况下矿工额外的安全开销被平摊到海量的交易上面的时候，你会发现在海量交易下每一个交易成本上升只有一点点，但是每一个交易都很安全，但是这些微小的验证费用又能够支撑得起矿工的安全成本。 因此开发者要更清晰的看一看接下来可能会发生的事情，应用程序自身的交易、系统要如何去设置和其他的用户、开发者和应用保持更好的联系，不能再依靠广播、交易、过滤，把自己需要的东西保存下来。每一个开发者都应该把 SPV 模型从现在开始使用起来。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 万链归一 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"chapter-economics/micropayment.html":{"url":"chapter-economics/micropayment.html","title":"小额支付","keywords":"","body":"小额支付 互联网的商业模式 在此请先思考：目前的互联网服务是建构在怎样的商业模式的基础上？ 总体而言，目前互联网服务主要分为两种：“免费”类和 “收费” 类。为了支撑运行成本，“免费”类服务一般背后依赖于广告、赞助、捐赠等方式获取资金。而 “收费” 类服务的用户则需以按月续费等方式来定期缴费。 于是会遇到许多不便的场景，譬如：当用户只想浏览一篇需付费的文章，而又不想按年订阅；当用户只想听一首付费音乐，而又不想包月；当用户只想看一个付费视频的前 30 分钟，而又不想购买整个视频。 这些在现在的互联网上是难以解决的，因为成本过于高昂，而且用户往往不愿意为此而暴露自己的隐私。 小额支付的意义 由于 BSV 网络本身天然可以传送交易数据，且 BSV 网络拥有超低的跨国支付手续费，这意味着哪怕支付的款项只是 0.02 美元，手续费也只需 1%，从而将实现 “小额支付” 变成了可能。这就为 Metanet 里介于 “免费” 和“收费”中间的新商业模式——“小额支付”提供了条件。“小额支付”意味着按阅读字数收费、按点击次数付费、按观看视频的分钟数付费等方式将成为可能。 “小额支付”不仅可以让原本必须表面 “亏本” 维持 “免费” 的互联网服务商变得不需依赖背后的广告等收入从而更具可持续性，也可以减少过度消费的浪费，还可以改善目前受 “表面免费、用其他方式付出成本” 影响的用户体验。 而且 “小额支付” 天然地不怕价格波动，因为绝对金额太小，即便 BSV 的价格波动率再高也可以忽略差价。 目前全世界还有 17 亿的成年人没有银行账户，BSV 的小额支付是面向全世界所有人的、不因收入多寡而区分对待，可以极大的降低全球贫困地区参与网上交易等活动的门槛，这给了欠发达国家的人民能与其它人进行交易的可能性。 小额支付还可以用来保障 Metanet 的安全性，想象一下，如果每次访问网页都需要支付一笔微押金，退出该网页时网页服务商退还该微押金，将使得作恶者堵塞访问等网络攻击的成本变得无比高昂，这对用户的正常使用影响微乎其微，但对于攻击者则代价昂贵。 小额支付是一种破坏性创新，可以发起自下而上的演化和涌现。2013 年时比特币的很多创新都基于此，但很遗憾，由于 BTC 的扩容失败许多创意胎死腹中。而现在，我们将看到小额支付在 BSV 上重新焕发活力。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 小额支付 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"appendix/":{"url":"appendix/","title":"附录","keywords":"","body":"附录 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 附录 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"appendix/history-of-onchain-scaling.html":{"url":"appendix/history-of-onchain-scaling.html","title":"扩容纷争","keywords":"","body":"比特币扩容纷争 比特币近年开始出现大分叉，但很多朋友对于比特币分叉的起源及比特币历史不是很清楚。现在，我们来一起看看关于比特币历史， 比特币历史正文：比特币的扩容史 。 比特币历史正文：比特币的扩容史 一，比特币扩容纷争 比特币的扩容历史由以下两个阶段构成：由 Bitcoin 分裂 ——Bitcoin core、Bitcoin cash（2015.5-2017.8）, 继而 Bitcoin Cash 继续分裂 ——Bitcoin Cash ABC、Bitcoin SV（2017.8-2018.11）。此文中作者对比特币扩容历史中的前半段: Bitcoin 分裂 ——Bitcoin core、Bitcoin cash, 这个过程有了详尽的讲述。 注：由于比特币扩容经历了的第二阶段：Bitcoin Cash 继续分裂 ——Bitcoin Cash ABC、Bitcoin SV，此文中所标注的 BCH 均指目前的 BitcoinSV/BSV，不指代 Bitcoin cash/ABC。 作者：太阳谷 此文由作者于 2017 年 12 月 17 日首发于知乎 — 下面开始是按时间顺序更新的内容 — 摘要： BitcoinCash 是 “激进扩容” 一方势力，对纽约共识的回应。 扩容之争编年史： 2010 年 10 月： 中本聪提出 1MB 区块上限以抵御粉尘攻击，此时 1MB 上限是平均区块大小的 700 倍，他表示此上限可以在将来某个设定的高度移出（https://bitcointalk.org/index.php?topic=1347.msg15366\\##msg15366）。 2015 年 5 月： Gavin Andreesen 提出在 2016 年 3 月进行 20MB 扩容（Gavin Andresen : 提高块大小上限迫在眉睫） 2015 年 6 月： 中国矿业开会，发布 8MB 扩容的声明（中国 矿池 建议将区块上限提高至 8MB ） 一系列扩容方案提出： BIP100：Jeff Garzik 提出， 矿池在区块链上投票，每个难度周期根据投票结果取 75%算力 同意的区块大小扩容或缩容，每次最多改 5%） BIP101：Gavin Andreesen 提出，先扩到 2MB，然后每两年翻倍 BIP102：Jeff Garzik 提出，直接扩容到 2MB BIP103：Pieter Wuille 提出，每 97 天扩容 4.4% 2015 年 8 月： Gavin Andreesen 和 Mike Hearn 创立基于 BIP101 的 BitcoinXT 2015 年 12 月： 香港会议：Core 提出隔离见证（Segwit）方案，牵扯到的 BIP 有： BIP9： Version Bit 投票规则 BIP141：隔离见证，由 Eric Lombrozo，Johnson Lau ，Pieter Wuille 提出 BIP143，BIP144，BIP145，BIP147：隔离见证的一些其他功能 BitcoinUnlimited 创立，Peter Rizun 基于 Jeff Garzik 的 BIP100 提出了 BUIP005（使用 EB，AD，MG 信号的动态区块上限） 2016 年 1 月： Gavin 提出 BIP109：75% 算力支持下扩容到 2MB 2016 年 2 月： 中国矿业达成 “92 共识”，在 90% 算力支持下进行 2MB 扩容（币圈聚会达成九二共识） Gavin 创立 BitcoinClassic，基于 BIP109（75% 算力支持下扩容到 2MB） Mike Hearn 发文说比特币实验已经失败，社区被少部分人控制（Mike Hearn：比特幣實驗已經失敗） Segwit 上线测试网 Segnet 中国矿业在香港与 Core 达成 “香港共识”：计划 4 月发布 Segwit，7 月发布非见证部分扩容到 2MB 的硬分叉代码，见到硬分叉代码后矿业激活 Segwit 软分叉，并在 2017 年 7 月前激活 2MB 硬分叉。并约定只在生产环境内运行与共识协议系统兼容的软件（这个系统包含 Segwit 和 2MB 硬分叉）（比特币圆桌会议达成关于扩容的共识） 。 2016 年 4 月： 区块堵塞问题开始显现。 2016 年 5 月： Craig Wright 露面并自称中本聪，Gavin 称 Craig 曾在私下向他展示了创世区块的签名。最终 Craig Wright 没有向公众展示可信的签名。 2016 年 10 月： 新矿池 ViaBTC（10% 算力）部署 BitcoinUnlimited 2016 年 11 月： BitcoinCore 发布 Segwit 代码，并在 11 月 19 日开始区块投票 http://Bitcoin.com 部署 BitcoinUnlimited BTC.top 部署 BitcoinUnlimited CANOE 部署 BitcoinUnlimited 2017 年 3 月： AntPool 开始支持 BitcoinUnlimited 匿名作者 Shaolinfry 提出 UASF，基于的 BIP148（8 月 1 日后孤立不支持 Segwit 的区块） Sergio Demian Lerner 提出 Segwit2mb（后改名为 Segwit2x。主张合并激活 Segwit 软分叉和 2MB 硬分叉） 2017 年 4 月： AntPool 的 AsicBoost 引发争论 2017 年 5 月： 持有 83% 算力的矿池在纽约达成协议，开始准备 Segwit2x 2017 年 6 月： Segwit2x 按时发布 alpha 版 （项目由 Jeff Garzik 主持） AntPool 发布 UAHF 方案（如果 Segwit2x 未能及时激活，AntPool 在 8 月 1 日 UASF 时进行不公开的 BU 硬分叉） 85% 以上的算力在链上写 NYA 表示支持纽约协议 2017 年 7 月： Craig Wright 再次高调露面，表示支持 BU 路线，反对 Segwit 技术。并称将筹措 20% 的算力做 non-Segwit 矿池，用于在主链干扰 Segwit 或硬分叉一条没有 Segwit 的链。 UAHF 方案转化为 bitcoinABC 方案，在 8 月 1 日进行 8M 上限的硬分叉，分叉出来的新链币以 BitcoinCash 为名，简称 BCC 或 BCH。 讨论一： 纽约共识对扩容来说并不理想。 第一，没有新的团队或软件或新方案被引入。Segwit2M 基本就是在 Core 的现在的版本内，一改二。对于目前已经获得 43% 算力支持的 BU 来说，要加入 Segwit 的部分才能兼容，这事 BU 团队一直没干，并且把 Gmaxwell 提的 issue 给关了。新方案对 BU 客户端的改变是特别大的。同理还有 classic 和一些不知名的基于 qt 的软件，不过他们节点也比较少。Segwit 的维护，目前并没有第二个团队在做，带 Segwit 的客户端也都是在跟 Core 的更新。从这个角度上来说， 虽然这次 Segwit2M 不是 core 提的，但说因此就把 core 选下台了也太夸张。2M 硬分叉只是帮 Core 执行了他们答应过但没有执行的东西，并不是完全脱离了 Core 的指挥棒。80% 算力支持等于是帮 core 擦了屁股，救了他们的脑残激活线。可想而知，在未来的一段时间里，Core 依然对社区有很强的影响力，并依然占据着开发的核心，社区依然要和 core 的各种谎言反复扯皮。 扩容 2M 不足以支持很长时间。 第二，2M 并不是大区块，虽然比 1M 大了，但许多较激进的估算认为现在 16M 都是没有问题的，Gavin 近期向 BU 提议索性取消软件内置上限，让算力自己决定。2M 即便是在香港共识期间，都已经是保守的决定了。我承认 2M 不失为一种紧急扩容救市的手段，但香港共识过去了这么久，比特币链上交易规模今非昔比了，还是只到 2M，可以看出这 83% 的算力里面反对扩容的声音是很大的。在已经接受 HF 的情况下，依然不敢上更大的区块，这种动作将来会不会继续拖区块扩容的后腿？深表担忧。 第三， 共识没有达成继续扩容的机制。LTC 的圆桌提出，在区块半满的时候开始讨论扩容方案。虽然这种共识不一定能执行了，但能写出来已经是成功了一点点。显然 2M 很快又会满，到时候还需要扩容。好的方面是，已经有了 2M 硬分叉的先例，社区不太害怕继续扩。往坏处想，如果到时候 core 说区块就是要尽量小，1-2M 是小区块，3M 就是大区块了，不支持。这种情况怎么办？现在是堵太久了，大家都要 2M 了。2M 向 4M 的扩容，阻力可能更大，可能堵更久。这次新共识的达成，我们普通用户看不出来怎么能避免将来的拥堵。 讨论二： 纽约共识的第一阶段和第二阶段的阻力完全不一样 纽约共识的 segwit2x 方案，是先 80% 激活 segwit，再硬分叉到 2M。这里面的第一阶段，所有人都无异议。并且，不加任何修改的 core 节点，就和 segwit2x 的节点兼容。也就是说，在第一阶段，core 节点可以完全兼容，并不需要重新部署 segwit2x 节点。segwit2x 如此设计，也是为了维稳，怕节点占比最大的 core 节点因不兼容而掉线。 第二阶段，在 Segwit 激活 3 个月后，也就是 2017 年 11 月左右，就有了很大不同。Segwit2x 节点内置了计时，一旦 Segwit 激活超过 3 个月，上限马上扩大到 2M。core 节点至今没有进行更改，到 11 月时会继续按 1M 规则，拒绝旧节点。近期，core 方已经开始发布言论，倡议推迟 2M 的升级。这又给扩容增加了不确定性：如果到时大量 core 节点不升级，温和扩容派是不是还有勇气按计划进行 2M? 从之前流产的 8M，2M，香港共识来看，温和扩容派继续妥协的可能性很大。 讨论三： 极端扩容派的进攻 简单说说扩容届的分派， 极端扩容派：主张直接扩容，反对 Segwit 方案。BU 开发组，classic 开发组，ViaBTC 矿池，Craig 等 温和扩容派：一定要扩容，但可以接受 segwit 和闪电网络等方案并行。 bitcoin.com 矿池 (Roger Ver)，btc.top 矿池（@江卓尔），Antpool 矿池（吴忌寒）等。 保守派／中间派：态度模糊，言辞闪烁。Bcoin 开发组，币信（吴刚），F2Pool（王纯），BW，Slush，Bitfury 等 反扩容派：Core 开发组，Blockstream, 莱特币开发组。主张不扩容，主张用隔离见证和闪电网络来解决交易容量问题。他们设计了 Segwit，称将来基于 Segwit 的闪电网络系统才是比特币未来的样子。 从扩容争端历史上看，ViaBTC 是第一个运行 BU 节点的矿池，也是第一个运行非 core 节点的矿池，属于极端扩容派。BitcoinCash 由 ViaBTC 和 BU 开发组联手推出，直接 8M，并且路线图包含了更大方案。由于是小算力分叉，为了存活再加入了降低难度的设计。难度过低会被恶意算力干扰，难度过高则无法运作。目前的情况证明这个设计非常棒。 8 月 1 日以前，ViaBTC 和 Bitcoin.com 两个矿池明确表示会挖掘 BitcoinCash 链，大约一两百 P，除此以外，没有其他大算力表示支持，节点也只有几十一百个。8 月 1 日，未开挖以前，支持 BitcoinCash 的节点陡然多出来 2400 个，都部署在 AWS 云。开挖以后，又意外地出现来一个 MCpool 矿池，看起来算力至少有几百 P 甚至 1E，连续挖出许多 BitcoinCash 块，让 BitcoinCash 分叉取得来初步的成功。在 Coinbase Text 里，这个 MCpool 还留下来一个香港的地址 Genesis Block 269-273 Hennessy Road Wan Chai Hong Kong，google 查询给指向一个青年旅社，网友戏称这是香港青旅矿池。经查证，在此地址的大楼里（就是这个楼里有个旅店），有一个还未开张的做比特币方面的公司叫 Genesis Block，对方称挖掘 BitcoinCash 仅仅是挖着玩玩顺便宣传自己。这个说法很不可信，即便是只挖一天 BitcoinCash，也是几十万美元的损失，他们也没有在其他渠道宣传自己，公司连主页都没有。这说的不可能是实话，这算力背后是谁依然是个谜。唯一能确定的，是有富裕的大户在支持 BitcoinCash。 BitcoinCash 链启动后，神秘算力开始匿名，不再继续留香港的地址。并且，出现算力反复撤出的情况。根据 BitcoinCash 链的设计，12 小时出块数量不足 6 个即可下调难度。神秘算力通过反复撤出，重入，故意放空了几次 12 小时的区间，成功把算力降到原来的 20% 以下。这个动作让挖掘 BitcoinCash 的行为不再那么 “烧钱” 了（收入依然不如挖掘原链）。现在（8 月 8 日），BitcoinCash 链已经正常出块，每小时 3～5 个的样子，收益大约是原链的一半，其中四分之三是由匿名算力挖出的。 匿名的算力都有谁？起初最烧钱的时候，出来的 MCpool 是什么来头，2400 个节点是哪来的？也许有一天能浮出水面。 Genesis Block 公司 大多出块来自匿名的矿池，高调支持 BitcoinCash 的 ViaBTC 仅占了 11.3% 讨论四： 这个新的 BitcoinCash 现在，BitcoinCash 活下来了，获得了 10% 的价格。下面我们来讨论一下 BitcoinCash 相比于比特币的特点和优劣： 以一个山寨币的角度来说，BitcoinCash 的筹码分配非常公平。从比特币链分叉出来，所有在 8 月 1 日以前持有比特币的人都一比一获得了 BitcoinCash 币。大量新山寨币都存在开发组和创始人手里拿了太多币的情况（如 Zcash），目前唯有比特币已经充分分散到了市场里。 从开发路线来说，BitcoinCash 的开发组基本就是 Bitcoin Unlimited 那拨人，XT 和 Classic 也很支持。将来会走大区块快速确认低手续费的路线。自称中本聪的 Craig 也是强调这个路线。短时间内不会支持闪电网络之类的第二层的方案。个人认为 BitcoinCash 的路线在技术方面是更有前景的，闪电网络作为传统的第二层支付网络的改良版，基本是个死胡同。莱特币上线了 Segwit，为闪电网络做准备，可是现在闪电网络没上线不说，连 Segwit 交易也完全没有人在使用，可以说是毫无效果。（唯一的效果是炒了一把知名度？） 从知名度来说，比特币从来就没有知名过。BitcoinCash 作为大区块低手续费的币很有潜力成为支付货币，曾经支持比特币付款但因手续费过高而放弃了的企业，现在弄 BitcoinCash 技术难度几乎为零。一旦被市场接受，BitcoinCash 的知名度会迅速超过比特币。 讨论五： 接下来的局面 Core 开发组即将在节点中进行升级，其中一个更新是默认禁止连接 btc1 节点（Segwit2x 方案的节点），这个动作会将跟随 core 版本的节点带离纽约共识，即不会跟随 11 月的 2M 升级。对于温和扩容派来说，这是个很头疼的问题。态度较软势力可能会更倾向于妥协而推迟 2M 升级。至少，温和扩容派的态度不会非常强硬。如果他们态度会强硬，当初就不会签 Segwit2x 这样的方案了。core 节点毕竟是全网大部分的节点。11 月 BTC 到底能不能扩容到 2M，这是一个看点，我们看看接下来一段时间里，矿业对这个事情如何反应。 这一两天内（今天 8 月 8 号）还有几件事情要发生： 1，BTC 主链难度调整，增加 7%。 2，BitcoinCash 币价格上涨，很快挖矿收益将超过 BTC。 3，BTC 主链 Segwit 锁定。这事已经是板上钉钉，segwit 的激活已经没有悬念了。后面就看第二阶段的纽约共识如何运作了。 如果 BitcoinCash 价格上涨，出现算力流向 BitcoinCash 的情况，会不会对 BTC 的运行造成影响？BTC 现在已经很堵了，如果在难度调整后又加上算力流失，会不会造成市场上的变化？算力流失会不会出现马太效应，以至于撼动了比特币的基础？这又是一个看点。 8 月 18 号左右还有一个看点，就是 BitcoinCash 的常规难度周期调整，难度会再降，因为前面几天实在太慢了。 —–8 月 18 日的更新 ——– 8 月 9 号 BTC 难度调整之后，BitcoinCash 没有动静，开始进入蛰伏状态。同时比特币一路引吭高歌，直冲过了 4000 美金。 如前文所说，预计下一个看点在 8 月 18 号左右，临近 BitcoinCash 难度调整的时候。昨天（8 月 17 日），BitcoinCash 突然发动，和 BTC 的价格比例一夜之间从 0.065 冲到 0.13。在这个价位，挖矿 BitcoinCash 和 BTC 的收益基本是持平了。现在（8 月 18 号）距离 BitcoinCash 的第一次常规难度调整还有 200 个块，应该是会发生在这个周末。BitcoinCash 难度骤降以后，算力持有者如何反应，是个很有趣的看点。BTC 上的 SW 功能还有 5 天可以使用，可能大家也会等一等。我是完全看不出来 SW 的激活能带来什么改变，BTC 上仿佛是在试图重复 LTC 的 SW 激活行情。可是 LTC 的 SW 激活后几乎没有被使用过，急需改变的 BTC 链会不会能重复 LTC 的行情呢？短线市场真是谁也预测不了。 在 BitcoinCash 暴涨之际，Craig Wright 再次露面，提到这些： 重申了反对 SW 和 LN 技术（2017 年 8 月 16 日 BrightTALK 讨论的笔记整理 – 比特现金 / BCC） 他将建立 non-segwit 矿池，一边在 BTC 链挖掘干扰 SW 的使用，一边在 BitcoinCash 链挖掘。 他要拿出 3000 万美金来买 BitcoinCash。 他不看好 Segwit2X，不看好 BTC 今天就写到这吧，周末看看局面有没有变化，再来更新一点。 ———-8 月 18 日的更新结束 —————- ———–8 月 20 日的更新 ———– BCH 价格继续飞涨到 0.2BTC 后横盘调整，在难度调整前 BCH 挖矿就已经稍高于 BTC 了。今天，BCH 迎来了第一次常规难度调整，由于前期出块较慢，这次调整将难度直接减半，调整后的难度只有 BTC 链的 7%。这意味着， 同样的设备在 BCH 链上挖，得到的币是 1/0.07，14.3 倍于 BTC 链，而 BCH 价格有 BTC 的 20%，以人民币计算的收益接近 3 倍于 BTC 链的挖矿。果不其然，几个小时内 BCH 大量出块，估计总算力估算也达到了 1.6E。除了匿名的矿池之外，传统矿池目前只有 Bitcoin.com, ViaBTC, BitClub, 三家进来 BCH 挖矿，也许后面几天还会有更多的 “正规军” 入场抢钱。 机不可失，这个难度周期 2016 个块几天就要被挖完了。按照比特币的难度调整规则，难度提升一次最多 4 倍，过几天 BCH 的难度会被调整到 BTC 链的 28%。简单推演一下这个难度周期结束时候的局面： 情况 1，BCH 价格远低于 0.28BTC，这时挖矿 BCH 不如挖矿 BTC 划算，很多算力会撤回 BTC，剩在 BCH 链算力不足的话，BCH 链出块会减缓。极端情况下，会重新触及降难度规则（12 小时不足 6 个块降难度，是 BCH 独有的规则）。 情况 2，BCH 价格继续狂飙，BTC 链上涨触顶外加出块缓慢手续费飞涨（算力挪去 BCH 了），BCH 对 BTC 价格高于 0.28。这样的话，算力没有理由再折腾切回 BTC，而是继续在 BCH 工作。这种情况对 BTC 伤害很大，对已经拥堵不堪的链是雪上加霜。 相比之下，读者可以看到，情况 1 对 BCH 危险并不大，毕竟难度降低也不是第一次了，出块缓慢目前也不会堵塞 BCH 链。相反，情况 2 对 BTC 伤害很大。之前我们已经谈到，BCH 是有组织有计划的进攻方案，并且只有干掉 BTC 才能活下去。BCH 背后的神秘力量必定要努力让情况 2 发生。Craig Wright 放话说一个月内要筹措 2.15 亿美金和 3 万 BTC 来挺 BCH。这事有没有太吹，我们先不评判，至少从战术上能看出极端扩容派在朝着情况 2 推动。砸钱匿名挖矿，砸钱狂拉 BCH 价格，一夜之间把 BCH 交易量拉得超过了 BTC 和 ETH。这 BCH 背后的人不论是谁，他挺舍得花钱的。 第一次回答的时候，我说 BCH 要看 11 月的 Segwit2X 的情况。现在我改变看法了。极端扩容派进攻的烈度远远超乎想象，仿佛不打算等 11 月的机会，而想在 11 月之前就强行占领高地。下面几天的看点： 周一（8 月 21 号）矿池转向 BCH 的情况 周三左右，SW 在 BTC 激活时的出块情况和市场反应 BCH 难度再次调整时 BCH 的价格有没有超过 0.28 下次更新就放在 SW 激活和 BCC 难度再次调整之后吧。 ——–8 月 20 日的更新结束 ———— ———-8 月 25 日的更新 ————- 算力拉锯战 从上次更新以后，BCH 迎来了两次难度调整。 第一次的常规难度调整之前，BCH 的价格已经飞涨至 0.2BTC。常规难度调整又将 BCH 难度降到了 BTC 的 7.x%，当时 BCH 的挖矿收益大约 4 倍于 BTC 的收益，大量算力短时间内涌入，BCH 链算力一度达到 3.5E 算力，而 BTC 链上只剩下 4.5E。几个大矿池都调拨了算力去 BCH，包括 btc.top, Antpool, F2pool, btc.com, batpool, ViaBTC 等。也有一些矿池比如 bixin 和 BW，没有参与。BCH 链大约六倍出块速度，每小时几十个块，同时 BTC 链减速了一些。BTC 链立刻出现了巨大拥堵，一小时内确认需要的手续费徘徊在 0.003 到 0.004，内存池一度堆积 100M 以上的未确认交易。 由于飞速出块，BCH 的 2016 个块迅速完成，三天就遇到了下一个常规难度调整，难度被调到了 BTC 链的 30%。在难度调整之时，BCH 价格自由 0.16BTC，难度提高后收益下降，算力也迅速撤回到 BTC 链，BCH 链上几乎只剩下了神秘的匿名算力。匿名算力连续挖出几个块后也选择了撤退，连续几个小时 BCH 没有出块，昨天自动难度下降的机制再次介入，BCH 难度降到 BTC 的 10%。算力再次涌入，重复了上一轮的情况。之前分析过难度调整的情况，现在 BCH 价格没上来，所以发生了 “情况 1”，算力进进出出的拉锯。很难估计这样的情况还会持续多少个难度周期，如果一直这样持续下去，BCH 甚至会提前进入 “区块收益 4 年减半” 的规则。 BTC 目前的情况 BTC 一边，SW 顺利激活，并且迅速有 SW 交易在链上出现。第一笔 SW 格式的交易发送了 0.005 个 BTC，交了手续费 0.001，成为笑谈。一些细心的朋友也注意到，SW 格式的交易的体积比老格式的更大，也就是说想靠 SW 来一点点扩容的效果也是没希望了。当然，这也是意料之中。随着 BCH 带走了一部分大区块支持者，BTC 一边目前分裂更加严重，基本分为两个阵营： 1，Core 派。Core 开发组已经正式声明不会支持 11 月底 2M 计划，将继续以 1M 区块上限为规则。据称闪电网络已经成型，并会尽快在莱特币上测试，并尽快一到 BTC 上来，解决拥堵问题。显然这是不可能实现的，具体请看 @辛大龙 的回答。 2，NYA 派。强调纽约共识（NYA）应该被执行，并按照计划在 11 月底进行 2M 硬分叉。 舆论方面呼吁 NYA 的力量已经减弱了，主要支持者 btc.top 矿池也在提醒交易者 1:1 配比 BCH 作为保底，以免 NYA 失败后 BTC 崩盘。F2pool，BW，Bixin 等继续态度模糊。 双方在是否要添加 RP（replay-protection) 的问题上又出争论。Core 认为必须添加，更改交易格式，表示 2M 是另一种币（BCH 就有 RP）。NYA 派认为自己是主链，名正言顺不需要这样做。但是最近 NYA 派开始有妥协，可能最后还是会由于 “安全考虑” 添加 RP，这样市面上就有了三种相互无法交易的币：BCH，BTC-SW-1M，BTC-SW-2M 从我看来，随着强硬扩容派自立山头到 BCH，温和派开始 hold 不住局面，NYA 能否按计划实现已经很难说了。 BTC 的拥堵问题可能加速发酵 有人说 Btc 是堵不死的，我不认同。如果你看上文的扩容历史，自从 2016 年 4 月开始堵塞以后，以以太坊为首的山寨币已经占据的半壁江山。这还是在 “我们马上扩容比特币，只是要商量一下方法” 这样的承诺之下的。市场等待了将近一年半，现在 SW（隔离见证）成功激活，市场的耐心可就不如从前了。特别是被 core 的宣传洗脑的人们，相信隔离见证后马上有闪电网络，闪电网络可以解决一切，比特币涨 10 倍。这些信念都会在接下来的几个星期被现实击垮：BTC 依然堵，手续费一笔 10 美金比西联汇款还贵，除了交易没有任何使用 BTC 的地方。在股市里这叫利好出尽，局势不妙。 谁来破局 BCH 价格低迷而不暴跌，BTC 价格在非常悬乎的高位。局面仿佛暂时就这么僵住了。下面的走向如何呢？ BTC 方面，11 月底的 2M 如果能顺利执行，算是个大利好。2M 虽然小，但效果也可以很明显了。隔离见证和闪电网络可以继续忽悠一阵子，可是闪电网络一旦上线就是利空，因为大家会马上发现没有用。隔离见证小概率可能也还有其他 bug。虽然是在 LTC 上测试过了，但真有厉害的漏洞，发现的人是不会轻易公布的，而是会等到 btc 上再使用。 BCH 方面，下面主要还是看背后的神秘力量打算怎么搞。BCH 已经开始被商业方面接纳，其实是抢回了 BTC 丢掉的市场。由于 BTC 手续费过高，曾经支持 BTC 支付的商家都纷纷关闭了支持。这是很重要的一个被市场认同的渠道。另一方面就是价格战，这股神秘的力量有能力直接把 BCH 从 0.065 拉到 0.25，现在还能稳住在 0.14 以上，这是不容小觑的。下一波大战什么时候会来，这也是一个看点。估计最猛烈的变化都会在 11 月底之前，要抢在 BTC 的 2M 利好以前搞事。 近期的一个看点是 9 月 10 号在北京的大会，BCH 到底是不是比特币这个问题注定要成为焦点。挺有可能有重磅新闻要在会上宣布，毕竟这个时间点，太敏感了。 图：9 月 11 号的会议预告，题目非常激进 ——–8 月 25 日的更新结束 ———— ———–8 月 28 日的更新 ———– EDA 争议 EDA 即紧急难度调整规则，出块速度过慢即降低挖矿难度。 前两次的算力拉锯都是这个模式： BCH 难度下降到 BTC 的 7%／10% BCH 价格保持在 20%／16%，也就是说同样的算力现挖现卖的话 BCH 这边收益要高很多 BTC 链上的算力切过来狂挖 BCH，BCH 出块速度 6 倍于常速，BTC 出块速度减慢堵塞 2016 个块两天就被挖完，BCH 难度 *4（常规难度调整最多只允许 4 倍），几乎所有算力都撤回 BTC 链 BCH 触发难度下降规则，再来一轮 这样的局面有个问题，就是 BCH 出块太快了，2 天顶两个星期，中间只停了一天又开始下一轮。照这个速度，个把月就能挖出原本计划 1 年挖出的币，加速了通胀，增加了 矿工 抛压（快进快出的算力往往是挖来了 BCH 就卖掉换 BTC），甚至会让下一次区块奖励减半的时间点提前。这些状况在 BCH 社区内形成了很大的争议，以下简称 EDA 问题（EDA 即紧急难度调整规则）。 EDA 在设置之初，是因为 BTC 链难度过高，如果不下降难度 BCH 分叉出来后没有足够的算力来运作。但 EDA 的设置并没有加上时限，也就是一个会一直存在的功能，如果要拆除这部分代码的话会再次形成一个软分叉，所有挖 BCH 的矿工都要协调升级。这可能也会有阻力，因为不一定所有的矿工都能达成一致不降难度。EDA 饱受争议的是 “规则被矿工利用”。矿工通过联手停挖的方式，急速降低 BCH，再收割 2016 个块的 BCH “红包”。这样的行为被指为是 “牺牲了 BCH 的前途来挣眼下的钱”。因此也有许多人提议拆除 EDA。 其实拆除 EDA 并不解决任何问题。如果 BCH 难度高价格低，那么只有靠一两个大户不计成本地烧钱挖。一两个大户的算力不多，熬过一个难度周期后，价格不变，难度除 4（常规难度调整下调最多是除 4），一样会引发大量算力进来 BCH 链抢红包，然后两天挖完，难度乘 4，算力撤出，再靠大户慢慢熬下一个周期。这样的大户谁当得起？ 那么，如何优雅地利用 EDA 规则？要诀就是，把难度控制在高于 BCH 的价格，但又不高得离谱。BCH 的难度略高于价格，现挖现卖就不划算了，追求短期收益的算力会继续挖 BTC 链。但又不要太高，免得让挖 BCH 链的大户承担过高成本。对于长期看好 BCH 的大户来说，慢慢地挖矿是一种很好的吸筹的方式。匿名的矿工的几个收币地址上已经挖到了上万 BCH，一个都没挪出去，这吸筹的决心可见一斑。比如这两个： https://blockchair.com/bitcoin-cash/address/17Wk4GPKw9nZ9PbspzaxN3fv1L2m9NA9dg https://blockchair.com/bitcoin-cash/address/1BgatB78WrFLdCgnPnBqiDcNFFA46jkPZe 预防 EDA 发生很简单，EDA 的规则触发的条件是 “倒数第六新的块的出块时间在 12 个小时或很多之前”。也就是平均每小时半个块的速度，1/12 于常规的 10min 出块速度。只要维持当前难度的 1/12 也就是 8.3% 的算力，EDA 规则就不会触发，就不会突然有许多撸短线的算力进来。以 BTC 链 6.8E 算力／BCH 链难度是 BTC 链的 15% 为例，那只需要有 85P 以上的算力愿意暂时赔本挖 BCH（说明长期看好 BCH），EDA 规则就不会触发，难度会在几个月后才下调（除 4）。更理想的局面，如果愿意暂时赔本挖 BCH 的算力有更多，BCH 可以正常 10min 出块，2 周难度调整，就合大家熟悉的 BTC 一样了。 图：三轮难度下降造成的算力潮汐。 非常有趣的第三次 EDA 昨天的第三轮 EDA，精确地做出了如上分析的动作：在价格是 0.13 的情况下，难度被降低到 13.4%。别忘了，除了常规的 12.5 个币的奖励，挖 BTC 每个块里的手续费还有可以 4 个币，BCH 由于不堵所以几乎没有手续费，这样算下来挖 BCH 是略不划算的。如此精致的操作，让人不得不怀疑，第二次 EDA 的时候把算力压到特别低，是不是匿名矿工操作失误或运气极其不好造成的。 EDA 难度调整之后，BTC 链和 BCH 链的算力分别大约是 6E 和 1.5E，BCH 链上的算力主要是神秘的匿名算力（大约七八百 P，和之前差不多），非匿名矿池主要是比特大陆系的几个矿池。BCH 链居然达到了大约每小时 12 个块的速度，也就是说相当一部分的算力认为 0.13 这个价格是低估的（特别是支持扩容的比特大陆系），大胆在这里挖矿吸筹。推演一下这个难度周期里的几种情况： BCH 价格维持稳定，算力照这个节奏，难度将在一周后翻倍，届时如果 BCH 价格还是这个样子（0.14BTC），可能算力会撤出一半到一大半，BCH 减速到 20 ～30 min 出块，这个速度依然是很好用的一条链，手续费和速度都会优于 BTC 链。如果到那时算力没有怎么撤出，说明算力依旧长线看好 BCH 价格再 0.3BTC 以上。 如果 BCH 价格 “温和” 上涨到 0.2BTC，同情况 1，不会从 BTC 链吸引太多撸短的算力。 如果 BCH 价格继续下跌到 0.1 以下，BCH 可能需要再进行一次 EDA 保持存活。 如果接下来一周 BCH 暴涨到 0.3 ～ 0.6BTC，依然会出现大量算力短进短出的情况，这个周期被迅速挖完，难度调整乘以 4，到 BTC 的 54%。下一个难度周期就又可以恢复 “挖 BCH 略亏” 的情况 如果接下来一周 BCH 暴涨到 0.6 以上，那即便难度调整后也是 BCH 划算了，算力就不会回去了，BTC 也就崩盘了，可能性较小。 综上，接下来 BCH 价格上涨带来的算力潮汐问题已经基本控制住了，下面一段时间 BCH 的出块都不会出现忽快忽停的状况。如果 BCH 价格继续狂跌，只要匿名算力还在利用 EDA 规则正确调整难度，BCH 链的运作还是能保下来。 我的猜测 BTC 看起来暂时不会崩盘了，大结局应该在 11 月初以后。我猜测下面这个星期： BCH 的走势是横盘或温和上升，不触动短线矿工的算力 BTC 堵塞问题继续好转一点。BTC 走出双顶形态，价格开始下滑。 最近可能出现的新闻： BTC 方面：继 Slush 后，又有其他矿池退出 NYA（放弃 2M 升级）， BCH 方面：转账，支付领域快速扩张， 图：第三次 EDA 后的算力分布 ——–8 月 28 日的更新结束 ———— ——–8 月 30 日的更新 ———— 本来以为这几天没新闻了，结果今天又出个大新闻，来更新一下。 行情方面，BTC 没有双顶，反而创了新高。BCH 跌的有点狠，大家都挺揪心的，撤退的也不少。 大新闻：“上古比特币” 现身 一批 “上古时期” 的比特币被挪动了。这一批币每个地址有 50 币，一共 60 个地址，3000 币，都是挖出来的矿（当时的区块奖励是 50 币），挖出时间是 2010 年 1 月底。 https://btc.com/4b60dc9cd051f4489420018bf52ead4f1f1377b0e0b4f2bc552f31b2649230ab 这些币进入了两个 3 字头的地址。Core 的支持者解释为这是有早期开发者在支持隔离见证技术（隔离见证地址有时候是 3 字头的）。这都是忽悠！我们继续追查这进入第一个地址的 1000 币，会发现这 1000 币随后被清空，组合成了一个多输入多输出的交易。其中输出大多是零散交易。这是非常非常典型的交易所动作：给你一个 3 字头的多重签名地址充值，充值后币被组合到一个集储存／提币一体的多入多出交易。我有十足的把握，这 3000BTC 被充入了一个交易所。而同地址上的 BCH 没有被挪走。比如：https://blockchair.com/bitcoin-cash/address/1JtVnHAmAbmVXc93vfnfKnMK9yUFsQWHnd 一个 2010 年 1 月的矿啊，那时候中国还没有人知道比特币，比特币也还没有价格。2010 年 5 月才有人用 10000 个比特币买 pizza 券的事件，是比特币第一次与实物交换。这事有老帖为证 https://bitcointalk.org/index.php?topic=137.0 2010 年 1 月底时，参与比特币的人屈指可数，这不是中本聪，也是中本聪的熟人。前期没太多竞争者的时期挖到币很容易，中本聪手头的币应该百万币起。这些币从挖出到现在都没有动过，却在这个时间点进入了交易所，对 BTC 来说应该是巨大震撼才对。3000 币本身在交易所不一定能搞出什么动静，但是创始人级别的开发者现身抛 BTC 是一个很有导向型的动作，其他的手握大量币的早期开发者可能也会跟进，这是足以让 BTC 崩盘的事件。下面应该继续关注这个大事件，如果中本聪继续搬运更早的币，下一批可能是更早一个难度周期的币，更有威慑力，比如： https://btc.com/1NGFUjKkAXZhRCTf3NiDUgATTmNCYnXykv ——–8 月 30 日的更新结束 ———— ——–9 月 21 日的更新 ———– 由于一些众所周知的原因，过去一段时间里 BTC 和 BCH 都跌的很惨，几乎腰斩。9 月 11 号在北京的 Bitkan 大会也改到了 9 月 20 号在香港开。总算尘埃落定，中国方面的情况： 交易所全关 挖矿暂时还是合法的 这一轮固然是引发了暴跌，但这并不是 BTC 或者 BCH 的问题，而是中国的投资者被迫卖币撤资的结果。也许这一轮的影响很快就能够过去。从一个全球的视野来说，这对比特币未尝不是一件好事。中国的退出给了日韩欧美更大的发挥空间，也去除了 “中国大妈泡沫” 的风险。对于在国内的投资人来说，确实以后几年比较麻烦了，如果价格上涨，可能要再加价不少才能购买到。大的趋势上来说，我认为 BCH 的生命力更好，下面会继续讨论这一点。 香港大会 香港大会聚集了比特币届的 各路关键人物。这次大会的内容还没有完整流出，从目前看到的内容，我们可以知道，BCH 的支持者阵营在扩张。 对于钱包和支付商来说，支持 BCH 是非常轻松的选择，由于 BCH 的交易手续费低不堵塞，在小额交易方面体验很好。目前数字货币的支付主要就是小额的支付，买贵的东西也买不了。BCH 的支付渠道已经在很迅速的铺开，大概率会成为第一个真正进入欧美日韩支付市场的数字币（BTC 的支付应用去年一开始堵塞就夭折了） 几个关键人物的态度也很有趣。矿业领袖吴忌寒，原本是比较温和的妥协 Segwit 和 2M 扩容，现在更倾向于 BCH。同样的温和派还有 Roger Ver，现在也是一个劲儿的安利 BCH。极端扩容派的精神领袖 Craig（我觉得他就是中本聪），态度更加极端了。在问答环节，Craig 说道：“I dont think the other is bitcoin anymore.” 他强调比特币的核心之一是数字签名链条。现在 BTC 已经加上了 Segwit，签名链条已经断了，一部分签名被移到了主链之外。 路线的分裂 香港大会上，大家已经基本认同 11 月 BTC 会再次分裂成 BTC-SW-1M 和 BTC-SW-2M 两个版本。如果 1M 的市场份额很小的话，2M 版本对 BCH 可能有一点威胁。但我的观点依然是，BTC 的 2M 太小，也太晚，并且这种磨叽的态度和模糊不清的路线图，前景堪忧。我认为 Core 已经把许多人对比特币的看法给带歪了，1M 还是会有许多支持者的。 最近 BTC 又不堵了（没人想用了，也不打算扩张支付市场了），看下图，9 月份以后不太堵了。这简直是灾难。BTC 堵还不是最可怕的，最可怕的是又不堵了，就是现在的情况。好像一个人撞了几次天花板就放弃继续往上爬了。BTC 的路线模糊不清，一边要用主链扩容 2M 来缓解拥堵，一边又在寻找主链扩容以外的技术，比如隔离见证，闪电网络。现在 core 已经不提 “隔离见证就是扩容” 了，开始转移话题，说隔离见证主要是为闪电网络铺路，闪电是扩容。 相比之下，BCH 的路线非常清晰，就是扩张支付领域，多拉小额用户，坚持扩容主链。香港会议上 nchain（就是 Craig 的公司）表示 BCH 主链完全可以代替 VISA 级别的支付系统。BitcoinUnlimit 开发组现在和 nchain 合作，开始测试 1GB 的区块，大约每秒 3000 笔交易，已经比 VISA 系统快很多，当然还比不上双十一的支付宝。 既然说到 1GB 区块了，我叉出来谈谈刚才那个话题：Core 已经把许多人对比特币的看法给带歪了。Core 长时间宣传小区块对去中心化的重要性，曾经还说 2M 可以，现在 2M 也不认可了。主要理由是 1M 区块对节点服务器的性能压力小，人人可以运行节点，因此比特币可以维持最好的去中心化。支付困难的问题交给第二层网络（闪电网络和侧链等），主链做结算层。这其实和中本聪的早期设计完全相反，几个关键点 比特币是现金支付系统，不是结算层。比特币的目的是去除银行，不是造一个新银行。 手续费应该仅用于预防攻击，每个块还是可以留有一部分不需手续费的交易。接近于现在一些软件服务的会员制，免费也有够用但限制的服务，要高质量服务（快速确认）的话要付一点费用。 用区块链技术保障所有人的财产安全，而不再用银行的信用系统。 只有 Server Farm 需要设立节点，并通过挖矿来提供交易（就是现在的矿场） 只有发展初期需要人人设立节点并 CPU 挖矿，成熟后用户只需要 SPV 钱包而不需要设立节点。 比特币的去中心化是由挖矿实现的，不是运行节点。 （下图是一封旧信，当年中本聪在邮件组里写的）： 所以，一个理想的 BCH 的系统应该是： 经过支付领域的扩张，用户很多，主链交易很多 区块上限足够高或甚至没有上限，主链交易一般不会达到区块上限，因此手续费很低也会被确认，少量的 0 手续费的交易也会被接受。 用区块链技术维持安全，比传统的银行更安全，成本更低 节点由专业的服务器运行，运算速度和网速都很快。这个成本主要是交易所，支付商，矿池这些得利益的来承担。 普通用户使用 SPV（简单支付验证）的模式，随机连接 8-10 个节点，只下载和验证和自己有关的交易。 交易所，支付商，矿池遍布全球，节点很多，个别国家出问题也不会影响。普通用户每次连接多个节点，有个别节点使坏也不会影响使用。 整体规模很大，人人都用，根本无法被关停或干扰。 从这个愿景来看，每秒 3000 笔目前的技术下根本不是问题，每天 144GB 的区块数据，这个量给一个互联网方面的公司来说根本就是小零头。如果 BCH 发展到 VISA 这种规模，全世界各地乐意搞节点的公司肯定是多如牛毛，节点只会比现在更多更分散，而不是 core 说的节点会中心化被控制。 现在 BTC 已经彻底被 core 带歪了，要走向一个奇怪的路线： 主链每秒 3 笔，仅用于结算 有大量普通电脑建立的节点，网速和运算速度堪忧， 用传统的银行模式或充值卡模式来交易（第二层交易工具如闪电网络） 数字币还在发展的早期，现在 BTC 的 1M 每秒 3 笔也许还能用一阵子，2M 也许还能多用一会，但没有清晰的路线，没有扩张的心志，这前景堪忧。我看 BCH 前景一片大好。 算力拉锯 BTC 和 BCH 算力拉锯还在继续，不过好像稳定挖 BCH 的算力越来越多了，目前看暂时应该已经不需要再像从前那样折腾 EDA 了，目前 BCH 难度调整后速度略慢（20-30min 一个块），完全可以接受。全世界大半的算力都在中国，中国大半的算力在四川，四川大半的算力在康定。这次交易所的风波已经吓到大家了，一开始几乎没有人相信会下手这么快，几个星期之内就关停所有交易所，包括不涉及人民币的 BTC/BCH 交易。现在已经有很多忧虑，如果继续出现宣布挖矿违法，可能算力要很不稳定一段时间，直到这些机器在海外找到新家。 就算没有行政干扰，如果四川再遇到天灾，也会在一段时间里影响算力的。难度下调确实是 btc 难度调节机制的一个空缺。长久以来算力只涨不跌，而且是平稳上涨，一直没出问题。2016 个块调整一次难度，在升难度和降难度的时间上是不对称的。BCH 等于是提前测试了 btc 突然失去大部分算力的情况，eda 的机制也还算可行，BCH 这边也还在研究更好的调节算法。BCH 的大区块上限（慢速出块也不堵死），大量匿名算力（抗行政干扰），和难度调整机制，在极端情况下是比较有抗力的，更符合去中心化的 “不怕部分系统出错” 的精神，这是个优势。 BTC 方面 Segwit2X 2X 的重放保护依然在争论中，但无论有没有这个，都会有办法在 BTC 分叉后把 1M 链的币和 2M 链的币分离出来，分别交易，像现在的 BTC BCH 一样。如果 1M 链获得一定的价格，肯定要乱一阵子。 闪电网络的完成度很低 这是个很有趣的消息。在激活 SW 之前，一直是在宣传说闪电网络已经开始测试，已经几乎准备好了，只等 SW 激活铺路。现在发现其实完成度很低，并且和之前介绍的完全不一样。闪电的开发者指出 闪电也要有容量限制，将来也有扩容问题 所有通道的所有交易都要广播给所有人，数据流也是不小的。这个和之前宣传的普通人可以成为闪电节点，每秒万笔交易的说法完全不同。既然也是广播所有交易，那干什么不直接在主链上搞？ 暂时还上线不了 来源 Lightning dev: “There are protocol scaling issues”; “All channel updates are broadcast to everyone”・r/btc 关于闪电网络，非常推荐大家看一看同个问题下 @辛大龙 回答。 看来闪电网络是指望不上了，除了炒作币价，BTC 现在该拿什么留住用户？没法一直骗下去的，拿不出真材实料的发展，市场自然会另寻出路。相信将来大家一定会明白过来，BCH 的路线才是对的。 短期内的情形，后面就看 11 月份的三链大战吧，短期内（几个月内）哪个币占优势还真不好说。欢迎评论讨论！ ——–9 月 21 日的更新结束 ———— ——–10 月 16 日的更新 ————— 最近继续满仓套牢 BCH，BCH 阴跌，BTC 飞涨，心里有点难受。 BCH 的 EDA 修改的讨论 BCH 有由于当时是小算力分叉出来的，当时为了存活加入了 EDA（紧急难度调整）规则，规定了如果倒数第六个块在 12 小时开外，就降低难度 20%。大家也看到了，这个机制会造成算力的震荡：没算力不出块–》减难度–》太容易出块了算力全来 BCH 了–》难度周期提前结束–》加难度–》太不容易出块了算力都去 BTC 了–》没算力不出块。大致局面如下图，难得安稳了一段时间，是因为难度恰好和币价相当，挖两边没什么区别 EDA 的毛病主要是两个： 速度不稳定，一天是 1 分钟 1 个块，一天是 1 小时 1 个块。虽然 BCH 交易量小且大区块设计不会堵，但是一小时不见一个块还是很头疼的。 整体速度偏快。算力高潮的时候两天就能刷掉一个 2016 个块的难度周期，算力低谷的时候一天就能把难度降下来。整体来说这样的震荡会让 BCH 通胀快于 BTC， 现在 BCH 已经领先六千个块左右，大约是计划中一个半月的量。提前把这些块挖出来，会给市场带来更大的抛压，对价格不利。有趣的是，匿名矿工和一些大矿池的收币地址上都在八月以来屯了几万个新挖的币没挪动，并没有直接抛向市场。问题来了，他们想干什么呢？ BCH 社区已经基本达成共识，EDA 机制是要改一改的。这个修改将是一个硬分叉。只是怎么改法还在讨论中，目前大概有这么几个主流方案，给大家介绍一下： Tom Zander 的方案 (Bitcoin Classic 开发者) 争取最小程度的修改。 增加一个反向的 EDA，在出块过快的时候，加难度。原始的 2016 个块的难度周期依然保持。 优点: – 简洁，在算力稳定的情况下两个 EDA 机制都不触发和多年来的比特币难度调整还是一样的。算力不稳定的时候也能及时控制出块。 缺点: – 模拟实验结果表明，两个相反方向的 EDA 机制之间还是会有震荡的情况 deadalnix 的方案（Bitcoin Unlimited 开发者）: 类似于 K 线图里用的 MA 均线，一根快线（2 小时）一根慢线（2016 个块，正常速度 2 周），如果快线慢线基本重合，那按照慢线每个块调整一次难度。如果快线的平均出块速度远快于或远慢于慢线的速度（差 25% 以上），则按照快线的结果进行逐块调整。 优点： – 移动平均逐块调整的算法是从 zcash 那里抄的，不会有什么问题。只有快慢线的设计是新加的。 缺点： – 设计可能过于复杂了 – 快慢线的逐块调整，完全改变了比特币的难度调整习惯 – 测试表示，快慢线的设计在某些极端情况下还是会出现震荡 Kyuupichan 方案（好像也是 Bitcoin Unlimited 开发者）： 根据之前 6 个块的出块情况，逐块对难度小调整一下，或升或降一点点。每 2016 个块也进行一次难度调整，但是只能升难度不能降难度。 优点： – 算法简洁，难度上下在小窗口（6 个块）内是对称的 – 模拟结果表示非常稳定 缺点： – 2016 个块的难度调整是单边的，不知道会不会出问题 – 没有其他币用过类似的算法， 方案的优劣目前还在继续讨论中，都是旨在实现： 难度在大时间范围内（大约两周）和算力匹配 算力突然增加和突然降低时候（大约半个小时一个小时），难度及时变化，控制出块速度 不造成震荡效应让算力进进出出。 另一个讨论就是，这个修改是在 BTC 的 2M 分叉前做还是分叉后做。分叉前做那时间肯定是比较紧张了，好处是可以不用趟 1M 和 2M 算力之争的浑水。分叉后做的话时间充裕，可以再多讨论多测试。我估计是会取后者，明年再做。 1GB 区块的首次测试 前面回答提到的 1GB 区块测试上线了。1GB 区块意味着和 Visa 相当的交易运载量，眼下肯定是用不上了的。区块内的交易，不仅仅可以做转账，其实也还有许多其他的用途，比如公平的网络赌博（在线赌场无法控制随机结果，无法出千），知识产权的保护（将自己的知识产权以交易信息形式写入区块链，无法伪造或被修改），智能合约（比特币现有的脚本已经可以进行类似于以太坊的智能合约）等等等等。这几天 BCH 链上出现几个很大的区块，就是有一些组织在进行测试一些交易外的应用。这些研究原本都有，但是在 BTC 手续费上升以后就都暂停了。无论如何，1GB 区块是个很有趣的测试，给大区块发展的前景探探路。这个测试是 nchain 和 BU 开发组合作搞的，简单说测试的结论（来源：First 1GB Bitcoin Block Has Been Mined on Testnet）： 每个 1GB 区块对网络传输的要求大约是 20-50M （使用了 xthin 技术节省传输的数据量） 矿池每秒可以接收 1 万笔以上的交易 测试用的矿池并没有很高端的设备，大多是 64G 内存配 SSD 的 VPS，甚至有 16G 内存的台式电脑。开发者称当前市场上高档点的笔记本电脑都可以处理 1GB 区块的比特币节点。 因此，根本没有必要去搞第二层支付系统比如侧链和闪电网络。只要扩容，闪电网络所吹嘘的每秒万笔已经可以实现。 另外一个地方看到的闪电网络的开发组访谈，记者提问开发者闪电网络什么时候能用，开发者支支吾吾一会以后说 “大概一年半吧”，和 1GB 区块测试比起来闪电网络简直就是个笑话。 谈谈 11 月底的 “大乱子” BTC 目前是个 “怀孕” 的币，这个月要有一个 GPU 挖矿的 BitcoinGold 分离出来，11 月底 2M 也要和 1M 分开来。目前 BitcoinGold 还没有上交易所不知道价格，2M 在期货市场上大概是 1000 美金。也就是说现在持有 BTC 到 11 月底就有三种币了。也有人认为，正是这样的局面，逼本来不是 100% 保证金的钱包和交易所不得不买入 BTC 来预防挤兑，造成了最近的上涨。 我对 11 月底纽约共识的执行依然是不抱希望。从 BCH 的算力震荡来看，在币价不够高的时候，根本没什么算力愿意来挖，而 BCH 一降难度，算力全来了。如今期货市场上 1M 币比 2M 币贵那么多，如果这个价格维持到 11 月底，到时候各大矿池也就是象征性的去挖一下 2M 遵守一下共识，大部分算力还是会去挖赚钱的币。还有 SLUSH 和 F2Pool 这种大矿池已经明确表示不鸟纽约共识的，算起来到时候 2M 链 的算力很难超过 1M 链。由于没有 EDA 机制，算力一小就活不下来。 整体来看，现在 SW2X 一方的势力已经非常弱了。 开发方面，最近 2M 一方依然是在讨论重放保护的代码。2M 软件的开发非常混乱，左中右派混在一起，声音很多，尤其是 core 的声音特别大。Core 主张 2M 链上一个类似 BCH 的重放保护，让 2M 彻底和 1M 链隔离开来。但纽约共识的精神，又要求 2M 的重放保护不能破坏现有 SPV 钱包的兼容。现有的 SPV 钱包比如 Electrum，MultiBitHD 等，是无法直接支持 有强重放保护的 BCH 的，但是这些 SPV 钱包都不检查区块大小，所以直接 1M 改 2M，只要 2M 算力过半，这些钱包能自动用上 2M 链。现在 2M 开发这边，是又要迎合 Core 加上一个重放保护，又要迎合纽约共识不破 SPV 的兼容，想出来几个非常诡异的法子（细节就不介绍了）。上星期代码里 merge 进去一个方案，后来发现一个和闪电网络不兼容的 Bug 又回滚了，现在还在讨论中。但上重放保护基本已经是板上钉钉了，只是具体方案还在讨论。这种刻意绕开 SPV 兼容性问题的重放保护几乎一定会给第二层设施（侧链和闪电网络）带来 Bug，2M 一党里许多人是又想用 2M 来解决眼下的拥堵，又想在远期用第二层设施解决流量的问题，各种问题纠在一起非常难搞。这样的开发环境，就是成功扩容了，以后也是继续被第二层方案把持着，不会继续扩容到 1GB 区块。 交易所方面，很多交易所还没有表态，但现在期货的价格摆在这里，交易所直接不支持 1M 链是不太可能的，到时候肯定大多交易所会两个都支持。如果 2M 在交易所那里没有拿到 BTC 的名分（品牌效应），那也就和 BCH 在一个起跑线上。历史经验是，比特币出乱子，山寨币获益，从 BTC 拥堵开始，各路山寨币就龙腾虎跃，很多新入场的投资者根本就不投比特币。 我猜大佬们已经开始给自己留后路了。 BCH 算力震荡期间便宜挖到的币基本没有抛向市场，看来这些算力背后的人并没有放弃 BCH。BCH 和其他山寨币最大的优势就是继承了 BTC 在 8 月 1 日的余额，早期入场的万币侯们根本没地方抛掉这么多 BTC 币，如果 BTC 出问题，无缝切换到 BCH 对于他们来说是最理智的选择。 之前 2010 年挖出的 “上古比特币” 现身，也是只卖 BTC，保留 BCH，可见一斑。对于这些势力来说，把 BCH 压在一个 K 线图很难看的局面下，是很有利的，反正自己已经在车上了，自己屯着不卖还使劲挖，尽量要让别人提前下车，在低位就抛出筹码。这个低位能有多低，我不敢猜，以前我猜是 350 美元左右，目前已经跌破了。这个价位，如果我不是非常看好大区块的未来，以及非常看空第二层支付的方案，我肯定已经割肉了。BCH 要涨，一定是等 BTC 风头弱下去的时候。现在 BCH 市值小，流通也少，BTC 风头正劲 K 线好看，BCH 就很不抗跌。等 BTC 显出弱点，市值再次开始流失的时候，只要 BTC 有 10% 市值流向 BCH，那 BCH 就翻倍了，一旦开涨就是数着倍数来涨，像前段时间的以太坊一样。BTC 的市值流失几乎是一定的，我看 BCH 比以太坊和莱特币更容易接收到这流失的市场份额。 ——10 月 16 号的更新结束 ——— ——10 月 23 号的更新 ——— BCH 这边，bitcoinABC 开发组已经公布将在 11 月 13 日硬分叉更改算法，应该是会采用 deadalnix 的方案。代码公布以后我会再详细给大家介绍。目前赔钱挖 BCH 的算力很集中，更改算法也不是很大的路线纷争，应该不会因为这次硬分叉升级被分裂成两条链。 推演一下 11 月 15 号前后 Segwit2x 的几种局面 情况 1：顺利升级。 Segwit2x 获得全面支持，老链停摆，在交易所期货 BT2 分叉前获得比特币价格， BT1 归零，分叉后 Segwit2x 链继续使用之前的 BTC 简称。这种局面是温和扩容派的全面胜利，成功在 Core 的权威压迫之下成功进行了一次 Core 不同意的升级。对 BTC 来说这会是挺提振信心的事情，短期内是巨大利好。长期来看依然有缺陷，Segwit 的问题，2M 限制，未来路线的模糊以及 Core 的继续干扰还都存在，前文已经分析了很多了。无论如何，从目前各方的反应来看，这种情况已经不太可能出现了。 情况 2：直接失败，或拉锯后存活。Segwit2x 的期货价格一直维持在现在的水平直到分叉日，算力不得不面对 “守约挖 Segwit2x 还是放弃纽约共识接着挖老链” 的问题。 BCH 上面已经预演过多次，愿意赔钱挖一条链的算力不会超过 1E，而且这些极端派现在都在 BCH，Segwit2x 恐怕没有这么极端的算力，乐意赔钱挖。由于 Segwit2x 不像 BCH 有难度下降的机制，赔钱挖矿的时间是数月而不是数日，这更让 “信心算力” 的出现变得不可能。如果 “信心算力” 不能过半，恐怕支撑数天后也是要放弃。这种情况下，履行纽约共识的正确姿势是：部分算力支持 Segwit2x，部分算力偷偷去老链或 BCH 来度过缓冲期，等待局面稳定。纽约共识并未约定不许去挖别的币种。目前也有 Slush 和 F2Pool 没有声明对纽约共识的支持，他们有 1.4E 的算力很可能会直接留在 Segwit-1M 链。这种情况下，Segwit-1M 的 Core 链 和 Segwit-2M 的纽约共识链的价格会出现一定程度的拉锯，几天到一两周内能够稳定住价格的一方会胜出，价格低的一边会因为失去算力而停摆。由于 BCH 会在 Segwit2x 硬分叉之前把难度算法修改为移动平均法，突然冲入 BCH 的算力也捞不着什么好处，这会让 1M 和 2M 链的算力斗争更剧烈更快，因为算力的每一秒钟都是在烧钱的。最剧烈的情况，就是还没分叉算力就已经统一到一条链了，根本不出现真金白银的对峙。所以我认为，只要 Segwit2x 的期货价格不反转，基本到分叉日基本就没戏了。Segwit-1M 链胜出，温和的中间派必定将全体倒向 BCH。如果 Segwit-2M 链胜出，Core 一派倒是不一定会退出，很有可能会自己再次硬分叉降低难度或改为 POS 来存活。也有可能在 2M 的基础上继续宣传控制区块上限，鼓吹闪电网络等第二层结算方式，继续寻求话语权。 情况 3：和老链同时存活。Segwit-1M 链和 Segwit-2M 链在分叉前夕期货价格精准的 1：1 持平，分叉后算力也持平，两条链都存活下来，进入长期的拉锯战。接下来价格高低就看 BTC 这三个字母的品牌在哪边了，这种时候品牌效应还是很有用的。我不相信这种情况能出现。 情况 4：巨型黑天鹅，SW 出现 BUG。SW 有个 “众所周知” 的 bug，就是这条链会被 >50% 的算力攻击。有人说不是所有虚拟货币都这样吗？不是的，SW 的 51% 攻击和其他币的 51% 攻击是不一样的。 一般币的 51% 攻击：我在高度 12345 上发布一个交易，从 A 地址到 B 地址发送 1000 比特币。同时我用自己的压倒性的算力，重新挖出一条 12344-12345-12346 的链，不包含刚才的交易。这样 B 一开始以为我付款了，后来我付款的那个块被孤立了，最终成型的最长链里不包含我的支付。这也是为什么各大交易所都要求 3 个确认，6 个确认，就是防止出现你发送币给交易所的交易被孤立。一般认为 6 个确认后就几乎不会出问题了。小额支付（几万美金以内）经常 1 确认甚至 0️确认（块不满的时候）也可以，因为对于小额交易你没有经济动力去攻击。小额没赚头，大额肯定会要求多个块的确认很难做到，也没赚头，并且攻击窗口就是交易发布后的那一两个小时，过去了就没法攻击了。所以至今比特币没有发生过真正意义上的 51% 攻击。 SW 币的 51% 攻击：Segwit 交易带来了 “AnyOneCanSpend” 地址，它实质上是一个空白的交易签名。这种交易的签名被挪移到了附加的见证块里，因此这个技术叫做 “隔离见证”。当然，虽然这个交易的签名不在这里，矿池肯定还是会去附加的见证块里找出来核对验证。在大家都核对验证的情况下，安全性和以前是一样的。控制算力超过 50% 的矿霸矿池，可以直接放弃附加见证块的核对，并把 AnyOneCanSpend 地址里的钱转给自己，然后孤立那些去核对见证块的矿池。由于 Segwit 是软分叉升级，原来的那些没有 Segwit 功能的 SPV 钱包和全节点钱包还是可以用的，这些钱包也没有核对附加见证块的能力，这时候这些钱包都会认为矿霸的链是合法的最长链。和一般币的 51% 攻击巨大的区别就是：一般币的 51% 攻击只能退回自己的一笔支付，而 SW 币的 51% 可以花掉别人账上的钱，而且这钱的数字是从 SW 激活起慢慢积累变多的。SW 运行的越久，SW 交易运用的越多，这笔钱的数量也就越大，有动力攻击的算力也就越容易找。参考资料：Risk of SegWit – Mining Cartels – nChain 如果，当然这不太可能，我是说如果，在 Segwit-1M 链和 Segwit-2M 链算力拉锯的时候，有神秘的算力突然介入，在其中一条小算力链上实现了这个攻击，另外一条大算力链活下来以后会受多大影响？只要在小算力链是实现一次，就可以开始铺天盖地的宣传 SW 的 丢币 bug，以后谁还敢用 SW 格式的交易？Segwit 的部署是不可逆的，大家都不用 Segwit 格式交易了，还是必须保留 Segwit 的代码以验证之前的那些已有的 Segwit 交易，没法拆除这个有 Bug 的功能。承诺要基于 Segwit 实现的闪电网络自然也黄了，连莱特币也被 Segwit 功能污染了。等于是把所有带 Segwit 功能的币种的市场都摧毁了。这个攻击的方法是公开的，有匿名算力趁算力争夺期间使坏这不是完全不可能。 ——10 月 23 号的更新结束 ——— ——10 月 30 号的更新 —– BitcoinCash 的难度调整代码 现在离 11 月 13 号的 BitcoinCash 升级还有两个星期， http://bitcoinabc.org 宣布代码已经最终测试完成，新版软件将在 11 月 1 号提供下载。接下来就是大约两个星期的时间让 BCH 的矿池部署。 最终选择的方案是 Amaury Sechet（ deadalnix）写的，摘要如下： 1，最近的三个块，分别标号为 1，2，3，取他们的发布时间的平均数。 2，取大约一天前的块，分别是 144，145，146，取他们的发布时间的平均数。 3，比较这两个发布时间的平均数只差，和预期的比值如何（预期应该是 24 小时） 4，下一个出块的难度，就按这个比值来调整，每次调整最大是 *2 或 *0.5。 5，之前的 2016 块调整规则，和 8 月 1 号加的 EDA 规则，都不再使用了。 修改难度算法以后，立竿见影的两个效果： 平均出块时间稳定在 10 分钟左右， 不再有算力潮汐的现象，BCH 的算力和 BTC 的算力的比例将稳定在价格比附近。 这次升级应该会比 Segwit2x 的升级稍早一两天。现在大戏都排到 11 月中旬这几天了，做好心理准备！ 由于对 EDA 的修改这事基本没有争议（只是在算法选择上有过争论），所以这次硬分叉不会分裂成 2 种 BCH。如果少量继续维持旧链不升级，旧链能以小难度运行下来（EDA 规则），但目前的情况并没有经济利益可以支持足够多的人做这事。 从 8 月下旬开始讨论修改 EDA 开始，BitcoinCash 社区从开始提出讨论到测试评定完成只有 2 个月。提了不下十个方案，Bitprim 和 nChain 都对几个方案进行了大量的模拟测试，最后选择调整速度和稳定性比较均衡的方案。从代码正式发布到分叉点也只有 2 个星期，这还是被 core 妖魔化了的硬分叉升级。这样的效率在 BTC 上是从来没有过的，社区一直在吵吵要不要扩容，怎么扩容，也一直没有可以令人信服的证据表明扩容有危险，就这么拖了两三年。扩容 2M 这样的非常简单的改动，也被放在 Segwit 激活后三个月。 ——10 月 30 号的更新结束 ——— ——11 月 9 号的更新 ——— 温和派认输，宣布取消 Segwit2x 温和派发了邮件，宣布 “暂时搁置” BTC 的 2M 硬分叉（[Bitcoin-segwit2x] Segwit2x Final Steps）。非常意外。意外的不是 Segwit2x 失败，而是认输的这么利索。原本以为总要出几个块意思意思，或者至少撑到最后一两天。这提前一个多星期就这么利落的认了输，真是没想到。如之前所说，Segwit-1M 链胜出，温和的中间派必定将全体倒向 BCH。后面我会讨论一下中间派的势力和影响。目前在 Segwit-1M 链上，core 已经没有了对手，没有了争议，他们会不会有点失落呢？ BCH 难度调节算法升级背后的阴谋？ 前些天 BitcoinClassic 开发组的 Tom Zander 四处抱怨， 说 BitcoinABC 开发组定 11 月 13 号硬分叉，选 deadalnix 的难度调节算法，这些事都没有事先和其他开发组商量，而是突然公布，并且公布后矿业毫无惊讶地表示完全支持。Zander 指责这背后有阴谋，肯定是暗箱操作，闭门会议的结果。要不要赶在 Segwit2x 分叉前升级 BCH 的难度算法这件事，曾经是讨论挺多的，当时许多人都是认为等明年比较稳（请看我 10 月 16 号更新的内容）。11 月 13 号硬分叉升级显然是有点着急了，调节算法又是 11 月 1 号才发布。可能，仅仅是我的猜测，是有人急切要在 11 月 13 号上马新难度调节算法，因为他们提前知道 13 号以后会出现 BCH/BTC 价格算力的比例的大波动。（当然这也不算什么秘密，大家都知道 Segwit2x 分叉造成价格和算力的大波动是难免的。）为了做到 13 号升级算法，他们选择了和 BitcoinABC 开发组达成一致，选 BitcoinABC 写的难度调节算法。看看 BitcoinABC 开发组和 UAHF 这些事的历史，这事背后一定有比特大陆。比特大陆吴总同时也是宣布 Segwit2x 取消的那封信里的署名者之一。 这样想就得出了一个小阴谋论：一个集团，包括比特大陆在内的，早就安排好了 在 11 月 8 号宣布 Segwit2x，在 11 月 13 号进行 BCH 的难度调节算法升级这两件事。 细思恐极，这些人是什么时候开始计划放弃 Segwit2x 后半段升级的，是最近呢，还是很久以前，甚至是纽约共识签署之前呢？纽约共识从一开始看，怎么看都像是有问题的：先激活 Segwit，等三个月再进行 2M 硬分叉。纽约共识刚刚出来的时候，就已经有很多人质疑了，三个月后的 2M 硬分叉能保证么？拿什么保证？拿什么约束只想要 Segwit 的势力？当时，比特大陆系的大 V 们口径很一致：Segwit 和 2M 一起锁定，联合激活。并且矿业都在 BTC 链上的出块里标注 NYA，表示将在第二阶段支持 2M 硬分叉（除了 F2Pool）。纽约共识启动后，Craig Wright 跳出来说他要在短时间内组建 non-Segwit 矿池，用 20% 硬分叉对抗 Segwit，大家都以为是吹牛。可是 BCH 在上线以后，匿名算力（已经基本可以确认就是 Craig 的）火力全开的时候不下 1E（当时全网算力 7~8E 左右），许多人都惊讶这是怎么在一个月内组织起来的。更大的阴谋论就是：表明温和妥协的比特大陆，从一开始就做好了放弃 2M 升级把 Segwit 拱手让给 Core 的准备，用 UAHF 方案（后来这个方案转化为了 BCH）做 PlanB，一旦纽约共识有被撕毁的迹象，就 跳阵营到极端扩容派，转向 BCH；期间比特大陆作为世界最大的算力设备供应商，一边在暗中支持极端派，一边趁 BCH 难度低的时候过来猛挖。据 btc.top 称，btc.top 矿池和比特大陆 分别挖到了几万和十几万 BCH。目前看来，这些币都没有抛向市场，而是被囤了起来。 骂架阶段结束，真刀真枪的战争要开始了 明争暗斗，阳谋阴谋，无论如何 BCH 出来了并且发展起来了。BTC 链的政治斗争也结束了，再也不用去猜测这些说 “三个月后扩容” 的话是真是假，BTC 链已经彻底交给了 core，彻底走了锁定 1M 区块上线的路。八月以前的那个比特币（BTC) 已经不存在了，现在摆在面前的是简称 BCH 的修改容量上限和难度算法版，和简称 BTC 的加了 Segwit 的版本。比特币从 09 年发布起已经经历过许多大改动的升级，只是以前没有过现在这么大的分歧。谩骂结束，血战在即，把 “简称叫做 btc 的链” 当做” 原链” 的投资者，应该好好审事一下自己的投资了。 温和派走向何方 温和派失败以后，必定转向 BCH，这是我前面反复说过的。Classic 失败，香港共识失败，纽约共识在割地赔款的不平等条约下还能又失败，温和派不会再有新的” 共识” 了。我们再梳理一遍这些温和派的背景： 一些做应用生意的，支付商比如 Bitpay。这些商家的要求不高就两条，1，别堵，2，维稳别乱，这两条都影响做生意。他们在温和派里都是在等待 2M 升级可以解决堵的局面，并且平稳过渡不生乱子。他们不敢支持 BCH 这么一个小算力链，怕搞出问题砸了自己的生意。现在已经确定 BTC 链不会扩容了，希望已经破灭，过渡到 BCH 这是必然的。他们必定倒向 BCH 并竭力宣传 BCH，对他们生意有好处。 早期入场的大佬，比如 Roger Ver, 手持 20 万币是很难像我们小散一样卖币走人的。现在 BTC 出问题，完全被 Core 把持了，失去了最初的成为全世界互联网支付基础设施的愿景，现在无缝切换到 BCH 对于他们来说是最理智的选择。早期入场的大佬们只有抛 BTC 的，没人抛 BCH 的。Roger 已经说过，如果 Segwit2x 失败，他的 http://Bitcoin.com 的所有资源都将转向 BCH。这个域名是非常重要的门户，几乎可以定义谁是真正的 bitcoin。 矿业，短期内矿池肯定是逐利挖贵的币。比特大陆作为最大的矿业设备供应商，他们对挖矿的前景是最关心的。不扩容是没有挖矿的前景的，Core 的发展思路是要边缘化矿业，多次提出要改算法，矿业支持 BCH 链的发展，才能让他们的矿机有生意。并且，矿业大佬也都有很多 8 月份以前的 BTC。Segwit 在纽约共识达成以前只有 30% 算力的支持率，纽约共识后带来了额外 60% 的支持率，可见过半的算力有温和扩容的愿望。这里面的力量不容小觑。 大戏还没开始 现在到 13 号 BCH 难度调节算法升级还有一个星期，这一个星期里市场要好好消化消化这么大的新闻，如果要有大动作，应该会等 13 号以后 BCH 不怕算力冲击了再搞。这一个星期可以关注一下商家应用对 BCH 的支持，估计会有一些公司宣布转向。13 号前后可能会有大量算力转向 BCH。去超市买点爆米花屯着吧…… 如果你是从开头的扩容史一路读到这里，也不用问我说推不推荐买 BCH 了，短期要波动，长期来看肯定是 BCH 有前途的，要是现在这还能错了，赔光算了。 ——11 月 9 号的更新结束 ——— 11 月 10 日 这个答案里最后一更吧 关于 BCH 的内容还会继续写，新内容我会发文章，这里已经写太长了。 一个时代的结束 Segwit2x 取消之后 2 天，市场的反应：BTC 没跌，其他币都在涨 大概局面就是这样： BTC 上的 anti-fork 一派认为危险已经解除，松了口气，非常高兴 BCH 的大区块推崇者一派（比如我）认为中间派会倒向自己，非常高兴 其他山寨币认为比特币扩容失败，巨人即将倒下，都非常高兴 Core 开发组 “乘胜追击” 已经开始讨论” 去矿工化” 了，Policy to fight against “miners control Bitcoin” narrative・Issue ##1904・bitcoin-dot-org/bitcoin.org 要点： http://bitcoin.org 应该在更明显的地方讨论此事 http://bitcoin.org 上挂出来的钱包 / 服务，都应该签一个声明表示 “比特币不是被矿工把持的” 要开设培训课程，教教大家什么是真正的比特币 中本聪的白皮书有问题，赶紧改 中间派撤退，BTC 和 BCH 现在才算是正式地分成了两条链，两个阵营，两种路线，但共享同样的历史账本，算力设施和商家支持。两条链未来的斗争将围绕这几个方面，争夺老用户，矿池，和交易所 / 支付商。这是一个新时代，BCH 现在已经不再是尝试击破扩容僵局 “一个新虚拟货币”，而是已经成为了扩容问题的成功的解决方案。 所以，这是这个答案里的最后一更吧。关于 BCH 的内容还会继续写，新内容我会发文章，这里已经写太长了，而且主题也太不一样了。除了继续关注两条链各自的前途，以后我还会整理出这个扩容纷争的故事，从时间线，Segwit 技术争议，去中心化路线斗争这几个角度重现这几年的争论的始末。 二，比特币扩容纷争：“去中心化” 的争议 作者：太阳谷 去中心化的玄学 在币圈，“去中心化” 是个很玄乎的概念。在技术上，在经济上，都没有一个很清晰的定义。什么是去中性化，什么样的去中心化程度高，什么样的去中心化程度低？ 我们见过的事物里，有什么是去中心化的？ 去中心化常常和市场经济一起出现。就好像那个戈尔巴乔夫的经典问题：谁管理伦敦的面包的供应与需求？就是一个中心化和去中心化的思想的碰撞。简单来说，推动一个去中心化的比特币发展起来，背后的思潮是自由主义，市场经济，奥派经济。 简单的用面包店的市场经济来看比特币的去中心化是不够的，面包店的面包无法互通，而比特币是一种互通的货币。为了解释这个全球互通的属性，大家也常用黄金来做例子，尽管黄金的开采和交易现在都不是自由的。 从互联网技术上看，第一个进入公众生活的去中心化产品，应该是 BT 下载。中心化的下载，是用户直接从网站的服务器上下载，能不能下，有没有速度，都要看网站的。在人多的时候就容易堵塞变慢。而去中心化的 BT 下载，用户可以从其他用户那里下载，同时也上传给别人。在人多的时候，速度会很快。最开始提供资源的节点下线了，也不影响整个系统的运营，其他人依然可以继续分发下载。 所以，大家总结出来了去中心化的几个特色：Peer-to-peer (节点间没有地位高低，没有中央单位），抗单点失效，服务分散运行在不同的人和不同的地域，等等等等。这些都没有太多争议。 比特币去中心化的争议 去中心化好理解，可是在比特币这个具体的事物上，什么样是去中心化就有很大的争议。 争议： 矿业的发展带来的是更中心化还是更去中心化？ 我自己的观点是后者。其实，这个问题的核心并不是在矿业本身，而是在于对去中心化结构的理解，即：peer-to-peer 里的这个 peer （同侪，这字念柴）是谁？这个问题，如果你回答 peer 是你我这样的小散户，那矿业的发展显然是带来中心化，因为小散户没法用 CPU 挖矿了；如果你回答 peer 是算力，那么矿业发展是引入了更多的 peer 和更去中心化。 （一封旧信，当年中本聪在邮件组里写的）： 某人写给中本聪的评论： We very, very much need such a system, but the way I understand your proposal, it does not seem to scale to the required size. For transferable proof of work tokens to have value, they must have monetary value. To have monetary value, they must be transferred within a very large network – for example a file trading network akin to bittorrent. To detect and reject a double spending event in a timely manner, one must have most past transactions of the coins in the transaction, which, naively implemented, requires each peer to have most past transactions, or most past transactions that occurred recently. If hundreds of millions of people are doing transactions, that is a lot of bandwidth – each must know all, or a substantial part thereof. 中本聪的回复： Long before the network gets anywhere near as large as that, it would be safe for users to use Simplified Payment Verification (section 8) to check for double spending, which only requires having the chain of block headers, or about 12KB per day. Only people trying to create new coins would need to run network nodes. At first, most users would run network nodes, but as the network grows beyond a certain point, it would be left more and more to specialists with server farms of specialized hardware. A server farm would only need to have one node on the network and the rest of the LAN connects with that one node. The bandwidth might not be as prohibitive as you think. A typical transaction would be about 400 bytes (ECC is nicely compact). Each transaction has to be broadcast twice, so lets say 1KB per transaction. Visa processed 37 billion transactions in FY2008, or an average of 100 million transactions per day. That many transactions would take 100GB of bandwidth, or the size of 12 DVD or 2 HD quality movies, or about $18 worth of bandwidth at current prices. If the network were to get that big, it would take several years, and by then, sending 2 HD movies over the Internet would probably not seem like a big deal. Satoshi Nakamoto 这封邮件写出了比特币最初的设计思路，值得一句一句好好看看。给中本聪写信的人，问的是如果你的系统有几亿人用的话，是不是要传输的数据太多了。中本聪给出的答复，把 “普通用户” 和 “拥有服务器集群的专业人士” 区分来开。初期没有用户的时候，所有人都运行节点，用 CPU 挖矿。但是成熟以后，普通用户只需要运行 SPV 钱包（轻钱包），查看和自己有关的交易，而把运行节点的工作交给 “拥有特殊设备的服务器集群”，因为他们 “尝试获得新币”。按照 2008 年 VISA 的结算速度，运行节点处理相当数量的比特币交易每天流量 100G，流量成本 18 美金。 从这封回信来看，中本聪已经预见了矿池的出现，并且指出运行节点是矿池的事情，而不是普通用户的事。也就是说，比特币这个网络的去中心化，只是存在于矿池和矿池之间的这个网络里，和没有算力的用户没什么关系。没有算力的用户，也不需要运行比特币节点。在算力圈内，只要是有 dual-SHA256 的算力就可以参与挖，这是去中心的。而在用户这边，用户的 SPV 钱包需要联入算力圈之内，主要功能是识别最长链，并在最长链上验证和自己有关的交易信息。可是，对于以上说法，在币圈也是有争议的，我们继续来看。 争议：为了去中心化，应该让尽量多的人来验证完整的比特币区块信息吗？ 一些 off-chain 钱包，比如币信，其实是你把币给了他们公司，他们公司帮你打理。这类服务完全不参与比特币数据的验证，不在今天的讨论之列。普通用户可以使用的钱包大致可以分为两类： 全节点钱包。比如 Core 开发组的软件，BitcoinUnlimited 的软件，都是要同步一个几百 GB 的数据库，里面存着从 2009 年到现在的所有区块信息。用全节点钱包，等于是在和矿池用一样的软件，相当于自己是一个一直没有挖到矿的矿工，一直在验证其他矿工提供的区块，以决定自己下一个块怎么挖。全节点要验证世界上每一笔比特币交易是否有足够余额可供支出、是否存在双花、脚本能否合规等等。按照每十分钟出一个 1MB 满块的速度，每天增加 144MB，每年增加 52.6GB。 SPV 钱包。比太，electrum 之类，也叫轻钱包，只做简单支付验证 Simplified Payment Verification。支付验证只判断用于 “支付” 的那笔交易是否已经在链里，在哪个块里。支付验证不需要看到完整的区块信息，只需要区块头的信息即可判断是否存在，按照每十分钟出一个块的速度，每年只增加 4MB。普通用户要查看区块内的信息，就要使用像 http://blockchain.info 这一类的在线区块浏览器服务，自己电脑里没有存储这些信息。 争议就来了，如果用户都用全节点钱包，那去中心化是不是更高呢？大概有这么几派观点： 极度反扩容派的论调：全节点钱包是最好的，并且最好开放 8333 端口让其他全节点钱包能找到你，更好地加入到这个节点网络里来，节点网络里的全节点越多越好。节点越多，越不容易被外力管制，也有更多备份抗灾。这样的态度伴生的必然是反扩容，甚至主张缩容。因为每年 52.6GB 的数据增加，对于个人节点已经是不少，这个数据量用用 SSD 已经 有点贵了，大多数人只能用机械硬盘。如果说扩容并且交易量在几年内达到现在的 1000 倍，达到 VISA 级别，每年 52.6TB 的数据，注定没法人人都这么运行。极端反扩容派的论调大概就是如此：此风不可涨！今天扩 2M，明天扩 3M，扩着扩着就有很多人的电脑运行不动了，破坏了去中心化。所以，链上的空间是宝贵的资源，不是给大家买咖啡用的，要竞价使用，所以 BTC 的手续费就渐渐高起来了。 中间派的论调：承认普通用户的全节点有价值，但否认扩容会影响全节点的数量。知名的矿池老板，科普作家江卓尔先生，他的观点就是这样。如今电脑很便宜，硬盘也很便宜，扩容后交易量如果增大个几倍个几十倍，基本不会影响普通用户去设立全节点，毕竟现在一部电影都几十 GB 了，参与到 “让比特币更加去中心化，为比特币历史数据多留一份备份” 这么伟大的工程里来，这点成本不算什么。去掉 1MB 的天花板，让用户群体变多的话，总的节点数量还是会更多的。Gavin Andresen （其实他是极端派）说的话很有趣：“作为一个兴趣爱好，人们永远都可以运行的起比特币全节点。人们在别的兴趣爱好上（比如运动）花的钱要比这多多了。” 极端派的论调：不挖矿的用户的全节点对网络没有价值，仅仅是个人兴趣。即便作为备份，没有算力的个人节点在比特币网络停摆的极端状况下也因为高难度而无法让网络重新运作起来。如今的比特币网络完全不需要非专业的个人节点来做备份。我个人的观点是极端派，这段会解释详细点。 经济学上来说，普通用户没有动机去维护全节点，非要赶鸭子上架是不对的。普通用户，作为钱包里有钱要花钱的人，只关心自己的钱包是不是安全。只需要去看自己是不是有钱，自己能不能安全地发送交易，私钥不要泄露。普通用户的钱包，应该着重于保护私钥的安全，易于备份私钥，发送交易的界面清晰易用。至于这交易有没有及时被打入区块，有没有双花，还有区块内其他交易的信息，对普通用户来说毫无意义。能双花了更好不是么？如果要移动支付，大家一定会选择手机 APP，而不是笔记本电脑外挂硬盘，全节点是很难使用的。经济学上来说，对验证交易有兴趣的一方才应该运行全节点，也就是收款的商家，交易所，矿池，区块浏览器等等。以咖啡店和 Bitpay 这样的支付商为例，用户只关心自己的手机 app 可以把交易信息发出去，尽快拿咖啡走人。而咖啡店关心这个交易尽快被 Bitpay 确认后能收到法币。这里面只有 Bitpay 关心，这个交易要有效，不要有双花，所以要尽快验证后广播给矿池。所以，Bitpay 一定会投资设立验证快网速快又稳定的节点，做得好就可以签下更多的咖啡店赚更多钱。在这个观念里，让链上交易成本低，Bitpay 这样的商家越好做，这样的企业节点就越多，去中心化程度反而更好。 普通用户的全节点对去中心化无益。极端派认为，没有算力的节点又去验证和自己无关的交易是没有意义的，验证了你也做不了任何事情来改变这个网络，你还是只能选择跟随算力挖出来的链，最终效果和 SPV 钱包是一样的。 普通用户的全节点对去中心化甚至是有害的。这里有一个 “距离” 的概念。理想状况下，一个 SPV 钱包，发送一笔交易后，这笔交易应该尽快抵达所有的矿池。所有的矿池都收到了这一笔交易的信息，如果后面再有人发一笔有冲突的交易（双花），就会直接被所有矿池拒绝。由于比特币的网络是渔网状的（small world 模型），每个节点和另外 N 个节点连接，这个广播交易有一个扩散到全网的过程，从广播交易的节点到算力之间，要跳转几次，这就是节点间的距离。假设网络中除了矿池和区块浏览器的节点，还有大量使用家庭网络的个人节点，他们电脑卡网速慢，却增加了节点到矿池之间的距离，这个扩散的全网的速度可能会被拖累变慢，交易信息发送到了很多个人节点那里，但没有让矿池及时接收到交易信息。 作为一个兴趣爱好，人们永远都可以运行的起比特币全节点。BitcoinUnlimited 开发组和 nchain 凑了 150 万美金，搭了一套测试网络，运行每秒 3000 笔的比特币系统（1GB 区块，1000 倍于当前交易量）。测试用的矿池并没有很高端的设备，大多是 64G 内存配 SSD 的 VPS，甚至有一部分 16G 内存的台式电脑。测试相当成功，大区块之下所需的设备远远没有反扩容一派说的那么科幻，说只有 google 才运行得起来。搭建全节点的成本和在比特币产业里的其他成本来说不值一提，绝对不会影响有经济利益的公司机构搭建强壮的节点网络。 无论是上述哪派，都不得不面对着用户的需求：BTC 的链上太堵了，小额交易肯定不行了，连大额买币都困难了。扩大交易容量是必定的，极端反扩容派提出的是链下方案，或所谓的第二层网络方案，主张 “小额交易走闪电网络，最后结算的时候再来链上”。而扩容派，特别是极端的扩容派，主张区块链技术比传统的结算网络（银行）的结构更先进更安全成本也更低，认为第二层网络是开倒车。如今， BTC 彻底被反扩容派控制，扩容派已经全体挪到了 BCH 上，这两条路看看谁会走得更好呢？ 也许下篇文章会讨论第二层网络和 Segwit 这些骗子技术 注：由于比特币扩容经历了的第二阶段：Bitcoin Cash 继续分裂 ——Bitcoin Cash ABC、Bitcoin SV，此文中所标注的 BCH 均指目前的 BitcoinSV/BSV，不指代 Bitcoin cash/ABC。 三，比特币扩容纷争：对隔离见证的思考 作者：太阳谷 作为一个扩展，这篇文试着用简单的解释，带大家看一看 BTC 上的隔离见证有什么问题。 比特币的基础架构：区块链 科普一下比特币的区块链是什么，老手们可以直接跳过这一部分了。这里说的比特币，是 2017 年 8 月以前的比特币，后来分为了 有隔离见证的 BTC 和没有隔离见证的 BCH 两条链。下面会有不少看起来很专业的东西，不过请放心，我不是专业的程序员，不会讲太深的。稍微理解一点比特币的架构和转账的方法，对理解隔离见证的骗局很有帮助。比特币链条大概是长这个样子： 上图我们可以看到几个区块（Block），可以看到每个区块都有两个部分：一部分是虚线画出来的 Prev.block 指向上一个区块，这部分我们叫它 “区块头”，另外一部分是 “区块主体” Transaction，即这个区块里交易的信息。由于每个区块头都指向上一个区块的头，所以这个系统我们叫他区块链。再详细点看这个区块头： 上图我们可以看到 3 个区块（Block），可以看到每个区块头里都有 4 个信息。其中 Nonce 就是矿机去搜寻的数，这个数很难找所以要用很快的矿机烧很多电费，谁先找来一个 Nonce，能让这 4 个信息合起来的 Hash 结果符合一定的条件，谁就可以发布这个区块，并拿区块奖励 12.5 个币。Prev-Hash 是上一个区块的这 4 个信息合起来的 Hash 结果，Timestamp 是目前的时间，有这两个的限制，矿工至少要收到上一个区块的区块头，才能开始挖下一个区块。Tx_Root 是这个区块的主体里所有交易的 Merkle Root，如果有任何一个交易被改变，这个 Tx_Root 就会有变化。 如此，比特币的区块形成了一条不能被更改的链：加入这个 Block11 里面的 Tx1 被改变了，那他上面的 Hash1 就会变，Tx_Root 也就变了，这样 Block11 的 4 个信息合起来的 Hash 结果会不一样，就和 Block12 的 Prev_Hash 断开了，Block12 就无效，以此类推。 支付脚本 区块链里的交易，大概可以理解为是 “A 地址转给 B 地址 xx 个币”，“B 地址转给 C 地址 xx 个币” 这样的信息。如果 C 地址收到了 xx 个币，但没有往外转，那这就会在 UTXO 数据库里记一条：“C 地址还有 xx 币没花掉”。假如 C 地址是普通的 1 打头的 比特币地址，要花掉这笔钱，就需要用到一个脚本，这个脚本是 “B 地址转给 C 地址 xx 个币” 时规定的，定了这笔钱要怎么才能被 C 地址花掉。一般这个脚本是这样的两部分 scriptPubKey 部分: OP_DUP OP_HASH160 \\ OP_EQUALVERIFY OP_CHECKSIG scriptSig 部分: \\ \\ 不会编程的朋友请不要害怕，不难看懂的。scriptPubKey 部分有几个 “操作码”，是 OP 打头的，表示几种操作。\\ 就是比特币地址的中间部分，不带开头的版本号 1 和末尾的几位校验码，这部分是对公钥进行 Hash 的结果。scriptSig 部分要由想转账的这个人提供，公钥 \\，和用私钥对这笔交易的签名 \\。由私钥可以推导出公钥，公钥可以推导出比特币的地址，这两个步骤都不能反推（在当今科技下）。如果一个人可以展示私钥对这笔交易的签名，又可以提供这个地址的公钥，那我们就相信这笔转账是他授权的，别人伪造不了。矿池收到了提供的交易，和交易的签名，要怎么验证呢？就是运行一遍上面的脚本，看看结果是不是 “True”。如果结果是 True 那就算通过了。首先要把 scriptSig 里的东西 “堆” 起来，形成一个 “堆栈”： \\ \\ 然后，就一个一个地执行 scriptPubKey 部分。先是一个 OP_DUP，这个是复制操作，这些操作都是对着堆栈的顶部操作。所以复制操作后堆栈变成了： \\ \\ \\ 然后是一个 OP_HASH160，是 Hash160 算法的操作，把堆栈顶部的 \\ 变成了 \\： \\ \\ \\ 然后是 \\，把这个推进堆栈： \\ \\ \\ \\ 然后是 OP_EQUALVERIFY，是检查是否相等的操作，对着堆栈顶部的两个元素进行。如果提供的 \\ 是没错的话，应该是一样的，操作后堆栈变成了： \\ \\ 最后一个操作码是 OP_CHECKSIG，检查这个签名 \\ 和公钥 \\ 是不是对的上，如果没问题，堆栈就清空了。任何一步出问题都会造成脚本报错，如果没出错，那脚本结果是 True，表示通过。 脚本能用的操作码还有很多，可以进行 if，else，add，sub，drop，swap 等等等等。比如，B 地址给 C 地址转账的时候，在刚才的脚本开头，加上一个 \\ 和一个操作码 OP_CHECKLOCKTIMEVERIFY，就可以制造一笔冻结款，C 地址里的这笔钱要经过特定时间后才能花，在到期之前 OP_CHECKLOCKTIMEVERIFY 会让脚本验证失败。 据 “2009 年就开始参与比特币开发” 的 Craig Wright 的说法，如果有足够的操作码，比特币系统也是图灵完备的，也可以运行 ETH 那样的智能合约。但是，许多操作码在 2013 年被 Core 禁用了（因为 Core 开发者看不懂那些操作码有什么用），对脚本的限制也更多。BCH 在 2018 年的开发路线图里就包含了修复操作码设计的部分。 如果，B 地址给 C 地址转账的时候，把脚本搞成这样： scriptPubKey 部分：留空 scriptSig 部分: OP_TRUE 那这个脚本就是永远都可以通过的，不需要提供任何信息。这笔钱谁来转出，怎么转出都是有效的，我们称这钱现在是 anyone-can-spend。这笔钱等于就是给了矿池，因为矿池最终决定谁的交易可以被打包进块。如果有人把自己的钱转入这么一个 anyone-can-spend 地址，矿池肯定会把这笔钱打给自己。 这个 anyone-can-spend 的脚本，就是隔离见证（Segwit）的基础。用这个脚本，转账的时候就不用在区块里提供签名了，签名被 “隔离” 到了区块链以外，故名 “隔离见证”。虽然签名挪了地方，但是转账的话签名还是要给的，不然岂不是乱转账了。其实，用户该发送的信息没有少，矿池要验证的信息也没有少，区别只是在区块链里存的信息少了。由于区块被设置了 1MB 上限，并且已经堵满了，如果交易在区块里占的空间小一点，就能多挤几个交易进这个 1MB 块。隔离见证技术被吹嘘有 1.7 x 的扩容效果，如果所有人的交易都用这种 anyone-can-spend 的格式的话。现在问题来了，这样把签名信息挪出区块链，有什么好处？为什么不直接把 1MB 上限放宽到 2MB 呢？ 软硬分叉之争 如上的疑问，就是扩容软硬分叉之争。因为 Segwit 是一个所谓的软分叉，而提高区块大小会是一个硬分叉。在之前的文章里已经说过，其实这里面软硬分叉之争是个表象，本质上是路线之争：普及后，比特币是流通的币，还是流通币的结算层；是流通的币更去中心，还是结算层更去中心。软硬分叉其实都只是技术手段而已，真正最后的结果还是被人所控制的。 涉及到 “共识层” 的修改，就会形成 “分叉”。共识的运行其实是两个半层面，一层是在有算力的节点（矿池），第二层是没有算力的全节点，还有简单支付验证的轻钱包 SPV 我们算半层。软分叉的特点是 “旧版软件还能认新共识”。硬分叉是 “旧版软件不认可新版软件”。我们用下面一张图来看软硬分叉的情况。 在 Block8 区块之后，系统从 V1 软分叉升级到 V2，这时： 算力层： 运行 V2 的矿工（大多数算力）认为最长的有效链是上面的这一条。 运行 V1 的矿工（少量未升级算力）也认为最长的有效链是上面的这一条，会放弃掉自己的 Block9（V1）形成孤块，因为它不是最长了。而 V1 矿工挖出的旧版本块不会被 V2 矿工承认，这样，V1 矿工不升级，就面临着不被承认的境况，矿机白白浪费电。 全节点层： 运行 V1 和 V2 的全节点（无算力）都认为最长的有效链是上面的这一条。V1 节点因为没有矿机而无经济损失。 SPV 层： 运行 V1 和 V2 的 SPV 钱包都认为最长的有效链是上面的这一条。 总结来看，软分叉时，只要挖矿的节点需要升。如果不升级，会有经济损失。 对比一下，系统从 V1 硬分叉升级到 V2，这时： 算力层： 运行 V2 的矿工（大多数算力）认为最长的有效链是上面的这一条。 运行 V1 的矿工（少量未升级算力）认为最长的有效链是下面的这一条，上面一条虽然长但是无效。这样，V1 矿工不升级，就会和 V2 形成两条并行的链。 全节点层： 运行 V2 的节点（无算力）认为最长的有效链是上面的这一条。 运行 V1 的节点（无算力）认为最长的有效链是下面的这一条，上面一条虽然长但是无效。 SPV 层： 如果这个硬分叉是扩容 1M 到 2M 的话，由于 SPV 钱包不检查容量限制，所以不会因为容量而判某链无效。运行 V1 和 V2 的 SPV 钱包都认为最长的有效链是上面的这一条。如果这个硬分叉修改了挖矿算法或者难度调节算法，那么 SPV 节点也会依新旧版本各自认各自的链。 总结来看，硬分叉时，不只要挖矿的节点需要升级，不挖矿的节点也要升级，SPV 看情况， 可能可以不用升级。如果一部分算力不升级，会被拆成互相不能转账的两种币，像现在的 BTC 和 BCH 一样。 这么看，软分叉是不是比硬分叉来得安全呢？如果担心有人因为不知道大家升级，或忘记及时升级的话，看起来软分叉可以预防比特币被莫名其妙分为两个币。但这种情况是不存在的好么？现在算力都在几个矿池手里，只要提前几个星期通知一下大家做好准备，完全不会出现 “忘记升级” 这种事。能出现 “忘记升级” 的只能是普通用户，普通没有算力的用户，对系统的运行也没有影响。BCH 上的 DAA 硬分叉（把难度调节算法更改为逐块调整）已经非常好地展示了这样的硬分叉，对普通用户的使用并不构成障碍。我们平时使用其他软件，也经常面临着不升级一下登陆不进去这样的情况，并不是什么要命的事情。Core 开发组一直在妖魔化硬分叉，表示硬分叉会造成比特币分裂为两种币，影响市场稳定。其实有分歧造成的硬分叉拦不住（BCH 分离出来），没分歧的硬分叉升级没危险（BCH 难度算法调整），无视路线分歧硬说软分叉安全是没有理由的。 软硬分叉之争的结局：中间派的失败 在大家对硬分叉的安全性有质疑的时候，中间派试图用 “合并分叉” 这样的手段来调解。大致手法就是先用大家都认可安全的软分叉从 V1 升级到 V1.5，然后在 V1.5 里预埋硬分叉到 V2 的代码。这样，如果是有算力 “忘记升级”，他的 V1 会在升级到 V1.5 的时候被孤立，但不会立刻形成 2 种币。等到 V1.5 到 V2 进行硬分叉升级的时候，由于是预埋的代码，自动运行的，不会 “忘记”。没有鄙视程序员的意思，这是一种典型的 “程序员思维”。软件是死的，人是活的。如果人要搞事情，用代码是限制不住的。 中间派的最后运行的方案是 Segwit2x 方案，合并分叉 Segwit 和 2M 这两个升级，前一个是软分叉，后一个是硬分叉。这个方案在纽约得到了超过 83% 的算力的支持，纽约会议之后，中国矿业又内部约定：大家都运行 Segwit2x 的软件，这个软件预埋了代码，在 Segwit 激活后 90 天，自动激活 2M 的升级。问题就来了，你如何知道别人运行的软件和你是一样的？除非是黑进矿池的服务器去，否则从外部完全不能判断别人会不会在 3 个月后进行 2M 分叉。虽然代码是写了，但别人可以运行别的版本的软件，可以把那几行删掉，改掉，外人无从得知。反扩容派是倾向于要 Segwit 而不要 2M，中间派是为了要 2M 愿意妥协 Segwit。当 Segwit 激活 以后，中间派没法靠这 2 行代码来逼反扩容派进行 2M 升级，分裂成 2 种币的结局依然是难免的。最后结果大家也看到了，中间派认怂取消掉了 2M 硬分叉的计划。 从 2016 以来，为了不让比特币分成两种币，大家花了那么多的时间在开会谈判上，现在才明白过来：如果路线有分歧，没有技术手段可以防止比特币分成两种币，也没有技术手段可以督促其他方面参与或不参与一个硬分叉。 隔离见证软分叉（Segwit）的危险 前面我们提到，隔离见证是一个软分叉，旧版依然可以兼容，在升级的时候可以预防 “因为忘记升级而乱套”。这可以算一个非常模糊的优点，具体有没有用是很值得怀疑的。相比之下，这软分叉的缺点就要严重得多。还是画个图看一下： 从 Block7 开始，系统加入了 Segwit 的功能。前面介绍脚本的段落里已经介绍过这种 anyone-can-spend 的地址，假如 Block7 里一个 Segwit 交易，把币发到了一个任何人都可以花的地址 C 里面，签名放在了外面。假设 C 地址的拥有者，打算在 Block8 把钱花出去，发送币给地址 D，诚实的矿工会验证 C 用户的签名，安全性基本和以前是一样的。这里，读者可以可以看到，“这笔钱是不是 C 的” 这个问题，要靠 Block7 下面挂着的那个小块 sig 来回答。如果仅看 Block7 的信息，得出的结论会是 “这笔钱是无主的随便捡”。 众所周知这个 Segwit 功能是一个软分叉，也就是说旧版软件依然会承认 Segwit 版发出来的块，不用升级。旧版的软件根本就看不到 这个小块 sig。旧版钱包软件（全节点或 SPV 钱包）看到这笔钱就是无主的，任何人都可以花的。好在算力一层是必须全部升级的，旧版钱包软件如果提出要转走这笔钱会被所有算力拒绝，只能眼睁睁地看着钱在那里无主地放着。旧版钱包不能正确地获得交易信息，仅仅是验证机制被绕过了，无法发现交易模型已经改变了。前面我们介绍过，区块链的一个特点就是，后一个区块依赖前一个区块的区块头里的信息，如果修改一笔交易，区块头会变化，会造成整个链条的失效。可是现在 Segwit 的 “外挂见证块” 并不在这个链条里面，修改 sig 里面的内容是不会使链条失效的。如果我有算力，但不是 C 地址的拥有者，我无法提供地址 C 的签名，但我把地址 C 的钱转给自己，这个块一定会被其他矿池拒绝掉，因为他们验证了 sig 发现我并没有资格动这笔钱。可是旧版钱包（全节点或 SPV 钱包），和新版的 SPV 钱包（不验证和自己不相关的交易，只接收区块头），都不会发现，他们只会跟随最长的块，sig 的内容不影响有效与否。 因此，Segwit 带来了一种新型的 51% 攻击。这种攻击我在之前的一篇回答里介绍过： 一般币的 51% 攻击： 我在高度 12345 上发布一个交易，从 A 地址到 B 地址发送 1000 比特币。同时我用自己的压倒性的算力，重新挖出一条 12344-12345-12346 的链，不包含刚才的交易。这样 B 一开始以为我付款了，后来我付款的那个块被孤立了，最终成型的最长链里不包含我的支付。这也是为什么各大交易所都要求 3 个确认，6 个确认，就是防止出现你发送币给交易所的交易被孤立。一般认为 6 个确认后就几乎不会出问题了。小额支付（几万美金以内）经常 1 确认甚至 0 确认（块不满的时候）也可以，因为对于小额交易你没有经济动力去攻击。小额没赚头，大额肯定会要求多个块的确认很难做到，也没赚头，并且攻击窗口就是交易发布后的那一两个小时，过去了就没法攻击了。所以至今比特币没有发生过真正意义上的 51% 攻击。 SW 币的 51% 攻击：Segwit 交易带来了 “AnyOneCanSpend” 地址，它实质上是一个空白的交易签名。这种交易的签名被挪移到了附加的见证块里，因此这个技术叫做 “隔离见证”。当然，虽然这个交易的签名不在这里，矿池肯定还是会去附加的见证块里找出来核对验证。在大家都核对验证的情况下，安全性和以前是一样的。控制算力超过 50% 的矿霸矿池，可以直接放弃附加见证块的核对，并把 AnyOneCanSpend 地址里的钱转给自己，然后孤立那些去核对见证块的矿池。由于 Segwit 是软分叉升级，原来的那些没有 Segwit 功能的 SPV 钱包和全节点钱包还是可以用的，这些钱包也没有核对附加见证块的能力，这时候这些钱包都会认为矿霸的链是合法的最长链。和一般币的 51% 攻击巨大的区别就是：一般币的 51% 攻击只能退回自己的一笔支付，而 SW 币的 51% 可以花掉别人账上的钱，而且这钱的数字是从 SW 激活起慢慢积累变多的。SW 运行的越久，SW 交易运用的越多，这笔钱的数量也就越大，有动力攻击的算力也就越容易找。参考资料：Risk of SegWit – Mining Cartels – nChain 软分叉可以在不惊动普通用户的情况下偷偷进行，上 Segwit 功能是软分叉，关闭 Segwit 功能也是软分叉，也可以偷偷地进行。一旦使用了 Segwit 功能，把币放在了 AnyOneCanSpend 地址里，就只能信任 51% 的算力不会去进行关闭 Segwit 功能的软分叉。如果不使用 Segwit 功能，把币放在 “经典” 的 1 字头地址里面，任何软分叉都不能让你失去这币，除非有绝大部分算力针对你的存币地址发动一个硬分叉，才能把这个地址里面的钱转给别的地址。显然这种硬分叉是无法成为主流的，估计中本聪也得不到这种待遇。放在 1 字头地址里的币就是你的币，只有你可以转走卖掉，别人都不行。放在 Segwit 地址里的币，就要看矿业有没有诚信了，如果超过 51% 的算力发动取消 Segwit 的软分叉，剩下的 49% 里必须有算力主动发起硬分叉才能甩脱 51% 算力的最长链，保住你的币。可是 目前 Segwit 链的座右铭就是 “We don’t hard-fork”，是不是有点尴尬？ 有人会说，51% 算力发起关闭 Segwit 功能的软分叉是不可能做到的事情。这点我同意，但是也许你不需要 51% 算力来做到这事。如果我是捣乱矿池，占 5% 算力，我挖出一个块以后，签名 部分拖延 1 分钟再发出去，其他矿池敢不敢再这 1 分钟里以我这个块为基础挖下一个块？如果挖，一分钟以后收到 签名 的内容可能会发现这个块里有非法的交易，这一分钟就白挖了。如果不挖，一分钟以后 签名 内容是正常的，就浪费了一分钟。我只要用 5% 的算力捣乱，每天出几个块，就足以逼很多矿池修改自己的软件设定，在收到签名前就开始挖矿。捣乱矿池可以把 签名 渐渐拖更久，比如 10 分钟后才发，很少的算力就可以把严格验证 签名搞成成本挺高的事情。不验证签名的矿工收益更高，这在 Segwit 以前的比特币上是不可能发生的事情，如今可能了。如果有 30% 的算力不验证附加的签名块，那我只要 21% 的算力就可以发动上述的 Segwit 独有的 51% 攻击了。 隔离见证软分叉（Segwit）无法扩容 Core 的开发者一直在宣传，说 Segwit 可以带来 1.3x，后来又说 1.7x，又四舍五入到 2x 的扩容效果。从交易数来看，2017 年 8 月中旬激活 Segwit 以来，每个块的交易数勉强突破了之前的高点 2250，连 1.1x 的扩容效果也没有。每个块 2000 + 笔的交易能力是不够的，必须尽快改进，这一点上各派都没有异议。Core 的开发者现在已经不提 “ Segwit 有立竿见影的扩容效果” 这话了，着重宣传闪电网络。“小额交易走闪电几乎零手续费，大额结算上主链五十美金一笔”，这已经是 Core 支持者的信仰宣言。 第二层交易网络 我们来简单对比一下 BCH 的 “传统” 单层模型，和闪电网络的第二层模型。 手续费方面： 以 50 美金一笔手续费的大额结算来计算（50 美金就是今天的手续费水平），闪电网络开闭通道各需要一次交易，就是 100 美金的成本（闪电节点的成本没有计入）。如果平均每个通道结算时已经发生过 1000 笔交易，那每个交易的成本为 10 美分，勉强还属于比较低的手续费水平。要什么样的通道才能 1000 笔结算一次呢？以我的想象力，我只能想到这个是支付宝，银行或者地下钱庄的模型，把我的币充值锁进去慢慢花。交易所等机构之间大概更有用一些，对于普通用户其实是毫无作用。 按照每个块开闭 2000 次闪电网络通道（1M 的极限），每个通道 1000 笔交易来算，BCH 的模型里，1000000 笔交易差不多也就是 500MB 区块。nChain 已经和 BitcoinUnlimited 联合测试过 1GB 区块，并没有很科幻。 安全方面： Segwit 的安全性问题已经是一个很好的反例了。区块链，或者说 a chain of digital signatures，是中本聪的杰作，也是比特币和支付宝，银行，信用卡的根本区别。在比特币，现在的 BCH 里，没有私钥谁也没法挪动你的钱，你必须有私钥才能把钱挪动到指定的地方。闪电网络虽然已经宣称进行过多轮测试，但 “怎么保证通道内的交易公正不被修改” 这个问题，依然没有清楚的回答。如果有哪位朋友有好的资料能够提供，不胜感激。从我目前的理解是，闪电通道内基本还是充值卡的模型，外加了通过多次交换签名来让双方对余额有共识，但如果双方有意或无意对余额有分歧，需要由 闪电节点来裁决。Segwit 的问题又出现了：有人可以在没有你的数字签名的情况下挪动你的钱。 安全方面，这一篇文章值得看看：https://news.bitcoin.com/lightning-network-centralization-leads-economic-censorship/ 技术方面： 刚刚其实都是我瞎编的，目前闪电网络完全没有如此大流量的公开测试，考虑到闪电通道内多次反复交换签名的设计，同等硬件瓶颈下闪电网络的交易容量堪忧。 结语 我在敲这篇文章的时候，BTC 正在疯涨，BCH 和其他所有币都被 “抽血” 而下跌。同时，BTC 拥堵了 17 万笔交易没有确认，单笔手续费大约 50 美金。Steam 宣布放弃比特币支付渠道，因为手续费太贵了没法用了。Bitpay 宣布要投资支持比特币以外的各种币，也是因为手续费太高。 市场在短时间内是不理智的，这个混乱时间点上暴涨暴跌都不稀奇。如果说再过十年，市场上主流的是哪种币？一个挪动困难，安全性堪忧的 BTC 真能保值十年吗？如今 BTC 确实是有保值增值的功效，在过去几年里任何一个时间点，甚至过去几个月的任何一个时间点买入，到今天都是大赚。暴涨总是有头的，如果 BTC 不再暴涨，失去了支付渠道和商家支持的 BTC 就没有上新闻的能力了，在投资者的圈子里，不再暴涨的 BTC 也失去了增值保值的能力。如今加密货币都是新事物，严格意义上来说 BTC 也还没有进入公众视野，新闻里的 BTC 只有暴涨，没有应用。这两年新入场投资加密货币的，都很少有只买 BTC 的了，都是 ETH 等币搭配着投资，在币圈 BTC 都不是那么大众化，终究是会淡出公众视野，变得越来越小众的。十年后能成为主流的币，一定是接下来几年能第一个真正进入公共视野的币，我猜这个币是 BCH。 注：由于比特币扩容经历了的第二阶段：Bitcoin Cash 继续分裂 ——Bitcoin Cash ABC、Bitcoin SV，此文中所标注的 BCH 均指目前的 BitcoinSV/BSV，不指代 Bitcoin cash/ABC。 四，从法律角度讨论算力战 Hash war (算力战) 并非真实的战争，而是新近出现于 比特币现金（BCH）社区的一种争端解决办法，由 CSW 首次提出，争议双方因难以谈判妥协而动用算力直接对决，败者归零而胜者通吃，因双方动用的资源和可能造成的损失不亚于一场小型战争，故曰算力战。也因其对社区可能造成的巨大震荡，故有人认为算力战是非法的，是恶意攻击行为，不应被社区接受，不应成为终极解决方法。本文拟从法律角度讨论算力战。 1. 算力战的起因 Hash war 产生于 BCH 的社区分歧。按原计划，BCH 协议将于 2018 年 11 月 15 日实现第三次硬分叉升级，但关于升级方案，以 Dr Craig W Wright（CSW）为代表的一方与以 BitcoinABC、Bitmain（比特大陆）为代表的一方出现了严重分歧。CSW 一方提出，作为现金实现方案，比特币协议应当稳定，其公布的客户端 BitcoinSV (Satoshi vision 将协议最大限度地恢复到比特币 2009 年的最初版本 0.1，并提出无重大理由不再变动；又，作为现金实现方案，应当考虑到大规模的企业级应用和爆发式出现的人群使用，故 BitcoinSV 版本将每个区块的交易容量上限提高到 128M, 并提出两年内取消上限直接 NO CAP（注：比特币的最初版本并无容量限制），否则 2020 年减半后的区块奖励及交易手续费将不足以支撑比特币的生态系统，从而危及比特币的生存。而 BitcoinABC、Bitmain 一方则认为，目前 BCH 区块的实际交易量仅有数十 K, 远未填满现有 32M 容量，一下子提高到 128M 乃至 NOCAP, 是不顾实际的拔苗助长，是对软硬件资源的极大浪费；又，比特币协议及代码应当因应时势而持续演进，不应被锁定或稳定，故其公布的 11 月 15 日升级版本 Bitcoin0.18 版本新增了许多代码，如将区块内的交易排序由原始的 TTOR（按交易时间依次排序）改为 CTOR（按交易哈希按字典排序）等等。 两派的分歧如果无法弥合，势必在 2018 年 11 月 15 日造成 BCH 链的永久分叉即变成两个币和 BCH 生态的永久分裂，但 CSW 石破天惊的提出，BCH 只有一个，不会分叉，也不会分裂，其解决办法是，如果有人在 11 月 15 日及之后分叉或分裂，他将发起 Hash war (算力战), 以算力杀死任何分叉链，直至对方改算法或投降，这样战争结束后，执行 SH256 算法的 BCH 只有一个币、一条链。 CSW 更进一步提出，当 BCH 内部的算力战结束后，2020 年，即比特币的挖矿再次减半之时，BCH 将对比特币的另一条链 BTC 发起 Hash War, 最终比特币将统一成一个，即 BCH，BCH 就是比特币，就是符合创始人中本聪愿景的全球点对点电子现金系统 (Bitcoin:a peer to peer electronic cash system)。 据测算，BCH 如发生算力战，以现有价格计，双方每天投入的成本将高达 600 万元人民币，失败方每天的损失也将高达 600 万元人民币。如果 2020 年 BCH 对 BTC 发动算力战，以现有价格计，则对战双方每天的投入或损失或将超过 6000 万人民币。显然，Hash war 是比特币历史上的极重大事件，其每日消耗不亚于一场小规模的真实战争，战争结果将直接奠定今后数十乃至上百年的比特币运行规则，意义不可谓不深远。 2. 算力战的实施 如此大规模的算力战在比特币历史上尚属首次，是否会在 11 月 15 日如期打响也未可知，关于算力战的实施过程，包括宣战、开战、攻防、投降、胜利等等细节均无经验可循，只能根据比特币的运行规则作一大致推演。 中本聪在 比特币白皮书 第 8 节和第 11 节对可能的算力战作出了如下描述： 第 8 节，“当此情形，只要诚实的节点控制了网络，检验机制就是可靠的。但是，当全网被一个计算力占优的攻击者攻击时，将变得较为脆弱。因为网络节点能够自行确认交易的有效性，只要攻击者能够持续地保持计算力优势，简化的机制会被攻击者焊接的（fabricated）交易欺骗。那 么一个可行的策略就是，只要他们发现了一个无效的区块，就立刻发出警报，收到警报的用户 将立刻开始下载被警告有问题的区块或交易的完整信息，以便对信息的不一致进行判定。 第 11 节，“设想如下场景：一个攻击者试图比诚实节点产生链条更快地制造替代性区块链。即便它达到了这一目的，但是整个系统也并非就此完全受制于攻击者的独断意志了，比方说凭空创造价值，或者掠夺本不属于攻击者的货币。这是因为节点将不会接受无效的交易，而诚实的节点永远不会接受一个包含了无效信息的区块。一个攻击者能做的，最多是更改他自己的交易信息，并试图拿回他刚刚付给别人的钱。 诚实链条和攻击者链条之间的竞赛，可以用二叉树随机漫步（Binomial RandomWalk) 来描 述。成功事件定义为诚实链条延长了一个区块，使其领先性 + 1，而失败事件则是攻击者的链条被延长了一个区块，使得差距 - 1。 攻击者成功填补某一既定差距的可能性，可以近似地看做赌徒破产问题（Gambler’sRuin problem）。假定一个赌徒拥有无限的透支信用，然后开始进行潜在次数为无穷的赌博，试图填补上自己的亏空。那么我们可以计算他填补上亏空的概率，也就是该攻击者赶上诚实链条。” 中本聪描述的诚实链条与攻击者链条之间的竞赛，实际上就是计算机学上著名的 51% 攻击，可称为算力战或哈希战（Hash War）。但中本聪并没有定义，谁是诚实链条，谁是攻击者链条，更没有说掌握 51% 以上算力的就一定是攻击者链条，比特币确认诚实的原则是累及算力难度的最长链原则，凡累及算力最多且最长的链条即为最终的诚实链条，所以算力竞赛结束后，原来的诚实链条可能变成攻击者链条，而原来的攻击者链条也可能变成诚实链条，一切取决于算力这一中性的最高原则。 算力战的基本工具就是 51% 攻击，也就是在同一链条上，优势算力方的区块生成更快从而成为最长链。但算力战真正发生后，算力是实时变化的，如何使用算力进行攻防是一个非常复杂的策略问题，藏块攻击、孤块攻击、巨块攻击、双花攻击等等都是可能的手段，一时的算力优势不等于胜势，如同真实战争，著名的赤壁之战、肥水之战、亚力山大对大流士三世的高加米拉战役，都是以少胜多。 白皮书第 11 节末尾也写道，“假定一个赌徒拥有无限的透支信用，然后开始进行潜在次数为无穷的赌博，试图填补上自己的亏空。那么我们可以计算他填补上亏 空的概率，也就是该攻击者赶上诚实链条”，当此情形，算力战取决于战争意志与烧钱能力，设若交战一方类似赌徒，有相当的算力并有持续的烧钱能力或透支能力，则另一方挖出的区块将不断面临被孤立与重组，总有一天，不能承受资源损失的一方将被迫放弃已挖区块而退出战争，另一方获胜。 3. 算力战的法律性质 1、 算力战系民事行为、私法行为，系合法行为； 算力战的参与双方系算力持有者即矿工，包括自然人矿工和法人型矿工。特别地，托管私人矿机的公共矿池参战时，对其不属于自有算力部分，应当取得相应算力持有人的特别授权。无他，算力战乃特别重大事件，尽管公共矿池只需对受托矿机承担分红支付义务，但鉴于算力战的残酷性，败者矿池可能面临可以预见但难以防范的难以支付分红费的特殊情形，故以民法之诚信原则，提前告知并取得算力持有人的特别授权乃应有之义，何况算力持有人亦有权作出与所在矿池站队的相反选择。 算力战的争议标的乃 BCH 底层协议的开发主导权，非比特币现金本身，也非通常意义上的基于同一协议的区块记账权。因此，算力战并不直接侵占对方的财产，即使胜者通吃，其获得的也只是自己算力所挖出的部分，这一点在比特币的白皮书中也有描述，“但是整个系统也并非就此完全受制于攻击者的独断意志了，比方说凭空创造价值，或者掠夺本不属于攻击者的货币。这是因为节点将不会接受无效的交易，而诚实的节点永远不会接受一个包含了无效信息的区块。” 比特币底层协议的开发主导权在法律上应当属于民事权利。 故算力战系发生于民事主体之间，为产生、变更、终止民事权利的行为，且参战、应战均属自愿，我国民法总则第 133 条规定，“民事法律行为是民事主体通过意思表示设立、变更、终止民事法律关系的行为”，故算力战是典型的民事法律行为，受民法约束。 与战争系两个国家之间发生的国际公法行为不同，与刑事、行政系国家公权力与公民之间因犯罪、违法而发生的国内公法行为也不同，算力战属于私法行为，如发生于不同国家的民事主体之间，则属于国际私法行为。 对于民事行为或私法行为，国际通用规则是，“法不禁止则可为”。我国民事总则第 5 条亦规定，“民事主体从事民事活动，应当遵循自愿原则，按照自己的意思设立、变更、终止民事法律关系”，第 8 条规定，“民事主体从事民事活动，不得违反法律，不得违背公序良俗。” 第十条规定，“处理民事纠纷，应当依照法律；法律没有规定的，可以适用习惯，但是不得违背公序良俗。” 故在没有国际公约及国内民法明确禁止算力战的情形下，发生于 BCH 社区的算力战，在法律上是合法的。实际上，任何一个新型行业，法律在早期都难以直接介入，行业的自我规范、自我约束更为重要，比特币的协议演进该采取何种规则，比特币的参与人最专业、最清楚，应当由比特币的参与人自我决定，自我实现，法律只需充当最后的守门人。 2、算力战系商业竞争行为，应受反不正当竞争法的约束。 如前所述，算力战的交战双方均系矿工，处于相同行业；二者同为争夺比特币底层协议的开发权，存在竞争关系，故算力战系典型的商业竞争行为，应受反不正当竞争法的约束。 反不正当竞争法包括国际公约与国内法。国际公约有《保护工业产权巴黎公约》、《与贸易有关的知识产权协议》（Trips）等等，国内法则有各国制定的《反不正当竞争法》、《公平交易法》等。我国的《反不正当法》几乎吸收了大部分发达国家国内法和前述国际公约的全部优点，其立法技术在国内诸法律中遥遥领先，可作为本文的引用。 《中华人民共和国反不正当竞争法》在总则第 2 条规定了商业竞争的基本准则，“经营者在市场交易中，应当遵循自愿、平等、公平、诚实信用的原则，遵守公认的商业道德。本法所称的不正当竞争，是指经营者违反本法规定，损害其他经营者的合法权益，扰乱社会经济秩序的行为。” 此处经营者包括服务提供者。在分则第二章规定了十一项不正当竞争行为，与算力战有关的可以概述如下： 不得捏造、散布虚伪事实，损害竞争对手的商业信誉、商品声誉；不得侵犯他人商业秘密；不得虚假宣传；不得擅自使用他人名称、姓名、装潢、注册商标；不得以排挤对手为目的低于成本销售；独占经营者不得限定他人购买指定服务以排挤对手等等。 因不正当竞争而造成对方损害的，应当承担损害赔偿责任，损害难以确定的，赔偿额相对于因侵权行为所获利润和合理调查费。 算力战的交战双方通常涉及跨国主体，故有关司法管辖和实体法律，应当适用国际私法，不赘。 3、算力战的参战各方应尽最大可能保护普通用户的财产权利，此系法定义务。 就算力战 51% 攻击的机理而言，普通用户只要在算力战期间不交易、不提币、不充币，其比特币对应的财产权利不会受到任何影响。问题在于，算力战的持续时间难以预料，算力战的参与各方除了直接对峙的矿工，亦包括钱包商、交易所、场外交易商等，则仍有可能因两链缠杀而出现丢币现象，此种情形更易出现于急于交易、急于表态的交易所、钱包商，从而损害了普通用户的财产权。 即便是真实的战争，现代文明也强调不得伤害平民，不得虐待俘虏，为此国际社会专门制定了相关公约，如《关于战时保护平民的日内瓦公约》（第 4 公约）、《关于战俘待遇的日内瓦公约》（第 3 公约）等等，举重以明轻，算力战在战时期间，应当尽最大可能保护普通无辜用户的币财产权利。 我国《民法总则》第 3 条规定，“民事主体的人身权利、财产权利以及其他合法权益受法律保护，任何组织或者个人不得侵犯。” 因此普通用户的财产权利受法律保护，算力战的交战双方及其他参与方，不得以任何理由侵犯普通用户的财产权。此处财产权主要指比特币等数字货币。至于比特币等数字货币是否构成财产权的客体，非本文阐明内容，但也勿需过多争议，当然是。 据此，笔者认为，参战各方在算力战期间有两大义务，一是如实告知义务，二是技术防范义务。如实告知义务，是指参战各方有义务就宣战、应战、开战时间、停战时间、站队方向等重大问题向公众作出如实告知，算力战不是国家间的战争，即使基于战术考虑，也不存在不宣而战，不宣应战、秘密作战等；技术防范义务，是指与普通用户的财产利益攸关各方，如交易所、钱包商等应当在算力战期间尽最大努力或最善义务采取技术防范措施，以防止用户出现财产损失。 凡违反上述义务者，均有可能在算力战结束后遭到受损用户的法律追索。 from: 刘晔律师；比特币算力战（Hash War) 的法律分析 相关阅读 了解真正的比特币世界：正本清源比特币 为什么要选择相信投资 BSV？ MetaNet 到底是什么？ new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 扩容纷争 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"appendix/time-line-of-satoshi.html":{"url":"appendix/time-line-of-satoshi.html","title":"中本聪时间线","keywords":"","body":"中本聪时间线 下面的时间线显示了CSW(中本聪)与比特币发展史的过程，内容均来自网络公开信息，读者可以自行验证。 说明 CSW 代指 Craig Steven Wright(Craig S Wright). DK 指代 Dave Kleiman 计算机取证专家 DR 指代 David Rees) 是埃克塞特大学的纯数学教授 HAL 指代 Hal Finney) 比特币早期贡献者 Gavin Andresen 比特币软件主要开发者，中本聪退隐后把开发权交给 Gavin Andresen Jon Matonis 是比特币基金会的董事和创始人之一 Timothy C. May 是 Cypherpunks 邮件列表的联合创始人 ATO 指澳大利亚税务局 BlackNet 是一个实验性的“信息市场”，它允许各种信息的完全匿名的双向信息交换 MetaNet 脱胎于 BlackNet ～2003 1985-XX-XX CSW 1985 年开始在 KMart 从事 IT 工作，随后加入澳大利亚证券交易所（ASX）来源一，CSW 蔑视法庭案件 1989-XX-XX CSW 开始昆士兰大学了 B.Eng/BSci 双学位 来源 1992-XX-XX CSW 由于得了癌症退出了昆士兰大学。来源一 ，接受了癌症晚期治疗，失去了当时的学位 1993-11-16 Timothy C. May 有记录的 BlackNet 首次出现 Crypto Anarchy and Virtual Communities 目前最早记录 BlackNet 最早定义 上传时间：1995-10-13 1994-12-XX Timothy C. May 发表文章《加密无政府状态和虚拟社区》( Crypto Anarchy and Virtual Communities )提到了 BlackNet BlackNet 是一个实验性的“信息市场”，它允许各种信息的完全匿名的双向信息交换。据报道，美国当局已对此进行了调查，因为它存在于国防部研究实验室的网络中。 1996-09-17 CSW 和阿桑奇早就政见不和 (链接 1，链接 2) CSW 那时候和 Timothy C. May 在邮件列表有过交流，应该知道了 BlackNet 1997-03-04 Timothy C. May 文章《无法追踪的数字现金，信息市场和 BlackNet》(Untraceable Digital Cash, Information Markets, and BlackNet ) 1997-03-28 Adam Back 发明 Hashcash 来源 1997-04-XX CSW 开始在澳洲证券交易所工作 来源 1997-11-XX CSW 创办 DeMorgan 公司担任常务董事(Managing Director) 成为澳大利亚前 150 家公司的首批 IT 安全服务提供商之一，专注于托管安全和安全系统设计，专注于金融服务，银行和技术市场。 1998-05-XX CSW 离开 澳洲证券交易所 来源 1998-11-XX Wei Dai 发布 b-money 1998-XX-XX CSW 在 1998-2003 获得神学博士 - 比较宗教和古典研究 待印证 1999-XX-XX CSW 设计架构了世界上第一个在线赌场 Lasseter's Online 上线 世界上第一个获得政府监管和许可的在线赌场. CSW 任职信息系统经理。在 2001 年就拥有 160,000 名国际客户 来源一 来源二 04 年官网 2000-XX-XX CSW 开始参与了许多博彩业务 需印证 2000-XX-XX CSW 设计并管理了许多保护澳大利亚证券交易所的系统的实施 需印证 2003 2003-XX-XX 2003-2004 CSW 完成了网络与系统管理硕士（MNSA）- IT 网络 - 查尔斯特大学（CSU） 已经被查尔斯特大学向福布斯杂志印证 2003-XX-XX DK 和 CSW 在 2003 年一次在线密码论坛上相遇。两人都对网络安全，数字取证和金钱未来有着长期的兴趣 来源：DK 亲戚起诉 CSW 案件卷宗 2003-08-00 CSW 卸任 DeMorgan 公司的常务董事(Managing Director) 2004 2004-XX-XX 2004-2006，CSW 获得了管理硕士（MMgt）- 管理，财务 - 查尔斯特大学，已经被查尔斯特大学向福布斯杂志印证 2004-08-15 HAL 发布了 rpow，可重复使用的工作证明 2004-10-XX 2004-10 至 2009-01 在会计师事务所 BDO Kendalls 任职 Associate Director (Risk Services)。链接 1，链接 2，2008 年出版的《Overwriting Hard Drive Data: The Great Wiping Controversy》 证实了这点。 2005 2005-XX-XX 2005-2008，CSW 获得了信息系统安全硕士（MInfoSysSec），IT 安全 - 查尔斯特大学已经被查尔斯特大学向福布斯杂志印证 2005-XX-XX CSW 获得统计硕士（MSTAT），定量统计学 - 纽卡斯尔大学 需印证 但是从 CSW 之后的论文中可见其水平 2005-04-25 2005-4-25 至 2011-07-24 获得了 20+ 认证官网可查 20+ 认证 GIAC 安全专家 GSE-MALWARE -GIAC 恶意软件安全专家 GIAC 认证 ISO-27000 专家 GSAE -GIAC 安全审计要点 GSE-COMPLIANCE ：GIAC 安全合规专家 GCFA -GIAC 认证的法证分析师 GSNA -GIAC 系统和网络审计员 GREM -GIAC 认证的逆向工程恶意软件 GLEG-GIAC 法律问题 GSEC-GIAC 安全基础认证 GCIH-GIAC 认证事件处理程序 GSLC- GIAC 安全领导力认证 GCPM -GIAC 认证项目经理 GCUX- GIAC 认证的 UNIX 安全管理员 GAWN -GIAC 评估无线网络 GWAPT-GIAC 认证的 Web 应用程序渗透测试程序 GISF- GIAC 信息安全基础 GSSP-.NET -GIAC 安全软件程序员. NET GPEN- GIAC 渗透测试仪 2005-12-25 Ian Grigg 发布了 三重记帐法 2006 2006-XX-XX 根据澳大利亚公开记录， CSW 申请个人破产并被拒绝 2006-03-22 CSW 在加密邮件列表讨论：加密前签名和加密后签名 2006-05-08 CSW 公布其 ISFCE 管理认证计算机考试（CCE）® 认证，来源一，来源二 2007 2007-XX-XX CSW 和 DK 合著《CHFI 官方学习指南（考试 312-49）》出版 来源一，来源二 2007-XX-XX 中本聪：自 2007 年开始设计比特币，更多的工作是设计而不是编码。 花了大量时间在研究设计比特币，那时候已经考虑未来探索方向：托管交易，保税合同，第三方仲裁，多方签名等。 2007-06-XX 美国联邦政府对 e-Gold 提出指控，e-Gold 是一家出售可兑换黄金的数字货币的公司。 政府认为该项目启用了洗钱和儿童色情制品，因为用户无需提供彻底的身份证明。该公司的所有者因经营无牌转账业务而被判有罪，而首席执行官则被判处数月软禁。 2007-11-28 CSW 在 bolg 中写到正在研究一种以货币自动化的方法。待印证。 2007-12-XX CSW 加入联合教会（新南威尔士州）信托协会有限公司联合金融服务受托人。(a trustee of the church)，来源二 加入的具体时间应该早于 07 年 2008 2008-XX-XX CSW，DK 和 Shyaam Sundhar 合著了一篇论文 《重写硬盘数据》 - 在 ICISS2008 上发表并收录于计算机科学 系列讲义(LNCS，第 5352 卷) 2008-XX-XX CSW 在 SANS NS 2008 拉斯维加斯发表文章《远程确定应用程序版本的高级方法》Advanced Methods to remotely determine Application Versions 2008-XX-XX CSW 在 BDO 的一次 裁员中失去了的工作 此次裁员给了 CSW 一笔补偿费，所以能在 2009 年继续工作 2008-01-20 CSW 在 Google 的 Google DataMiners 2008 上发表了演讲 使用神经网络提高安全智能 2008-01-29 CSW 写了文章《What is an “Electronic Contract”》什么是电子合同 2008-01-30 CSW 写了文章《Trusting electronically signed documents》信任电子签名文件 2008-03-05 CSW 完成了诺桑比亚大学（英国）的 LLM（国际商法) 研究生学位 学号：05024288 2008-03-06 CSW 在 08 年就受到别人的诽谤与质疑 2008-03-12 CSW 和 DK 的关于诽谤邮件往来 主题：法律在互联网上诽谤的困难，DK 的回复 CSW 使用的邮件：Craig.Wright @bdo.com.au 2008-03-12 15 年 gizmodo 泄密事件中 CSW 给 DK 的一封邮件：需要 DK 帮助他关于 bitcoin 的工作 网友质疑：同一天使用的邮箱：craig.wright@information-defense.com 2008-04-04 CSW 被 SANS 技术研究所评为 Security Heroes 2008-04-17 CSW 发表论文：互联网中介责任的影响 内容：关于比特币节点合规的研究 2008-07-25 CSW 著作出版 《IT 监管和标准合规手册》，The IT Regulatory and Standards Compliance Handbook 2008-08-18 中本聪注册 bitcoin.org 域名 2008-08-20 中本聪比特币白皮书的预发布草案 标题：没有值得信赖的第三方的电子现金 中本聪与 Wei Dai 的三封邮件 2008-10-31 中本聪首次公开发布比特币白皮书 标题：点对点电子现金系统 2008-11-01 CSW 一篇 博客文章 公布了自己的 PGP 公钥。 公钥使用 pgpdump 之后显示出与 satoshin@vistomail.com 有联系，详见2015-12-08 2008-11-02 中本聪认为只有矿工才需要运行网络节点。并预测了矿池和矿场的出现。链接 起初，大多数用户会运行网络节点，但随着网络增长超过某一点，拥有专门硬件的服务器群的专业人士 (即后来出现的矿池) 运行网络节点。 一个服务器农场 (即后来出现的矿场) 只需要在网络上有一个节点(即矿池)，而网络中的其余部分与该节点连接。 2008-11-09 比特币项目在开源项目社区资源 SourceForge.net 上注册。 2008-11-17 中本聪在加密邮件列表中表示：之前的 1 年半一直在完善比特币代码 暂缺 2008-11-30 CSW 完成了查尔斯斯图尔特大学的信息系统安全硕士课程 2009 2009-XX-XX 2009 - 2010 CSW 获得了 MSD，系统开发硕士 - 查尔斯特大学 2009-01-08 中本聪发布比特币 v0.1 版本(原链接已经失效) HAL 在 bitcointaik 论坛 中公布了 0.1.0 版本，s3 上的备份，github 保存的版本 2017-09-23 CSW 最早 公开表示：比特币原始代码 中有扑克游戏，其中有 poker(扑克)， deal me out(出牌)， fold(弃牌)， call(跟注)， raise(加注)等术语。 2009-01-10 CSW 博客宣称发布比特币 beta 版本 blogspot 这个博客系统是可以修改时间的 存档网站记录：14 年有这篇 文章；15 年已经被删除 文章 CSW 可能把网站文章修改过，2006-1-8 的这篇文章 在 2009-1-8 出现 2014 年至 2015 年之间的某个时间，CSW 修改了一篇的 2008 年博客文章，添加了加密货币的词汇 2009-01-12 比特币第一笔交易，中本聪发给 HAL 交易 TX 2009-01-29 CSW 成立了一家公司：Information Defense Pty Ltd 注册地：新南威尔士州 2446 商标知识产权 2009-02-11 中本聪注册 P2P 基金会网站 2009-08-30 中本聪把比特币代码从 sourceforge 转到 github，版本为：BitCoin v0.1.5 ALPHA 2009-11-19 中本聪注册 bitcointalk 论坛 2009-11-22 中本聪论坛第一帖 2009-11-25 中本聪建议每个比特币地址只用一次 2009-11-26 感恩节 DK 告诉 Ira(DK 弟弟)，他正在和一个富有的外国人一起创造“数字货币”，也就是 CSW。来源：DK 亲戚起诉 CSW 案件卷宗 2010 2010-01-XX 2010-1 至 2015-6 CSW 担任查尔斯特大学讲师，开发并推广数字取证硕士学位被查尔斯特大学对福布斯的声明所证实。 2010-04-06 CSW 的公司 De Morgan 搁置破产 Craig Stephen Wright 和 Anor V De Morgan 信息安全系统有限公司(清算中) 2010-06-XX 2010 年中，中本聪将比特币源代码库的控制权转交给了 Gavin Andresen 2010-07-27 中本聪 github 账号作为 bitcoin 项目作者出现 ，暂时不清楚最初头像，但在之后的某个时间头像修改为 DK。 2010-08-04 中本聪认为比特币目前不适用于非常小的微支付 2010-08-05 中本聪讨论了未来小额支付的好处和前景 虽然我不认为比特币现在适用于小额支付，但随着存储空间和带宽成本的持续下降，它最终会成为现实。 如果比特币大规模流行起来，那么到那个时候小额支付已经普及了。 另一种使它们变得更加实用的方法是，如果我实现了只有客户端的模式，并且网络节点的数量合并成为数量较少的专业服务器群。无论你需要多大规模的小额支付，最终都是可行的。我认为在 5 到 10 年内，带宽和存储将变得微不足道。 免费交易是很好的，如果人们不滥用它，我们可以保持这种方式。 2010-10-XX CSW 的第一次婚姻于2010 年 10 月结束 2010-11-30 CSW 发表《开发安全嵌入式软件的经济学》，发表于第 8 届澳大利亚信息安全管理会议论文集。 2010-12-11 维基解密支持比特币捐赠，中本聪发帖：认为不是个好时候 2010-12-12 中本聪在论坛最后一帖 2011 2011-XX-XX 世界级黑客 Dan Kaminsky 试图破解比特币代码，但是失败了。 Kaminsky 表示：“他是一位世界级的程序员，对 C ++ 编程语言有着深刻的理解，”他说。“他了解经济学，密码学和点对点网络。有一群人为此工作，或者这个人才是天才” 2011-XX-XX 为了继续 CSW 的研究工作，DK 和 CSW 向一些国家比如哥斯达黎加出售了用于合法赌博的代码。DK 承受了最大的风险，因为赌博在澳大利亚是非法的。链接 2011-02-14 DK 在佛罗里达州成立了W&K 信息防御研究公司，注册详情 这个是 CSW 和 DK 一起建立的公司，用 DK 注册的， ATO 与 CSW 澳大利亚公司的代表的会议记录: CSW 与 DK 一起创办了 W＆K Info Defense LLC（W＆K）。W&K 公司经营比特币挖矿和软件开发 / 研究业务。 CSW 在 09 年创办 Information Defense Pty Ltd 来源：DK 亲戚起诉 CSW 案件卷宗 2011-04-11 CSW 作为贡献者之一的著作 《官方（ISC）2®ISSMP®CBK® 指南》 出版 亚马逊对于 CSW 的介绍佐证了他在查尔斯斯图尔特大学的诸多硕士学位和进行数字取证的讲课 2011-04-23 中本聪发给 Mike Hearn 的邮件中表示：“我已经转向做其他事情。比特币就放心交给 Gavin 和大家了。” 链接 1，链接 2 2011-04-27 Gavin Andresen 发帖他将在 6 月份在美国情报界的新兴技术会议上向 CIA 发表关于比特币的演讲。具体时间是 6 月 14 日在中央情报局总部，兰利弗吉尼亚州。它不向公众开放，会议仅针对美国情报界。 2011-05-XX 2011-05 至 2014-05 CSW 是查尔斯图尔特大学的兼职学者 被查尔斯特大学对福布斯的声明所证实 2011-06-14 CSW 被 GICSR 任命为亚太区总监，副总裁。资料 1，资料 2，资料 3 GICSR 是由私营部门领导的非营利性全球网络安全 + 研究所 2011-06-20 Gavin Andresen 公布了 2011-06-14 在 CIA(美国中央情报局)发表的演讲的 PDF。 2011-08-09 CSW 在 The Conversation 上发表文章：LulzSec, Anonymous … freedom fighters or the new face of evil?。这是 CSW 公开提到比特币最早记录。 在此文章的评论中，CSW 列举了许多 PayPal 的替代品，提到了几次比特币：bit coins，digital coin. 2011-12-05 CSW 发表于第 9 届澳大利亚信息安全管理会议论文集《Using checklists to make better best》 2012 2012-XX-XX CSW 开始为比特币节点做微服务架构。当时是叫 iDaemon，现在是 Terranode。链接 1，2017-11-06 的论文中使用过 iDaemon 2012-10-11 CSW 在英国注册一家公司：C01N LTD 2014 年 4 月 10 日 任命 Uyen T Nguyen 女士为董事 2014 年 4 月 14 日 任命 David Kleiman 先生为董事 2014 年 4 月 15 日 终止任命 David Kleiman 为董事 但是 DK 已经在 13 年去世！！ 2012-11-03 CSW 《领土行为和僵尸网络的经济学》收录于第 10 届澳大利亚信息安全管理会议论文集 2013 2013-04-XX 2013 年 4 月初，CSW 与 DK 吵架，当时都缺钱，大量比特币并不好出售，这是 CSW 最后一次与 DK 联系 2013-04-26 DK 被发现去世了 警方勘查报告 2013-04-29 CSW 发布了缅怀 DK 视频。 2013-05-30 CSW 注册了 hotwirepe.com 域名 2013-06-XX CSW 创办了一家创业公司 Hotwire, 用于建立 “Denariuz Bank”，第一家比特币银行 CSW 称 Denariuz 将从其支持者那里得到超过10 万比特币用于银行资金池 Hotwire 的失败归因于 2014 年 5 月Mt Gox 比特币交易所的解体 2014 清算报告：McGrath Nicol 的管理人员写道：“ATO 对索赔金额的有效性提出异议，并对 Hotwire 征收 1,716,608.00 美元的罚款 2013-08-25 CSW 创办了Interconnected Research 公司，链接 2，链接 3 是一家专注于加密货币的研发机构。我们为加密货币相关产品提供指导，保护知识产权，为初创公司提供专利和商业化方面的帮助。 猜测：CSW 的这个想法没有实现，2017 年在 nchain 重新启动 2013-10-04 CSW 以 Hotwire 公司的名义注册 B1TC01N.ORG 域名 ，后来转移到 C01N 公司名下 2013-10-04 CSW 注册 b1tc01n.co 和 bitc01n.co 域名 链接 2014 2014-02-12 CSW 在悉尼参加讨论比特币了 ，Bitcoin IS at Sydney's Informa Conference 2014 2014-02-12 CSW 计划今年开设第一家基于比特币的银行，但是当时澳大利亚 ATO 尚未澄清它将如何处理与比特币相关的商品及服务税 2014-03-07 中本聪在 p2pfoundation 论坛回帖：\"I am not Dorian Nakamoto.\" 2014-06-2 CCTV NEWS 采访查尔斯特大学研究员 CSW 关于黑客大战 2014-07-09 CSW 在比特币墨尔本大会上接受采访视频 1，视频 2，视频 3，中译。CSW 视频中描述的即为 18 年宣布的 MetaNet 2014-08-20 ATO 裁定，对于资本利得税而言，加密货币应被视为资产而非货币。所以 CSW 无法继续在澳大利亚建造比特币商业帝国。 2014-08-26 CSW 在比特币博览会的采访视频，谈了 BlackNet（也就是后来的 MetaNet） 2014-09-XX CSW 开始任 DeMorgan 的 CEO 自该集团首家公司成立以来的六年中，我们已经完成了几个基于比特币的研究项目，这些项目已经持续，现在已经准备好开始商业化。 该公司运行的两个 HPC 系统 (超级计算机) 以及开展的 AI 和机器学习活动 视频：Gizmodo 记者访问 DeMorgan 的办公室 DeMorgan 旗下 控制 Cloudcroft 它控制着世界 500 强中的两台超级计算机 - 排名世界第 15 位的 CO1N 和排名第 327 位的Sukuriputo Okane。 CSW 的 《调查使用比特币区块链作为世界互联网商务的主要基础设施的潜力》 论文中介绍了这台 26W + 核心的超算 这个页面中显示 2 台超算属于 Tulip Trading(郁金香交易) 这两台超算是 SGI 生产，但是 SGI 否认是 Cloudcroft 从 SGI 购买，CSW 解释主要原因 是他在 2015-05-29 将 SGI 的设备与竞争对手 Supermicro 的设备结合在一起。次要的是保密，因为这台机器所被用来测试他关于如何改进比特币的想法。链接 2 暂缺 CSW 在 15 年使用超算 发过 ITMASTER 的免费课程 Free Short Course: Programming on Supercomputers 2014-09-08 中本聪 satoshin@gmx.com 邮箱被自称黑客的人攻破 链接 1，链接 2，链接 3，链接 4 黑客在 p2pfoundation 论坛提醒中本聪信息泄漏。 2018-06-28 之后的某个时间这条回复被删除 2014-10-17 CSW 注册了 tuliptrading.net 域名 2014-11-XX CSW 的公司 Hotwire 进行清算。2016-03-10 被上传的清算报告 2015 2015-05-19 CSW DeMorgan Ltd. 公司通过 AusIndustry 成功申请了 5400 万澳元的税收优惠，链接 2 这意味着 DeMorgan 能够向 AusIndustry 证明它在 2014/2015 财政年度花费了 1.2 亿美元用于研发活动 2015-05-29 CSW 将 C01N 和 Cloudcroft 所谓的旗舰超级计算机 Tulip Trading 合并为一台高性能计算机 - 新的 C01N 2015-06-04 CSW 和 Jon Matonis 在澳大利亚第一次见面，Jon Matonis 感觉 CSW 就是中本聪 2015-07-15 ITMastersCSU 官网的油管上传了 CSW 的超算课程：免费短期课程：超级计算机编程，有 reddit 网友说这台超算是：C01N aka 缺链接 2015-10-29 CSW 在内华达州拉斯维加斯举行的比特币投资者大会上发表演说 2015-12-08 CSW 正在研究大区块的传播。链接 2015-12-08 wired.com 首次报道了 CSW 可能是中本聪 第一个指向赖特的证据出现在 11 月中旬，当时一位与赖特关系密切的匿名消息人士开始将文件泄露给 Gwern Branwen，他是一名假名的独立安全研究员和黑暗网络分析师。Branwen 将这些文件提供给 WIRED。 2015-12-08 Gizmodo 媒体同时报道了 CSW 可能是中本聪 和 wired.com 是两项平行调查 2015-11 Gizmodo 收到了一系列匿名电子邮件，这些文件都来自他的企业帐户 被黑的电子邮件显示 CSW 使用电子邮件地址 satoshi@vistomail.com 在 2014 年 1 月通过电子邮件发送给他的同事 CSW 试图联系澳大利亚参议员，从 satoshi@vistomail.com 询问比特币监管，试图说服澳大利亚政府将他的比特币持有作为货币，而不是一项需要征收更多税收的资产链接 1，链接 2 视频：Gizmodo 在他们位于悉尼北部的郊区的 CSW 家中到询问 CSW 的妻子 CSW 在创造比特币方面的作用，他妻子起初只是笑着摇头，然后关门了。 郁金香信托曝光，其中有 110w 比特币。 内有五个 PGP 密钥 - 用于通过电子邮件建立加密通信线路的文件 - 用于管理信任。在公共数据库中搜索这些密钥会发现一个属于 CSW，一个属于 DK，两个属于 Satoshi Nakamoto 其中还显示 DK 同意他不会透露“satoshin@gmx.com 帐户的来源 CSW 的前妻告诉 Gizmodo，她回忆起很多年前 CSW 正在研究比特币。她指出，他最初称之为“数字货币”。 有人提出泄漏的邮件部分是伪造 2015-12-09 路透社报道澳大利亚警方突袭了 CSW 的家和办公室，新闻视频 房子是 CSW 租的，自称为房子主人的男子加里 · 海瑞斯告诉路透社 CSW 有一个 substantial computer system set-up，并且房子的后面安装了一个 “三相” 电源系统 澳大利亚税务局表示，由于法律保密，它无法评论“任何个人或实体的税务事务”。 Hotwire 2014 年的纳税申报表，以及约为 340 万美元的 GST 税收抵免。Hotwire 的纳税申报表还可以获得 550 万美元的所得税退税，但 Business Insider 了解到这一点尚未由 ATO 发布。链接，Hotwire 清算报告 2015-12-XX 自从被曝光之后，CSW 收到匿名家人威胁，随即 Cloudcroft 和 DeMorgan 等网站，以及 CSW 的 LinkedIn 个人资料和推特账号，还有 email 等所有社交资料都被删除 2015-12-11 福布斯网站发布文章：认为 CSW 履历有误 怀疑 1: CSW 的计算机科学博士学位和金融学博士学位 怀疑 2: PGP 加密密钥是伪造 截止 2015-12-11 福布斯称收到查尔斯特大学的声明：CSW 没有获得该校的计算机科学博士学位，但是获得了网络和系统管理硕士，管理硕士（信息技术）和信息系统安全硕士 2016 2016-03-XX CSW 完成了比特币节点 iDaemon 项目(现在是 Terranode)，在等待 BU 的独立测试验证。链接 2016-03-XX Jon Matonis 说 3 月下旬有个私下证明会，CSW 会私下展示签名 2016-03-10 CSW 公司 Hotwire 的清算报告被上传 通过 ATO 可以看出 CSW 的税务问题很大 McGrath Nicol 的管理人员写道：“ATO 对 Hotwire 征收 1,716,608.00 美元的罚款 报告显示：CSW 有一个家庭信托： Wright Family Trust 报告显示：CSW 当时除了郁金香信托外，应该还有巨量比特币，约 19W 枚 2016-05-02 CSW 发表博客文章 《保罗萨特，签名和意义》 承认自己是中本聪。在文章中 CSW 解释了如何验证一组加密密钥的过程。 文章引用了保罗萨特拒绝诺贝文学奖的一句话：“If I sign myself Jean-Paul Sartre it is not the same thing as if I sign myself Jean-Paul Sartre, Nobel Prizewinner” – Jean-Paul Sartre, 1964 萨特：“我拒绝荣誉称号，因为这会使人受到约束，而我一心只想做个自由人，一个作家应该真诚地做人” CSW：If I sign Craig Wright, it is not the same as if I sign Craig Wright, Satoshi 2016-05-02 Gavin Andresen 发表文章认为 CSW 就是中本聪。同时视频公开承认。CSW 使用第 1 号块的私钥签名了 Gavin 给的文本。 CSW 使用第 1 号块的私钥签名了 Gavin Andresen 给的文本： \"Gavin's favorite number is eleven. CSW\"。签名被复制到 Gavin 带到伦敦的新 U 盘上，然后在全新的笔记本电脑进行验证。安全起见，签名信息和电脑都未纰漏。 2016-05-02 Gavin Andresen 对 github 特币核心的访问权限被删除 2016-05-02 Ian Grigg 在博客发文：认为 CSW 和 DK 都在中本聪团队 2016-05-02 Jon Matonis 发文认为 CSW 就是中本聪 Jon Matonis 得到了 CSW 关于注册 bitcoin.org 域名以及各种时间帖子到 BitcoinTalk 论坛的问题的令人满意的解释 2016-05-02 CSW 接受 BBC 采访，视频 CSW 称他的公司在被 KPMG(KPMG：毕马威为四大国际会计师事务所之一)审计，原因是他已经告诉 ATO 一切 税务局对比特币了解太少，所以 CSW 的律师针对这个问题在谈判 CSW 表示他不会接受任何奖项，包括诺贝尔，图灵。他不需要钱，不需要名望 CSW 不想承认自己是中本聪，因为他的家人，朋友，员工需要隐私，需要生活 他表示这是最后一次登上电视媒体，关于中本聪的身份 2016-05-03 05-02 号 CSW 博客公布的签名被质疑：CSW 使用了一个已经存在签名链接 1，链接 2，而没有使用给 Gavin 展示的 1 号块的私钥。 2016-05-03 Dan Kaminsky 向 Gavin Andresen 发邮件询问，Gavin Andresen 回复说：“我和其他人一样对这个 \"证据\" 感到惊讶，但我还不知道到底发生了什么”。 Gavin 认同 CSW 是中本聪的文章一直在，没被删除过。 2016-05-05 CSW 的博客文章 《保罗萨特，签名和意义》 内容更新： 我相信我能做到。我相信我可以把隐姓埋名的日子抛在脑后。但是，随着本周事件的发展，以及我准备发表获得最早私钥的证明，我崩溃了。我没有勇气。我不能。 谣言一开始，我就受到了多方的攻击。当这些指控被证明是假的时候，新的指控已经开始了。我现在知道我不够坚强，不能承受这一切。 我知道这个弱点会对那些支持我的人造成巨大的伤害，特别是对 Jon Matonis 和 Gavin Andresen。我只能希望他们的荣誉和信誉不会因我的行动而受到不可弥补的损害。 他们没有受到欺骗，但我知道，世界现在永远不会相信这一点。 我只能说对不起。 再见。 2016-06-30 Andrew O’Hagan 发表：the-satoshi-affair 中本聪事件，链接 1，中译 这篇文章信息量巨大，主观性很大，有许多事情需要其他印证。 2017 2017-02-08 CSW 获得查尔斯特大学的哲学博士学位，博士论文《信息系统风险的量化：了解对信息安全问题的定量响应》 2017-05-02 Jon Matonis 被 nchain 任命为新的企业战略副总裁，链接 1。于 2018-3 月离开 nchain。 2017-05-04 Ian Grigg 在博客发文 中本聪私钥很早就被移到一个安全的地方（在 2009 年左右，我不确定，我不在那里），因为原来的处于危险之中。之后，钥匙再次被移动到另一个地方（可能是 2013 年）。最后，他们又被转移。 再次强调中本聪是一个团队：它不是一个人：它是一个团队，而且是故意的，谨慎的，精心设置的。 2017-05-04 CSW 出现在 slack 交流，原文很长 为什么比特币总量是 2100w？ CSW：“参考全球 M1 总量 21 万亿美刀，M1 是狭义货币供应量” 比特币是否可以抵御量子攻击？CSW：“比特币使用双哈希算法，未使用的地址非常安全。所以只使用一次地址。而且使用量子计算机攻击比特币代价巨大” 2017-05-26 CSW 被老聂拉入和平饭店 QQ 群(这个群当时聚齐了国内的大矿工)，尝试说服中国矿工抵制 core 的 Segwit。2017 年 5 月 CSW 的 QQ 聊天记录（Quas 翻译) CSW 面对群里某些人的冷嘲热讽很冷静很有礼貌。遗憾的是，当时的矿工目光短浅，意识不到 Segwit 的巨大危害，这次游说以失败告终。CSW 想建立一个抵制 Segwit 的矿池的计划，也因为没有矿工的支持而失败。（当时中国矿工占据了算力的 70% 以上） 2017-06-30 CSW 复出。在荷兰比特币未来会议上演讲(必看)，中译，ppt 翻译。 内容关于小世界网络，图灵完备，脚本系统；批判了 RBF，隔离见证，社区氛围；阐述了比特币经济模型，应该以用户为王，需要发展二层应用，改进钱包便利性而不是折腾底层协议想着加新功能。 CSW 表示自己记录了从 2009 年 1 月开始到现在的比特币全网数据 CSW 同时表示澳洲税务局和 Blockstream 走的很近，并向他们询问了 CSW 在 2015 年 5 月的各种事情。与澳洲税务局有关的人已经被拘捕。CSW 称他的税务已经没有问题。 2017-07-13 CSW 在荷兰阿姆斯特丹举行的 iGaming 执行会议上演讲：Bitcoin's Smart Future 演讲内容就是当时未公布的 MetaNet。 2017-09-21 CSW 在塑造未来 Blockchain 全球峰会 - 香港技术会议上发表演讲：门限签名 2017-09-23 CSW 最早公开表示比特币 原始代码 中有扑克游戏 2017-10-14 nchain 和 BU 使用 CSW 之前开发的 iDaemon 节点软件在 Gigablock Testnet 上挖出了第一块 1GB 的块。链接 2017-10-24 CSW 出席瑞士比特币协会举办的 meetup 活动，发表了演讲 Hording, equity, and the end of debt and credit，附录：CSW 答网友问，来源 本次演讲有点专业，希望金融专业有看懂的补充一下 2017-11-06 CSW 发表 《调查使用比特币区块链作为世界互联网商务的主要基础设施的潜力》 论文。 CSW 在比特币内部测试网络，100 个节点上测试了 1G 大小的区块，共 380GB。 使用的 CSW 的 iDaemon 节点软件(后来的 Terranode)。 2017-11-30 CSW 以 nChain 首席科学家的身份展示了他的学术文凭和证书，装满了一辆手推车。视频。证书 PDF 2018 2018-02-26 Dvaid Kleiman 的亲戚告 CSW 案，卷宗 1，卷宗 2 等待结案，再分析证据。 2018-03-XX Jon Matonis 离开 nchain，因为不同意为比特币现金全力以赴的策略。 2018-03-25 CSW 在日本东京的 Satoshi 愿景会议演讲比特币网络拓扑：小世界网络，中文字幕 2018-05-09 CSW 在埃克塞特大学的演讲，关于比特币、比特币交易、经济、p2p。 2018-05-23 CSW 在首届 CoinGeek 大会上演讲关于原子交换：比特币的原子时代：令牌化和原子交换将如何改变数字商务。 2018-06-28 2018-06-28 之后的某个时间：14 年黑客事件：论坛提醒中本聪信息泄漏的回复被删除。 账户本人或论坛管理员才可以删除 2018-08-07 CSW 谈论到我谈论比特币的历史，图灵完整性，比特币的人工智能，加密货币和闪电网络的法律含义，以及更多。视频 2018-08-07 CSW 关于图灵完整性，采矿激励和自私采矿的采访 2018-11-29 中本聪在 P2P 基金会网站更新状态：\"nour\"，nour 在阿拉伯语中是光明的意思。 2018-11-30 CSW 发推阿拉伯语：光线追逐黑暗 2019 2019-02-08 CSW 发博文称比特币和 MetaNet 的设计始于 1998 年，并说明这与 Tim May 的无政府版的不同。CSW 表示对看到比特币被无政府主义用于丝绸之路等犯罪市场表示遗憾，被在文末说我曾是中本聪。原文：Careful what you wish for…，译文：比特币创世录一：事与愿违 2019-02-09 CSW 继续发文揭开比特币世界里不为人知的黑暗一面，并称自己现在有了足够的勇气坚持到底。他最后指出比特币（BSV）发行于 2009 年，BTC 则通过空投的方式发行于 2017 年。原文：The story of Bitcoin, continued，译文：比特币创世录二：亡羊补牢 2019-02-15 CFTC(美国商品期货交易委员会)向公众征询虚拟货币的知识和技术的意见。CSW 回复称自己曾经化名中本聪。PDF 文件中表示并且愿意宣誓作证。PDF 中译 CSW 用中本聪的化名完成一项工程，该工程始于 1997 年，作为澳大利亚工业计划的一部分，相关文件已向澳政府提交并注册，该计划初始命名为 BlackNet，后改名 MetaNet。 2019-05-22 美国版权局批准了 CSW 关于白皮书和比特币 0.1 版本代码的版权注册。版权号为：TXu002136996 和 TX0008708058 如果你不相信，请到法院起诉。 Source https://github.com/Time02/SatoshiTimeLine/blob/master/README.md new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 中本聪时间线 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"appendix/faq-of-bsv.html":{"url":"appendix/faq-of-bsv.html","title":"BitcoinSV 常见问题","keywords":"","body":"BitcoinSV 常见问题 Source 今天和大家分享一下自己作为一个一路见证比特币链上扩容在逐渐落实的 BSV 支持者，平时所看到的大家对 BSV 常见的一些问题并解答。 之前有过不少群友说 BSV 的分享太过于技术向不好理解，我将尽量试着以浅显的方式来回答。事实上，BSV 的理念与很多人之前所接受到的数字货币的概念大相径庭，也希望刚接触的人能以一个空杯的心态来面对，思考一下比特币的真正意义究竟何在。 BSV 是什么？ BSV（Bitcoin Satoshi Vision）是遵循中本聪白皮书原始设计和协议稳定的比特币，实现原定的大规模链上扩容愿景，旨在成为全球通用的点对点电子现金与价值数据传输网络。 换句话说，BSV 的支持者认为比特币经过十年考验的架构足够优秀，在去除人为设置的上限和恢复之前被禁用的 OP_CODE 后，比特币的协议并不需要其它改变，它可以通过自由竞争的方式茁状成长。 通过安全而稳定的链上持续扩容、通过比特币网络自身具备的独特优势，BSV 的愿景是最终成为全球唯一的公开账本，并成为下一代互联网 (Metanet) 的基石，使全球 50 亿人使用并从中受益。 诚然，有人对这样的方向存在质疑，认为这会让矿池变得更中心化，或者无法应对未来的变化。这些问题在下面的部分可以找到答案。 BSV 不是 BCH 的分叉币吗？为什么说 BSV 是比特币？ 首先大家要理解什么是分叉，为什么会分叉。 分叉是比特币的升级方式，分为两种：软分叉是指在区块链或去中心化网络中向前兼容的分叉；硬分叉则与之前的节点不兼容，需要统一部署升级。 比特币扩容之争持续了几年，由最初技术方案的争论演变成了一场观念之战，最后以 2017 年 8 月 Bitcoin Cash (BCH) 通过直接修改区块上限硬分叉、Bitcoin Core (BTC) 随后激活 Segwit 软分叉而分道扬镳。 一年之后，由于 ABC 团队执意在 BCH 中加入 DSV 操作符和 CTOR 排序方式，坚持保持原有协议的支持者推出了 Bitcoin SV 客户端。双方开始了争取矿工支持的算力战动员，最后 ABC 在客户端临时加入检查点机制逃避算力正面竞争，BCH 分成了 BCHABC 和 BCHSV 两链，随后不少交易所将前者命名为 BCH，后者命名为 BSV。 诚然，现在提到比特币时不少人会认为指的是 BTC，尽管它的实质已经变了。BSV 的支持者所支持的是保持比特币原有的协议架构的那条链，而不是交易所标识的 Ticker 名字。 BTC、BCH、BSV 三者本来出身平等，如今变成了三个平行发展并相互竞争的比特币，最终谁能胜出还有待观察。 BSV 和 BTC 或者 BCH 有什么不同？ 这三者有着相同的历史渊源，技术上存在部分差异，更多地是发展理念不同。 BTC：数字黄金 BCH：数字现金 BSV：数字货币以及这些交易所组成的信息价值网络 Metanet BSV 的发展理念是明确和专注的：恢复原始的中本聪协议，保持其稳定，并使其能够在链上大规模扩容。这是使比特币成为世界新货币（点对点电子现金系统）和服务于世界大型企业的全球公共分类账本的唯一途径。 海纳百川，有容乃大。BSV 的目标征途是星辰大海。 为什么 BSV 要这么 “激进” 地扩容？ 之所以显得” 激进 “，是因为之前浪费了太多的时间在扩容的争论之上，耽误了比特币的成长。按照中本聪的减半设计，矿工打包所获得比特币的出块奖励将逐渐由手续费代替，否则矿工在减半后无法有足够的奖励持续而离开，造成网络的安全性下降。 与 BTC 人为锁死 1M 上限不同，BSV 认为区块的上限应该由市场竞争而决定，并将于 2020 年 2 月完全取消区块上限，让矿工自己配置他们接受的区块大小。 矿工 (矿池) 之间组成了一个合作并竞争的小世界网络，这使得网络中出现超过平均处理能力的巨块时容易被其它矿工孤立，而落后的矿工则因处于劣势而逐渐淘汰，这个优胜劣汰的机制使得整个网络的处理能力能够不断得以提升。 BSV 是不是违背了区块链的去中心化精神？ 其实去中心化的迷思被以谬传谬了，以致于人们提及区块链就必言去中心化，却不去思考去中心化究竟是手段还是目的。 去中心化实际上有程度之分，3 个节点是去中心化，3 万个节点也是去中心化，这里面有着程度的不同。更重要的是，比特币的去中心化是给了其他人参与的自由。中本聪独自一个人挖了一年的初期，是不是一直中心化着呢？事实上在协议不变的情况下，这里的铸币权已经通过开放准入市场化竞争淘汰实现了去中心化。而权力的去中心化，才是真正的去中心化。 中本聪设计比特币，不是一个去中心化的货币系统，而是一个杀不死的货币系统。去中心化的目的是防止单一中央节点被摧毁，其代价是降低了效率。过于去中心化，会使得全网统筹协调、数据同步变得困难。因此存在一个平衡点，这个平衡点应该是市场去自动寻找，而不是像 Core 开发组那样人为强行限制。 长期来说，这个比例应该是趋向于恒定的，太低则网络不够安全，太高则网络太昂贵而让大众难以承受，最终市场会给出这个比例应该是多少。在这一方面，BSV 更相信自由市场竞争的力量。 把权力交给矿工是不是正确的选择？ Proof of Work (PoW) 的本质其实是将现实世界的芯片和电力，转换成一串虚拟世界的数字，这串数字极为难得，必须要靠消耗大量现实资源才能得到。也就是说，PoW 打通了现实和虚拟的转换通道。 这意味着控制了现实世界资源的人，将会在虚拟世界里获得同样的权力和资源，也就是说让现实世界里可以扼杀比特币的人在比特币的世界里获得竞争优势，他们就更有理由有动机成为比特币世界的朋友而不是敌人。 矿工是比特币世界的守护人，支持矿工才是真正的支持比特币，而那些希望削弱矿工的力量、希望修改算法追求所谓挖矿公平的人，其实是在斩断比特币系统的激励机制，从根本上破坏比特币的成长。 51% 攻击在比特币初期是人们经常担心的话题，随着挖矿越来越专业化，ASIC 的出现让矿机只能用于挖矿，这是术业有专攻的必然结果，也让生态参与者不得不考虑长期的利益更更加投资谨慎。 为什么 BSV 要对商业和政府友好？ 比特币是一个点对点的电子现金系统。它要服务于全人类，必然会与商务公司或政府国家有产生关联。作为货币，比特币本身是中性的。BSV 是一个透明公开的公共账本，通过不重用地址的方式足以保护用户个人隐私而非完全匿名不可查询。 比特币不是无政府主义的，尽管它在发展早期的确更容易受到无政府主义者的青眯。 比特币并不会阻止政府，但它能让政府承担责任，让公共事务变得更加透明。 如果政府部门使用比特币来进行记录，人们能够在政府部门发放资金时及时核算支出和报告结果，从根本上改变了代议制政府的性质。 在未来，享受福利的公民可以限制他们的购买力。 我们可以限制为房租和食物支付的税收，并确保人们提供教育他们的孩子，如果他们不这样做，那么他们可以用福利金做的事情就会受到限制。 政府内部使用的债券和融资方法可以被监测和追踪。 在一个具有代表性的社会，它将允许参与系统的人选择如何使用他们提交的钱。 未来，智能合同将允许来自社会许多方面的有条件付款。 智能合同和灯塔协议将取代许多现有的无用项目，人们认为这些项目无法获得资金。 公地将被控制和拥有，这些地区的成员将能够从维护好一个系统中获得好处，他们将能够追究滥用该系统的人的责任。 BSV 为什么要锁定底层协议？ 货币需要保持稳定，才能作为基础让人慢慢形成足够的信心。正如中本聪在 2010 年 6 月 17 日所说： 比特币的本质是，第 0.1 版一经发布，其核心设计即已固定，并在整个生命周期中保持不变。 这句话的意思是不是说不能做任何修改？ 当然不是，如果那样就太荒唐了。但是我们的确相信比特币与互联网一样，互联网所依赖的协议从诞生之初至今几乎没有什么变化，在这样的条件下还能让公司在互联网上可靠地开发各种应用程序和网站，因此比特币现金区块链技术也需要发展到同等水平。一份稳定可靠的协议不会每隔 3 到 6 个月就会引发开发者之间针对应当开发何种功能产生分歧，这种分歧对于任何人来说都没有好处。锁定底层协议，是为了避免开发者依据个人喜好为比特币增加华而不实的功能而陷入无止境的争论，让大家更集中精力于构建上层应用，让企业有明确的预期而能安心参与其中。这也是为什么我们提倡并且正在采取必要的措施逐步回归到原本的比特币协议，回归之后我们便可将这种协议固定下来，仅在人们提出至关重要的变化时对协议进行修订。但是我们必须为世界各大公司建立稳定的框架，然后在此基础之上发扬壮大。如果底层协议经常因开发团队的突发奇想而发生变更，那些全球大型企业，就不会投入大量时间和资源在比特币区块链上构建应用程序。 这就是为什么 BSV 只想恢复原始的中本聪协议，然后保持其稳定。此后任何重大的协议变更都应该是很少见的，并且只有在有力的共识和充分的测试下才能实施。开发人员可以随心所欲地进行试验；但他们应该在基础层上面进行，而不是改变基础。 BSV 提供的比特币协议坚如磬石，而非一盘散沙。凭借如此坚实的基础，全球企业可以放心地在 BSV 上构建稳健的应用、项目和投资 —— 正如放心地在长期稳定的互联网协议上构建一样。 另外，锁定底层协议不意味着节点客户端的实现受个体所控制，只要遵循相同的协议，任何人都可以自行开发或进行优化。 为什么 BitcoinSV 节点要修改开源协议为 Open BSV License？ 因为 BSV 的支持者大多数是 Bitcoin Maximalist，认为万链归一，其它的链是不必要的。 Open BSV License 明确要求代码只能在 BSV 链上使用，部分反对者认为这是固守自封阻碍创新。事实上，BSV 支持者鼓励的是在链上创新而不是试图修改底层协议分叉出去，因为不断统一目前处于分割状态的各种账本本身就能创造价值，这意味着更低的成本，更高的效率，以及更大的自由度。 Open BSV License 是免费向 BSV 应用开放的，更多详情可以参阅 Bitcoin Association 的声明 https://bitcoinassociation.net/open-bsv-license/ 另外，Open BSV License 并没有阻止今后在 BSV 上分叉的可能性，例如现在使用的加密算法可能在末来的某一天被攻破而需要硬分叉应对。但基于底层协议不再轻易改变的预期，未来分叉仅在系统遭遇严重安全漏洞并有足够的算力支持的情况下才会出现。 Metanet 是什么？为什么说 Bitcoin is everything？ 比特币的交易就像一堆的文件，散落在区块链上，Metanet 就像是文件夹，将这些交易有机地组织起来，让一切有了秩序，我们也可以将这些文件的组织信息，叫做元信息，这就是它为什么叫 Metanet 的原因之一。 Metanet 是基于 Bitcoin (SV) 的区块链系统的价值网络，在上面可以进行数据传输和存储，去中心化且不可被篡改。Metanet 的技术差异在于完全通过区块链交易存储和访问数据，其比当前互联网技术更具有安全性和经济效率优势。 Metanet 将实现分布网络内容的新方式，并促进比特币小额支付所带来的全新电子商务模式。这将使公司可以在点击、内容和数据上获得即时微支付。利用区块链的经济安全性和稳定性，Metanet 可以通过区块链支持的数据存储提供更高的数据质量和完整性来降低欺诈的可能性。 在 Metanet 的概念之下，BSV 上的各类交易将构成支撑所有互联网活动的全球公共账本。基于区块链的额外安全性、高效率和数据完整性，这是一个具有无限可能性的、令人振奋的新概念。 BSV 有什么钱包推荐 推荐使用以下几款钱包： 打点钱包。微信打开 https://www.ddpurse.com/ 或搜索公众号【打点钱包】即可使用，无需下载。 Simply.cash。界面简洁但功能齐全的开源钱包，支持离线操作，可到 https://simply.cash/ 下载。 MoneyButton。在线的托管钱包，国外不少 BSV 应用都有集成，可到 https://www.moneybutton.com/ 注册 以上三个钱包的教程，请在微信中搜索并关注公众号【Satoshi Vision】后找到。 BSV 有什么有意思的应用？ BSV 上面的发展日新月异，得益于底层协议维持不变的预期，现在上层应用层出不穷。大家可以到这里查看，https://www.agora.icu/ 大部分应用其实感觉和访问普通网页其实区别不大，虽然它们已经在链上 :) 个人更推荐开发者关注 unwriter 的 Planaria 项目，这里面有着许多让人耳目一新的新想法 https://www.planaria.network/#/ 现在的 Metanet 这个信息价值网络，就像本世纪初刚刚发展的互联网，有着很多东西等着大家在上面实现： 能以隐私身分实时安全地授权访问网页内容、社交媒体账户以及分布系统 互联网搜索、信息和内容服务依赖于用户的微支付而不是传统的广告模式 实时和安全的内容及数字资产按使用付费的商业模式 集成的钱包系统，实现无缝的用户整合和体验 采购产品的自动合同和分销（数子的和实体的） 以可验证和可追溯的方式进行实时供应链管理 无格式和实时保险单的自动化 安全和实时的活动门票、交通和酒店预订 …… CSW 是不是中本聪？为什么这么多人说他是骗子而你们还坚持相信他？ 一句话：CSW 现在是薛定谔的中本聪 这个话题众说纷纭，但有几点是需要明确的： 【中本聪】这个名字是一个代号，背后是一个人或一个小团体 【中本聪背后是谁】是即成的事实，这件事不会因为现在任何人的所做所为而改变 【比特币白皮书和初期代码的版权】属于中本聪，相关的构思创作在公布之前，比特币创世块私钥出现于初期代码之后 明确上面几点后，可以自行去 https://github.com/Time02/SatoshiTimeLine 考证中本聪时间线中的相关信息，再思考下为什么会有这么多人相信他的问题吧。 绝大多数咬定 CSW 是骗子的人都是人云亦云，根本没有认真去查证过背后的情况，甚至认为网络上看到的只言片语是就是事实的真相，或许终究有一天会明白 Metanet 让一切不可篡改有迹可循的意义吧 :) 既然说 BSV 是比特币，为什么币价这么低？ 谁告诉你比特币一定能赚钱的？ 我想了解更多 BSV 的信息，应该怎么做？ 首先，请持续保持一份开放的学习心态，因为你以前所接触到的比特币和区块链的信息，可能全是错误的 :) 如果你刚接触 BSV，建议先将 https://imcoddy.github.io/bitcoin-cash-note/archives/ 上的文章按顺序全看一遍，明白 BSV 支持者支持的原因 如果你想更系统地了解 BSV 的相关知识，欢迎访问 http://1bsv.cn/ https://bitsv.club/ 等网站的精华帖子 如果你想更深入探讨 BSV 的各种潜力，欢迎围观 BitcoinSV 骷髅会 https://svskull.club/ 网站。 我们欢迎各类 builder 加入 BSV 这个全新的舞台来充分展示自己的实力 :P new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 BitcoinSV 常见问题 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"appendix/bitcoin-whitepaper.html":{"url":"appendix/bitcoin-whitepaper.html","title":"比特币白皮书","keywords":"","body":"比特币白皮书 英文原版 https://bitcoinsv.io/bitcoin.pdf 中文翻译版 https://nakamotoinstitute.org/static/docs/bitcoin-zh-cn.pdf 中本聪实名版 https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3440802 美国版权局信息：https://cocatalog.loc.gov/cgi-bin/Pwebrecon.cgi?v1=1&ti=1,1&Search_Arg=txu002136996&Search_Code=REGS&CNT=25&PID=z6rD9AWC1Sf9QzFYm0eDvP9LsJf94&SEQ=20190921085425&SID=1 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 比特币白皮书 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"appendix/guide.html":{"url":"appendix/guide.html","title":"编写指南","keywords":"","body":"编写指南 本地预览 本书可用 Gitbook 编译生成网页版浏览阅读，命令如下： $ npm install -g gitbook-cli $ gitbook install $ gitbook serve 随后可打开 http://localhost:4000/ 浏览。 文档编辑 本项目使用 Markdown (更准确地说是 GitHub Flavored Markdown, GFM) 的格式编写，可选择 Typora 或者其它的 Markdown 编辑器进行修改。对于 Markdown 不了解的请参阅这份 简明指南。 本项目还支持使用 mathjax 公式渲染。由于 GitHub 本身不对公式进行渲染，无法正常显示的可以安装 GitHub with MathJax 插件，以获得良好的阅读体验。 排版指南 本项目建议参照 中文文案排版指北 的排版规范，主要采种下列几点： 中英文之间需要增加空格 中文与数字之间需要增加空格 全角标点与其他字符之间不加空格 数字使用半角字符 专有名词使用正确的大小写 图片添加 图片统一添加到项目根目录的 images 文件夹，命名方式根据图片的内容，以全小写英文的方式命名，如 double-spending-problem.png。如果需进一步区分，可增加所在章节的前缀，如 transaction-double-spending-problem.png。 引用图片的方式建议增加 Alt Text，如 ![Double Spending Problem](/images/double-spending-problem.png) 由于 Markdown 默认显示全宽图片无法指定大小，如果需要特别指定图片大小的场景，建议使用 HTML 代码来指定大小和居中布局。 ![alt-text-for-image](/images/double-spending-problem.png) 提交流程 本项目欢迎读者直接在 GitHub 上提交勘误，也可以发至邮箱 imcoddy@gmail.com 反馈。 请先将本项目 fork 至自己的 GitHub 帐户里面，并添加本项目为 upstream 以便能及时获取最近的更新： $ git remote add upstream https://github.com/imcoddy/rebirth-of-bitcoin.git 每次编辑时从 develop 新建 feature/summary-of-modification 的新分支提交 Pullrequest。具体的操作方式如下： $ git checkout develop $ git pull upstream develop $ git checkout -b feature/new-summary-of-modification (自行根据需要修改为合适的名称) 提交时直接将 feature/summary-of-modification 向 imcoddy/rebirth-of-bitcoin 的 develop 分支提交 Pullrequest 即可。 new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 编写指南 |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"},"GLOSSARY.html":{"url":"GLOSSARY.html","keywords":"","body":"词汇表 Bitcoin bitcoin transaction new Valine({el: \"#vcomments\",appId: 'cOEhusjIvF2miHty5CGF9tXD-MdYXbMMI',appKey: 'Yzbo1Aw1oSMT6cjGi6nLe9k0',placeholder: '说说你学到了比特币的什么新知识吧',avatar: 'identicon',meta: undefined,pageSize: 10,lang: 'zh-CN',recordIP: false}) ©2020 - Metanet.Press 版权所有打赏: 1EpJq7XMkbwgSAsJ5raRmohYbYDwPAE4K3 undefined |「比特币重生计划：重返创世纪」Metanet.Press Metanet,Metanet.Press,Metanet Press,BSV,邱少闲聊,邱少贤,邱少贤撩Metanet,邱少闲聊Metanet,BSV社区,BitcoinSV社区,BitcoinSV,BTC,BCH,Bitcoin,SvSkull,骷髅会,比特币,Satoshi,Craig,CSW,比特币现金,比特币SV,区块链,中本聪愿景,BSV是什么,比特币是什么"}}